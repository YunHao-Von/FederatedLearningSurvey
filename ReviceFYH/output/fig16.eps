%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: <4FEE><6539>3.0.pdf
%%Creator: Adobe Acrobat 20.6.0
%%For: A
%%CreationDate: 2023/9/20, 11:00:39
%%BoundingBox: 0 0 1015 720
%%HiResBoundingBox: 0 0 1014.1143 719.1305
%%CropBox: 0 0 1014.1143 719.1305
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1287 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c016 91.163616, 2018/10/29-16:58:49        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   dc:format="application/pdf"
   pdfx:Comments=""
   pdfx:Company=""
   pdfx:SourceModified="D:20230920101548+02'15'"
   xmp:CreateDate="2023-09-20T10:15:48+02:00"
   xmp:CreatorTool="WPS 演示"
   xmp:ModifyDate="2023-09-20T10:34:31+08:00"
   xmp:MetadataDate="2023-09-20T10:34:31+08:00"
   pdf:Keywords=""
   pdf:Producer=""
   pdf:Trapped="False"
   xmpMM:DocumentID="uuid:2c2b7a9c-fd1c-48e7-a8f3-4101ebcf3fc0"
   xmpMM:InstanceID="uuid:1be60ad7-ce35-4353-8733-5d405a19ea09">
   <dc:creator>
    <rdf:Seq>
     <rdf:li/>
    </rdf:Seq>
   </dc:creator>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:description>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 13 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -719.13 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 719.13 li
1014.11 719.13 li
1014.11 0 li
cp
clp
gsave
-68.9458 -45.382 mo
1064.9 -45.382 li
1064.9 804.968 li
-68.9458 804.968 li
cp
eclp
-68.9458 -45.382 mo
1064.93 -45.382 li
1064.93 804.938 li
-68.9458 804.938 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
ef
199.614 157.898 mo
199.637 148.722 207.103 141.256 216.313 141.256 cv
225.523 141.256 232.989 148.722 232.989 157.932 cv
232.989 167.141 225.523 174.607 216.313 174.607 cv
207.103 174.607 199.637 167.141 199.614 157.898 cv
.92929 .879301 .889677 .799283 cmyk
ef
199.143 157.488 mo
199.16 157.048 li
199.187 156.611 li
199.226 156.176 li
199.275 155.745 li
199.336 155.313 li
199.486 154.47 li
199.678 153.639 li
199.909 152.824 li
200.18 152.026 li
200.487 151.246 li
200.831 150.485 li
201.211 149.744 li
201.624 149.025 li
202.071 148.328 li
202.55 147.655 li
203.06 147.006 li
203.599 146.383 li
204.168 145.786 li
204.764 145.218 li
205.387 144.678 li
206.036 144.168 li
206.71 143.689 li
207.407 143.242 li
208.126 142.829 li
208.866 142.449 li
209.627 142.105 li
210.408 141.798 li
211.206 141.528 li
212.021 141.296 li
212.852 141.104 li
213.695 140.954 li
214.126 140.894 li
214.558 140.844 li
214.992 140.806 li
215.43 140.778 li
215.87 140.761 li
216.313 140.756 li
216.756 140.761 li
217.197 140.778 li
217.634 140.806 li
218.069 140.844 li
218.5 140.894 li
218.931 140.954 li
219.774 141.104 li
220.605 141.296 li
221.421 141.528 li
222.219 141.798 li
222.999 142.105 li
223.76 142.449 li
224.501 142.829 li
225.22 143.242 li
225.917 143.689 li
226.59 144.168 li
227.239 144.678 li
227.862 145.218 li
228.459 145.786 li
229.027 146.383 li
229.567 147.006 li
230.077 147.655 li
230.556 148.328 li
231.002 149.025 li
231.416 149.744 li
231.795 150.485 li
232.139 151.246 li
232.447 152.026 li
232.717 152.824 li
232.949 153.639 li
233.14 154.47 li
233.291 155.313 li
233.351 155.745 li
233.4 156.176 li
233.439 156.611 li
233.467 157.048 li
233.484 157.488 li
233.489 157.932 li
233.484 158.375 li
233.467 158.815 li
233.439 159.252 li
233.4 159.687 li
233.351 160.118 li
233.291 160.55 li
233.14 161.393 li
232.949 162.224 li
232.717 163.039 li
232.447 163.837 li
232.139 164.617 li
231.795 165.378 li
231.416 166.119 li
231.002 166.838 li
230.556 167.535 li
230.077 168.208 li
229.567 168.857 li
229.027 169.48 li
228.459 170.077 li
227.862 170.645 li
227.239 171.185 li
226.59 171.695 li
225.917 172.174 li
225.22 172.621 li
224.501 173.034 li
223.76 173.414 li
222.999 173.758 li
222.219 174.065 li
221.421 174.335 li
220.605 174.567 li
219.774 174.759 li
218.931 174.909 li
218.5 174.969 li
218.069 175.019 li
217.634 175.057 li
217.197 175.085 li
216.756 175.102 li
216.313 175.107 li
215.87 175.102 li
215.43 175.085 li
214.992 175.057 li
214.558 175.019 li
214.126 174.969 li
213.695 174.909 li
212.852 174.759 li
212.021 174.567 li
211.206 174.335 li
210.408 174.065 li
209.627 173.758 li
208.866 173.414 li
208.126 173.034 li
207.407 172.621 li
206.71 172.174 li
206.036 171.695 li
205.387 171.185 li
204.764 170.645 li
204.168 170.077 li
203.599 169.48 li
203.06 168.857 li
202.55 168.208 li
202.071 167.535 li
201.624 166.838 li
201.211 166.119 li
200.831 165.378 li
200.487 164.617 li
200.18 163.837 li
199.909 163.039 li
199.678 162.224 li
199.486 161.393 li
199.336 160.55 li
199.275 160.118 li
199.226 159.687 li
199.187 159.252 li
199.16 158.815 li
199.143 158.375 li
199.137 157.932 li
199.143 157.488 li
cp
200.137 157.938 mo
200.137 157.925 li
200.143 158.356 li
200.142 158.343 li
200.159 158.771 li
200.158 158.758 li
200.185 159.183 li
200.184 159.17 li
200.222 159.592 li
200.22 159.58 li
200.268 159.999 li
200.267 159.986 li
200.325 160.402 li
200.322 160.383 li
200.468 161.204 li
200.463 161.18 li
200.65 161.987 li
200.643 161.962 li
200.868 162.754 li
200.861 162.73 li
201.123 163.505 li
201.114 163.482 li
201.413 164.239 li
201.403 164.217 li
201.737 164.955 li
201.727 164.933 li
202.095 165.652 li
202.084 165.631 li
202.485 166.329 li
202.473 166.309 li
202.906 166.985 li
202.893 166.965 li
203.358 167.619 li
203.343 167.6 li
203.838 168.23 li
203.823 168.212 li
204.347 168.817 li
204.331 168.799 li
204.883 169.378 li
204.867 169.361 li
205.446 169.913 li
205.428 169.897 li
206.033 170.421 li
206.015 170.406 li
206.645 170.901 li
206.626 170.887 li
207.279 171.352 li
207.259 171.338 li
207.936 171.772 li
207.915 171.76 li
208.614 172.161 li
208.592 172.15 li
209.311 172.518 li
209.29 172.507 li
210.028 172.841 li
210.006 172.832 li
210.763 173.13 li
210.74 173.122 li
211.515 173.384 li
211.491 173.377 li
212.282 173.601 li
212.258 173.595 li
213.065 173.781 li
213.04 173.776 li
213.862 173.923 li
213.843 173.92 li
214.259 173.978 li
214.246 173.977 li
214.665 174.025 li
214.652 174.023 li
215.074 174.061 li
215.062 174.06 li
215.487 174.087 li
215.474 174.086 li
215.902 174.102 li
215.889 174.102 li
216.32 174.107 li
216.307 174.107 li
216.737 174.102 li
216.725 174.102 li
217.152 174.086 li
217.14 174.087 li
217.565 174.06 li
217.552 174.061 li
217.974 174.023 li
217.961 174.025 li
218.38 173.977 li
218.368 173.978 li
218.784 173.92 li
218.765 173.923 li
219.586 173.776 li
219.562 173.781 li
220.368 173.595 li
220.344 173.601 li
221.136 173.377 li
221.112 173.384 li
221.887 173.122 li
221.864 173.13 li
222.621 172.832 li
222.598 172.841 li
223.337 172.507 li
223.315 172.518 li
224.034 172.15 li
224.013 172.161 li
224.711 171.76 li
224.69 171.772 li
225.367 171.338 li
225.347 171.352 li
226.001 170.887 li
225.982 170.901 li
226.612 170.406 li
226.593 170.421 li
227.198 169.897 li
227.181 169.913 li
227.76 169.361 li
227.743 169.378 li
228.295 168.799 li
228.279 168.817 li
228.803 168.212 li
228.788 168.23 li
229.283 167.6 li
229.269 167.619 li
229.734 166.965 li
229.72 166.985 li
230.154 166.309 li
230.141 166.329 li
230.543 165.631 li
230.531 165.652 li
230.9 164.933 li
230.889 164.955 li
231.223 164.217 li
231.213 164.239 li
231.512 163.482 li
231.504 163.505 li
231.766 162.73 li
231.758 162.754 li
231.983 161.962 li
231.977 161.987 li
232.163 161.18 li
232.158 161.204 li
232.305 160.383 li
232.302 160.402 li
232.36 159.986 li
232.358 159.999 li
232.406 159.58 li
232.405 159.592 li
232.442 159.17 li
232.441 159.183 li
232.468 158.758 li
232.468 158.771 li
232.484 158.343 li
232.484 158.356 li
232.489 157.925 li
232.489 157.938 li
232.484 157.507 li
232.484 157.52 li
232.468 157.092 li
232.468 157.105 li
232.441 156.68 li
232.442 156.693 li
232.405 156.271 li
232.406 156.283 li
232.358 155.864 li
232.36 155.877 li
232.302 155.461 li
232.305 155.48 li
232.158 154.659 li
232.163 154.683 li
231.977 153.876 li
231.983 153.901 li
231.758 153.109 li
231.766 153.133 li
231.504 152.358 li
231.512 152.381 li
231.213 151.624 li
231.223 151.646 li
230.889 150.908 li
230.9 150.93 li
230.531 150.211 li
230.543 150.232 li
230.141 149.534 li
230.154 149.554 li
229.72 148.878 li
229.734 148.898 li
229.269 148.244 li
229.283 148.263 li
228.788 147.633 li
228.803 147.651 li
228.279 147.046 li
228.295 147.064 li
227.743 146.485 li
227.76 146.502 li
227.181 145.95 li
227.198 145.966 li
226.593 145.442 li
226.612 145.457 li
225.982 144.962 li
226.001 144.976 li
225.347 144.511 li
225.367 144.525 li
224.69 144.091 li
224.711 144.103 li
224.013 143.702 li
224.034 143.713 li
223.315 143.345 li
223.337 143.356 li
222.598 143.022 li
222.621 143.031 li
221.864 142.733 li
221.887 142.741 li
221.112 142.479 li
221.136 142.486 li
220.344 142.262 li
220.368 142.268 li
219.562 142.082 li
219.586 142.087 li
218.765 141.94 li
218.784 141.943 li
218.368 141.885 li
218.38 141.886 li
217.961 141.838 li
217.974 141.84 li
217.552 141.802 li
217.565 141.803 li
217.14 141.776 li
217.152 141.777 li
216.725 141.761 li
216.737 141.761 li
216.307 141.756 li
216.32 141.756 li
215.889 141.761 li
215.902 141.761 li
215.474 141.777 li
215.487 141.776 li
215.062 141.803 li
215.074 141.802 li
214.652 141.84 li
214.665 141.838 li
214.246 141.886 li
214.259 141.885 li
213.843 141.943 li
213.862 141.94 li
213.04 142.087 li
213.065 142.082 li
212.258 142.268 li
212.282 142.262 li
211.491 142.486 li
211.515 142.479 li
210.74 142.741 li
210.763 142.733 li
210.006 143.031 li
210.028 143.022 li
209.29 143.356 li
209.311 143.345 li
208.592 143.713 li
208.614 143.702 li
207.915 144.103 li
207.936 144.091 li
207.259 144.525 li
207.279 144.511 li
206.626 144.976 li
206.645 144.962 li
206.015 145.457 li
206.033 145.442 li
205.428 145.966 li
205.446 145.95 li
204.867 146.502 li
204.883 146.485 li
204.331 147.064 li
204.347 147.046 li
203.823 147.651 li
203.838 147.633 li
203.343 148.263 li
203.358 148.244 li
202.893 148.898 li
202.906 148.878 li
202.473 149.554 li
202.485 149.534 li
202.084 150.232 li
202.095 150.211 li
201.727 150.93 li
201.737 150.908 li
201.403 151.646 li
201.413 151.624 li
201.114 152.381 li
201.123 152.358 li
200.861 153.133 li
200.868 153.109 li
200.643 153.901 li
200.65 153.876 li
200.463 154.683 li
200.468 154.659 li
200.322 155.48 li
200.325 155.461 li
200.267 155.877 li
200.268 155.864 li
200.22 156.283 li
200.222 156.271 li
200.184 156.693 li
200.185 156.68 li
200.158 157.105 li
200.159 157.092 li
200.142 157.52 li
200.143 157.507 li
200.137 157.938 li
f
188.094 212.498 mo
188.094 196.898 li
188.037 188.254 201.973 181.258 219.163 181.258 cv
236.354 181.258 250.29 188.254 250.254 196.898 cv
250.254 212.498 li
188.094 212.498 li
ef
187.537 196.877 mo
187.547 196.455 li
187.58 196.029 li
187.633 195.606 li
187.707 195.187 li
187.802 194.771 li
187.917 194.358 li
188.052 193.95 li
188.206 193.546 li
188.379 193.146 li
188.572 192.75 li
188.782 192.36 li
189.011 191.974 li
189.257 191.592 li
189.521 191.216 li
189.802 190.845 li
190.1 190.479 li
190.415 190.118 li
190.745 189.763 li
191.092 189.413 li
191.454 189.068 li
191.832 188.729 li
192.225 188.396 li
192.632 188.068 li
193.057 187.744 li
193.942 187.119 li
194.884 186.517 li
195.881 185.939 li
196.929 185.388 li
198.027 184.862 li
199.172 184.364 li
200.364 183.894 li
201.599 183.453 li
202.877 183.042 li
204.195 182.661 li
205.551 182.313 li
206.944 181.997 li
208.371 181.714 li
209.83 181.466 li
211.32 181.254 li
212.839 181.078 li
214.383 180.939 li
215.167 180.884 li
215.955 180.839 li
216.749 180.804 li
217.549 180.778 li
218.354 180.763 li
219.163 180.758 li
219.973 180.763 li
220.778 180.778 li
221.577 180.804 li
222.371 180.839 li
223.16 180.884 li
223.943 180.939 li
225.488 181.078 li
227.006 181.254 li
228.497 181.466 li
229.956 181.714 li
231.383 181.997 li
232.776 182.313 li
234.132 182.661 li
235.45 183.042 li
236.727 183.453 li
237.963 183.894 li
239.154 184.364 li
240.3 184.862 li
241.398 185.388 li
242.446 185.939 li
243.442 186.517 li
244.385 187.119 li
245.27 187.744 li
245.695 188.068 li
246.102 188.396 li
246.495 188.729 li
246.873 189.068 li
247.235 189.413 li
247.581 189.763 li
247.912 190.118 li
248.226 190.479 li
248.524 190.845 li
248.805 191.216 li
249.069 191.592 li
249.316 191.974 li
249.544 192.36 li
249.755 192.75 li
249.947 193.146 li
250.121 193.546 li
250.275 193.95 li
250.41 194.358 li
250.525 194.771 li
250.619 195.187 li
250.694 195.606 li
250.747 196.029 li
250.779 196.455 li
250.79 196.877 li
250.79 213.009 li
187.537 213.009 li
187.537 196.877 li
cp
188.537 212.509 mo
188.037 212.009 li
250.29 212.009 li
249.79 212.509 li
249.79 196.884 li
249.79 196.896 li
249.78 196.493 li
249.781 196.518 li
249.751 196.117 li
249.753 196.142 li
249.703 195.744 li
249.707 195.768 li
249.637 195.373 li
249.642 195.397 li
249.552 195.004 li
249.558 195.028 li
249.45 194.638 li
249.456 194.661 li
249.329 194.274 li
249.337 194.296 li
249.19 193.913 li
249.199 193.933 li
249.034 193.554 li
249.043 193.573 li
248.86 193.197 li
248.87 193.216 li
248.669 192.843 li
248.679 192.861 li
248.46 192.492 li
248.471 192.508 li
248.235 192.143 li
248.245 192.159 li
247.992 191.798 li
248.003 191.813 li
247.732 191.456 li
247.743 191.47 li
247.456 191.117 li
247.467 191.13 li
247.163 190.781 li
247.174 190.793 li
246.854 190.45 li
246.865 190.461 li
246.529 190.122 li
246.54 190.132 li
246.188 189.798 li
246.199 189.807 li
245.832 189.478 li
245.842 189.487 li
245.46 189.162 li
245.47 189.171 li
245.073 188.851 li
245.083 188.859 li
244.671 188.545 li
244.686 188.555 li
243.818 187.943 li
243.837 187.956 li
242.913 187.365 li
242.931 187.377 li
241.953 186.81 li
241.971 186.82 li
240.94 186.277 li
240.957 186.285 li
239.876 185.768 li
239.893 185.776 li
238.763 185.284 li
238.779 185.291 li
237.603 184.827 li
237.619 184.833 li
236.398 184.397 li
236.413 184.402 li
235.15 183.996 li
235.165 184 li
233.861 183.624 li
233.876 183.628 li
232.533 183.283 li
232.547 183.286 li
231.169 182.973 li
231.182 182.976 li
229.769 182.696 li
229.782 182.699 li
228.336 182.453 li
228.349 182.455 li
226.872 182.245 li
226.885 182.246 li
225.379 182.072 li
225.392 182.073 li
223.859 181.936 li
223.869 181.937 li
223.093 181.882 li
223.099 181.882 li
222.317 181.838 li
222.324 181.838 li
221.536 181.803 li
221.542 181.803 li
220.749 181.778 li
220.756 181.778 li
219.957 181.763 li
219.964 181.763 li
219.16 181.758 li
219.167 181.758 li
218.363 181.763 li
218.369 181.763 li
217.571 181.778 li
217.577 181.778 li
216.784 181.803 li
216.791 181.803 li
216.003 181.838 li
216.009 181.838 li
215.228 181.882 li
215.234 181.882 li
214.458 181.937 li
214.468 181.936 li
212.935 182.073 li
212.948 182.072 li
211.442 182.246 li
211.455 182.245 li
209.978 182.455 li
209.991 182.453 li
208.545 182.699 li
208.558 182.696 li
207.145 182.976 li
207.158 182.973 li
205.779 183.286 li
205.793 183.283 li
204.451 183.628 li
204.465 183.624 li
203.162 184 li
203.176 183.996 li
201.913 184.402 li
201.928 184.397 li
200.708 184.833 li
200.723 184.827 li
199.547 185.291 li
199.563 185.284 li
198.434 185.776 li
198.45 185.768 li
197.369 186.285 li
197.386 186.277 li
196.356 186.82 li
196.374 186.81 li
195.395 187.377 li
195.414 187.365 li
194.49 187.956 li
194.509 187.943 li
193.641 188.555 li
193.656 188.545 li
193.244 188.859 li
193.254 188.851 li
192.856 189.171 li
192.867 189.162 li
192.484 189.487 li
192.495 189.478 li
192.128 189.807 li
192.138 189.798 li
191.787 190.132 li
191.797 190.122 li
191.462 190.461 li
191.472 190.45 li
191.152 190.793 li
191.163 190.781 li
190.86 191.13 li
190.871 191.117 li
190.584 191.47 li
190.594 191.456 li
190.324 191.813 li
190.335 191.798 li
190.081 192.159 li
190.092 192.143 li
189.856 192.508 li
189.866 192.492 li
189.648 192.861 li
189.658 192.843 li
189.457 193.216 li
189.466 193.197 li
189.283 193.573 li
189.292 193.554 li
189.128 193.933 li
189.136 193.913 li
188.99 194.296 li
188.998 194.274 li
188.87 194.661 li
188.877 194.638 li
188.768 195.028 li
188.774 195.004 li
188.685 195.397 li
188.69 195.373 li
188.62 195.768 li
188.624 195.744 li
188.573 196.142 li
188.576 196.117 li
188.545 196.518 li
188.547 196.493 li
188.537 196.896 li
188.537 196.884 li
188.537 212.509 li
f
537.174 430.538 mo
537.147 426.814 540.051 423.772 543.633 423.772 cv
547.216 423.772 550.12 426.814 550.12 430.567 cv
550.12 434.319 547.216 437.361 543.633 437.361 cv
540.051 437.361 537.147 434.319 537.174 430.538 cv
0 .9617 .904814 0 cmyk
ef
537.174 466.178 mo
537.147 462.462 540.051 459.42 543.633 459.42 cv
547.216 459.42 550.12 462.462 550.12 466.215 cv
550.12 469.967 547.216 473.009 543.633 473.009 cv
540.051 473.009 537.147 469.967 537.174 466.178 cv
ef
587.694 396.098 mo
587.714 392.402 590.618 389.36 594.2 389.36 cv
597.782 389.36 600.686 392.402 600.686 396.154 cv
600.686 399.906 597.782 402.948 594.2 402.948 cv
590.618 402.948 587.714 399.906 587.694 396.098 cv
ef
586.854 430.538 mo
586.831 426.814 589.735 423.772 593.317 423.772 cv
596.9 423.772 599.804 426.814 599.804 430.567 cv
599.804 434.319 596.9 437.361 593.317 437.361 cv
589.735 437.361 586.831 434.319 586.854 430.538 cv
ef
586.854 465.098 mo
586.831 461.315 589.735 458.273 593.317 458.273 cv
596.9 458.273 599.804 461.315 599.804 465.068 cv
599.804 468.82 596.9 471.862 593.317 471.862 cv
589.735 471.862 586.831 468.82 586.854 465.098 cv
.710994 0 .87924 0 cmyk
ef
586.494 499.898 mo
586.478 496.169 589.382 493.127 592.964 493.127 cv
596.547 493.127 599.451 496.169 599.451 499.922 cv
599.451 503.674 596.547 506.716 592.964 506.716 cv
589.382 506.716 586.478 503.674 586.494 499.898 cv
0 .9617 .904814 0 cmyk
ef
641.934 430.538 mo
641.986 426.814 644.89 423.772 648.473 423.772 cv
652.055 423.772 654.959 426.814 654.959 430.567 cv
654.959 434.319 652.055 437.361 648.473 437.361 cv
644.89 437.361 641.986 434.319 641.934 430.538 cv
ef
642.894 466.418 mo
642.869 462.639 645.773 459.597 649.355 459.597 cv
652.937 459.597 655.841 462.639 655.841 466.391 cv
655.841 470.144 652.937 473.185 649.355 473.185 cv
645.773 473.185 642.869 470.144 642.894 466.418 cv
ef
548.358 426.042 mo
587.894 396.394 li
587.534 395.914 li
547.998 425.562 li
548.358 426.042 li
.92929 .879301 .889677 .799283 cmyk
f
548.215 425.504 mo
586.868 430.269 li
586.794 430.864 li
548.142 426.1 li
548.215 425.504 li
f
548.392 425.591 mo
587.045 464.769 li
586.618 465.19 li
547.965 426.013 li
548.392 425.591 li
f
548.446 425.666 mo
588.599 504.55 li
588.064 504.822 li
547.911 425.938 li
548.446 425.666 li
f
550.296 466.268 mo
587.89 396.296 li
587.361 396.012 li
549.767 465.984 li
550.296 466.268 li
f
550.24 466.342 mo
587.04 430.782 li
586.623 430.351 li
549.823 465.911 li
550.24 466.342 li
f
550.041 466.426 mo
586.84 465.279 li
586.822 464.68 li
550.022 465.827 li
550.041 466.426 li
f
550.244 465.915 mo
588.544 504.475 li
588.118 504.898 li
549.819 466.338 li
550.244 465.915 li
f
600.856 395.907 mo
644.098 425.554 li
643.758 426.049 li
600.516 396.401 li
600.856 395.907 li
f
599.836 430.865 mo
643.96 426.1 li
643.896 425.504 li
599.771 430.268 li
599.836 430.865 li
f
598.13 460.455 mo
644.108 426.042 li
643.748 425.562 li
597.771 459.974 li
598.13 460.455 li
f
599.62 500.076 mo
644.097 425.956 li
643.582 425.647 li
599.105 499.767 li
599.62 500.076 li
f
600.935 395.987 mo
644.971 461.459 li
644.473 461.794 li
600.437 396.321 li
600.935 395.987 li
f
599.985 430.328 mo
645.256 464.652 li
644.894 465.13 li
599.622 430.806 li
599.985 430.328 li
f
597.986 459.917 mo
643.964 465.476 li
643.892 466.071 li
597.914 460.512 li
597.986 459.917 li
f
599.546 500.159 mo
642.964 466.629 li
642.597 466.154 li
599.179 499.684 li
599.546 500.159 li
f
204.174 471.818 mo
204.202 462.652 211.668 455.186 220.878 455.186 cv
230.088 455.186 237.554 462.652 237.554 471.862 cv
237.554 481.072 230.088 488.538 220.878 488.538 cv
211.668 488.538 204.202 481.072 204.174 471.818 cv
ef
203.708 471.419 mo
203.725 470.978 li
203.752 470.541 li
203.791 470.106 li
203.84 469.675 li
203.901 469.244 li
204.051 468.401 li
204.243 467.57 li
204.474 466.754 li
204.745 465.956 li
205.052 465.176 li
205.396 464.415 li
205.776 463.674 li
206.189 462.955 li
206.636 462.258 li
207.115 461.585 li
207.625 460.936 li
208.164 460.313 li
208.733 459.717 li
209.329 459.148 li
209.952 458.608 li
210.601 458.098 li
211.275 457.619 li
211.971 457.173 li
212.691 456.759 li
213.431 456.38 li
214.192 456.036 li
214.973 455.728 li
215.771 455.458 li
216.586 455.227 li
217.417 455.035 li
218.26 454.884 li
218.691 454.824 li
219.123 454.775 li
219.557 454.736 li
219.995 454.708 li
220.435 454.691 li
220.878 454.686 li
221.321 454.691 li
221.762 454.708 li
222.199 454.736 li
222.634 454.775 li
223.065 454.824 li
223.496 454.884 li
224.339 455.035 li
225.17 455.227 li
225.986 455.458 li
226.784 455.728 li
227.564 456.036 li
228.325 456.38 li
229.066 456.759 li
229.785 457.173 li
230.482 457.619 li
231.155 458.098 li
231.804 458.608 li
232.427 459.148 li
233.023 459.717 li
233.592 460.313 li
234.132 460.936 li
234.642 461.585 li
235.121 462.258 li
235.567 462.955 li
235.981 463.674 li
236.36 464.415 li
236.704 465.176 li
237.012 465.956 li
237.282 466.754 li
237.513 467.57 li
237.705 468.401 li
237.856 469.244 li
237.916 469.675 li
237.965 470.106 li
238.004 470.541 li
238.032 470.978 li
238.049 471.419 li
238.054 471.862 li
238.049 472.305 li
238.032 472.745 li
238.004 473.183 li
237.965 473.617 li
237.916 474.049 li
237.856 474.48 li
237.705 475.323 li
237.513 476.154 li
237.282 476.969 li
237.012 477.767 li
236.704 478.548 li
236.36 479.309 li
235.981 480.049 li
235.567 480.769 li
235.121 481.465 li
234.642 482.139 li
234.132 482.788 li
233.592 483.411 li
233.023 484.007 li
232.427 484.576 li
231.804 485.115 li
231.155 485.625 li
230.482 486.104 li
229.785 486.551 li
229.066 486.964 li
228.325 487.344 li
227.564 487.688 li
226.784 487.995 li
225.986 488.266 li
225.17 488.497 li
224.339 488.689 li
223.496 488.839 li
223.065 488.9 li
222.634 488.949 li
222.199 488.988 li
221.762 489.015 li
221.321 489.032 li
220.878 489.038 li
220.435 489.032 li
219.995 489.015 li
219.557 488.988 li
219.123 488.949 li
218.691 488.9 li
218.26 488.839 li
217.417 488.689 li
216.586 488.497 li
215.771 488.266 li
214.973 487.995 li
214.192 487.688 li
213.431 487.344 li
212.691 486.964 li
211.971 486.551 li
211.275 486.104 li
210.601 485.625 li
209.952 485.115 li
209.329 484.576 li
208.733 484.007 li
208.164 483.411 li
207.625 482.788 li
207.115 482.139 li
206.636 481.465 li
206.189 480.769 li
205.776 480.049 li
205.396 479.309 li
205.052 478.548 li
204.745 477.767 li
204.474 476.969 li
204.243 476.154 li
204.051 475.323 li
203.901 474.48 li
203.84 474.049 li
203.791 473.617 li
203.752 473.183 li
203.725 472.745 li
203.708 472.305 li
203.702 471.862 li
203.708 471.419 li
cp
204.702 471.868 mo
204.702 471.855 li
204.708 472.286 li
204.707 472.273 li
204.724 472.701 li
204.723 472.688 li
204.75 473.113 li
204.749 473.101 li
204.786 473.523 li
204.785 473.51 li
204.833 473.929 li
204.831 473.916 li
204.89 474.332 li
204.887 474.313 li
205.033 475.135 li
205.028 475.11 li
205.215 475.917 li
205.208 475.893 li
205.433 476.684 li
205.426 476.66 li
205.688 477.435 li
205.679 477.412 li
205.978 478.169 li
205.968 478.147 li
206.302 478.886 li
206.292 478.864 li
206.66 479.583 li
206.648 479.561 li
207.05 480.26 li
207.037 480.239 li
207.471 480.916 li
207.458 480.896 li
207.923 481.549 li
207.908 481.53 li
208.403 482.16 li
208.388 482.142 li
208.912 482.747 li
208.896 482.729 li
209.448 483.308 li
209.432 483.292 li
210.011 483.844 li
209.993 483.828 li
210.598 484.352 li
210.58 484.337 li
211.21 484.832 li
211.191 484.817 li
211.844 485.282 li
211.824 485.269 li
212.501 485.703 li
212.48 485.69 li
213.179 486.092 li
213.157 486.08 li
213.876 486.448 li
213.855 486.438 li
214.593 486.772 li
214.571 486.762 li
215.328 487.061 li
215.305 487.052 li
216.08 487.314 li
216.056 487.307 li
216.847 487.532 li
216.823 487.525 li
217.63 487.712 li
217.605 487.707 li
218.427 487.853 li
218.408 487.85 li
218.824 487.909 li
218.811 487.907 li
219.23 487.955 li
219.217 487.954 li
219.639 487.991 li
219.627 487.99 li
220.052 488.017 li
220.039 488.016 li
220.467 488.033 li
220.454 488.032 li
220.885 488.038 li
220.872 488.038 li
221.302 488.032 li
221.29 488.033 li
221.717 488.016 li
221.705 488.017 li
222.13 487.99 li
222.117 487.991 li
222.539 487.954 li
222.526 487.955 li
222.945 487.907 li
222.933 487.909 li
223.348 487.85 li
223.33 487.853 li
224.151 487.707 li
224.127 487.712 li
224.933 487.525 li
224.909 487.532 li
225.701 487.307 li
225.677 487.314 li
226.452 487.052 li
226.429 487.061 li
227.186 486.762 li
227.163 486.772 li
227.902 486.438 li
227.88 486.448 li
228.599 486.08 li
228.578 486.092 li
229.276 485.69 li
229.255 485.703 li
229.932 485.269 li
229.912 485.282 li
230.566 484.817 li
230.547 484.832 li
231.177 484.337 li
231.158 484.352 li
231.763 483.828 li
231.746 483.844 li
232.325 483.292 li
232.308 483.308 li
232.86 482.729 li
232.844 482.747 li
233.368 482.142 li
233.353 482.16 li
233.848 481.53 li
233.834 481.549 li
234.299 480.896 li
234.285 480.916 li
234.719 480.239 li
234.706 480.26 li
235.108 479.561 li
235.096 479.583 li
235.465 478.864 li
235.454 478.886 li
235.788 478.147 li
235.778 478.169 li
236.077 477.412 li
236.069 477.435 li
236.331 476.66 li
236.323 476.684 li
236.548 475.893 li
236.542 475.917 li
236.728 475.11 li
236.723 475.135 li
236.87 474.313 li
236.867 474.332 li
236.925 473.916 li
236.923 473.929 li
236.971 473.51 li
236.97 473.523 li
237.007 473.101 li
237.006 473.113 li
237.033 472.688 li
237.033 472.701 li
237.049 472.273 li
237.049 472.286 li
237.054 471.855 li
237.054 471.868 li
237.049 471.438 li
237.049 471.45 li
237.033 471.023 li
237.033 471.035 li
237.006 470.61 li
237.007 470.623 li
236.97 470.201 li
236.971 470.214 li
236.923 469.795 li
236.925 469.807 li
236.867 469.391 li
236.87 469.41 li
236.723 468.589 li
236.728 468.613 li
236.542 467.807 li
236.548 467.831 li
236.323 467.04 li
236.331 467.063 li
236.069 466.288 li
236.077 466.311 li
235.778 465.554 li
235.788 465.577 li
235.454 464.838 li
235.465 464.86 li
235.096 464.141 li
235.108 464.162 li
234.706 463.464 li
234.719 463.485 li
234.285 462.808 li
234.299 462.828 li
233.834 462.174 li
233.848 462.193 li
233.353 461.563 li
233.368 461.582 li
232.844 460.977 li
232.86 460.994 li
232.308 460.415 li
232.325 460.432 li
231.746 459.88 li
231.763 459.896 li
231.158 459.372 li
231.177 459.387 li
230.547 458.892 li
230.566 458.906 li
229.912 458.441 li
229.932 458.455 li
229.255 458.021 li
229.276 458.034 li
228.578 457.632 li
228.599 457.644 li
227.88 457.275 li
227.902 457.286 li
227.163 456.952 li
227.186 456.962 li
226.429 456.663 li
226.452 456.671 li
225.677 456.409 li
225.701 456.417 li
224.909 456.192 li
224.933 456.198 li
224.127 456.012 li
224.151 456.017 li
223.33 455.87 li
223.348 455.873 li
222.933 455.815 li
222.945 455.817 li
222.526 455.769 li
222.539 455.77 li
222.117 455.733 li
222.13 455.734 li
221.705 455.707 li
221.717 455.707 li
221.29 455.691 li
221.302 455.691 li
220.872 455.686 li
220.885 455.686 li
220.454 455.691 li
220.467 455.691 li
220.039 455.707 li
220.052 455.707 li
219.627 455.734 li
219.639 455.733 li
219.217 455.77 li
219.23 455.769 li
218.811 455.817 li
218.824 455.815 li
218.408 455.873 li
218.427 455.87 li
217.605 456.017 li
217.63 456.012 li
216.823 456.198 li
216.847 456.192 li
216.056 456.417 li
216.08 456.409 li
215.305 456.671 li
215.328 456.663 li
214.571 456.962 li
214.593 456.952 li
213.855 457.286 li
213.876 457.275 li
213.157 457.644 li
213.179 457.632 li
212.48 458.034 li
212.501 458.021 li
211.824 458.455 li
211.844 458.441 li
211.191 458.906 li
211.21 458.892 li
210.58 459.387 li
210.598 459.372 li
209.993 459.896 li
210.011 459.88 li
209.432 460.432 li
209.448 460.415 li
208.896 460.994 li
208.912 460.977 li
208.388 461.582 li
208.403 461.563 li
207.908 462.193 li
207.923 462.174 li
207.458 462.828 li
207.471 462.808 li
207.037 463.485 li
207.05 463.464 li
206.648 464.162 li
206.66 464.141 li
206.292 464.86 li
206.302 464.838 li
205.968 465.577 li
205.978 465.554 li
205.679 466.311 li
205.688 466.288 li
205.426 467.063 li
205.433 467.04 li
205.208 467.831 li
205.215 467.807 li
205.028 468.613 li
205.033 468.589 li
204.887 469.41 li
204.89 469.391 li
204.831 469.807 li
204.833 469.795 li
204.785 470.214 li
204.786 470.201 li
204.749 470.623 li
204.75 470.61 li
204.723 471.035 li
204.724 471.023 li
204.707 471.45 li
204.708 471.438 li
204.702 471.868 li
f
192.654 526.418 mo
192.654 510.818 li
192.602 502.184 206.538 495.188 223.728 495.188 cv
240.919 495.188 254.855 502.184 254.814 510.818 cv
254.814 526.418 li
192.654 526.418 li
ef
192.102 510.808 mo
192.112 510.385 li
192.145 509.959 li
192.198 509.537 li
192.272 509.117 li
192.367 508.701 li
192.482 508.289 li
192.617 507.88 li
192.771 507.476 li
192.944 507.076 li
193.137 506.681 li
193.347 506.29 li
193.576 505.904 li
193.822 505.523 li
194.086 505.147 li
194.367 504.775 li
194.665 504.409 li
194.98 504.049 li
195.31 503.693 li
195.657 503.343 li
196.019 502.998 li
196.397 502.659 li
196.789 502.326 li
197.197 501.998 li
197.622 501.674 li
198.507 501.05 li
199.449 500.447 li
200.446 499.87 li
201.494 499.318 li
202.592 498.792 li
203.737 498.294 li
204.929 497.824 li
206.164 497.383 li
207.442 496.972 li
208.76 496.592 li
210.116 496.243 li
211.508 495.927 li
212.935 495.644 li
214.395 495.396 li
215.885 495.184 li
217.404 495.008 li
218.948 494.87 li
219.732 494.815 li
220.52 494.769 li
221.314 494.734 li
222.114 494.709 li
222.919 494.693 li
223.728 494.688 li
224.538 494.693 li
225.343 494.709 li
226.142 494.734 li
226.936 494.769 li
227.725 494.815 li
228.508 494.87 li
230.052 495.008 li
231.571 495.184 li
233.062 495.396 li
234.521 495.644 li
235.948 495.927 li
237.341 496.243 li
238.697 496.592 li
240.015 496.972 li
241.292 497.383 li
242.528 497.824 li
243.719 498.294 li
244.865 498.792 li
245.963 499.318 li
247.011 499.87 li
248.007 500.447 li
248.95 501.05 li
249.835 501.674 li
250.26 501.998 li
250.667 502.326 li
251.06 502.659 li
251.438 502.998 li
251.8 503.343 li
252.146 503.693 li
252.477 504.049 li
252.791 504.409 li
253.089 504.775 li
253.37 505.147 li
253.634 505.523 li
253.881 505.904 li
254.109 506.29 li
254.32 506.681 li
254.512 507.076 li
254.686 507.476 li
254.84 507.88 li
254.975 508.289 li
255.09 508.701 li
255.184 509.117 li
255.259 509.537 li
255.312 509.959 li
255.344 510.385 li
255.355 510.808 li
255.355 526.94 li
192.102 526.94 li
192.102 510.808 li
cp
193.102 526.44 mo
192.602 525.94 li
254.855 525.94 li
254.355 526.44 li
254.355 510.814 li
254.355 510.826 li
254.345 510.423 li
254.346 510.448 li
254.316 510.047 li
254.318 510.072 li
254.268 509.674 li
254.272 509.699 li
254.202 509.303 li
254.207 509.327 li
254.117 508.935 li
254.123 508.958 li
254.015 508.568 li
254.021 508.591 li
253.894 508.204 li
253.902 508.226 li
253.755 507.843 li
253.764 507.864 li
253.599 507.484 li
253.608 507.503 li
253.425 507.127 li
253.435 507.146 li
253.234 506.773 li
253.244 506.791 li
253.025 506.422 li
253.036 506.439 li
252.8 506.074 li
252.81 506.089 li
252.557 505.728 li
252.568 505.743 li
252.297 505.386 li
252.308 505.4 li
252.021 505.047 li
252.032 505.06 li
251.728 504.712 li
251.739 504.724 li
251.419 504.38 li
251.43 504.391 li
251.094 504.052 li
251.105 504.062 li
250.753 503.728 li
250.764 503.738 li
250.397 503.408 li
250.407 503.417 li
250.025 503.092 li
250.035 503.101 li
249.638 502.781 li
249.648 502.789 li
249.236 502.475 li
249.251 502.486 li
248.383 501.873 li
248.402 501.886 li
247.478 501.296 li
247.496 501.307 li
246.518 500.74 li
246.536 500.75 li
245.505 500.207 li
245.522 500.216 li
244.441 499.698 li
244.458 499.706 li
243.328 499.215 li
243.344 499.221 li
242.168 498.757 li
242.184 498.763 li
240.963 498.328 li
240.978 498.333 li
239.715 497.926 li
239.73 497.931 li
238.426 497.554 li
238.441 497.558 li
237.098 497.213 li
237.112 497.217 li
235.734 496.904 li
235.747 496.906 li
234.334 496.627 li
234.347 496.629 li
232.901 496.383 li
232.914 496.386 li
231.437 496.175 li
231.45 496.177 li
229.944 496.002 li
229.957 496.003 li
228.424 495.866 li
228.434 495.867 li
227.658 495.812 li
227.664 495.813 li
226.882 495.768 li
226.889 495.768 li
226.101 495.733 li
226.107 495.733 li
225.314 495.708 li
225.321 495.708 li
224.522 495.693 li
224.528 495.693 li
223.725 495.688 li
223.731 495.688 li
222.928 495.693 li
222.934 495.693 li
222.136 495.708 li
222.142 495.708 li
221.349 495.733 li
221.356 495.733 li
220.568 495.768 li
220.574 495.768 li
219.793 495.813 li
219.799 495.812 li
219.023 495.867 li
219.033 495.866 li
217.5 496.003 li
217.513 496.002 li
216.007 496.177 li
216.02 496.175 li
214.543 496.386 li
214.556 496.383 li
213.11 496.629 li
213.123 496.627 li
211.709 496.906 li
211.723 496.904 li
210.344 497.217 li
210.358 497.213 li
209.016 497.558 li
209.03 497.554 li
207.727 497.931 li
207.741 497.926 li
206.478 498.333 li
206.493 498.328 li
205.273 498.763 li
205.288 498.757 li
204.112 499.221 li
204.128 499.215 li
202.999 499.706 li
203.015 499.698 li
201.934 500.216 li
201.951 500.207 li
200.921 500.75 li
200.939 500.74 li
199.96 501.307 li
199.979 501.296 li
199.055 501.886 li
199.074 501.873 li
198.206 502.486 li
198.221 502.475 li
197.809 502.789 li
197.819 502.781 li
197.421 503.101 li
197.432 503.092 li
197.049 503.417 li
197.06 503.408 li
196.693 503.738 li
196.703 503.728 li
196.352 504.062 li
196.362 504.052 li
196.026 504.391 li
196.037 504.38 li
195.717 504.724 li
195.728 504.712 li
195.425 505.06 li
195.436 505.047 li
195.149 505.4 li
195.159 505.386 li
194.889 505.743 li
194.9 505.728 li
194.646 506.089 li
194.657 506.074 li
194.421 506.439 li
194.431 506.422 li
194.213 506.791 li
194.223 506.773 li
194.022 507.146 li
194.031 507.127 li
193.848 507.503 li
193.857 507.484 li
193.693 507.864 li
193.701 507.843 li
193.555 508.226 li
193.563 508.204 li
193.435 508.591 li
193.442 508.568 li
193.333 508.958 li
193.339 508.935 li
193.25 509.327 li
193.255 509.303 li
193.185 509.699 li
193.188 509.674 li
193.138 510.072 li
193.141 510.047 li
193.11 510.448 li
193.112 510.423 li
193.102 510.826 li
193.102 510.814 li
193.102 526.44 li
f
%ADOBeginSubsetFont: QAAAAA+TimesNewRomanPSMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (QAAAAA+TimesNewRomanPSMT)
%%Title: (QAAAAA+TimesNewRomanPSMT Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /QAAAAA+TimesNewRomanPSMT def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-568 -307 2046 1040} def
/FontInfo 4 dict dup begin
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 4685 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 7 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B6FF86FBD66B095379F45880CA28D0F0C4629F99B72EFEDBB
222483BD74F8B> |
68 <001C60D8A8C9B77FE2CEA139CB15A16492F485162FE605BA10F460B6DC55
0DEC7BA0BCA1B89C8429260417FE96BA758C22F6762386C9F1CAF53456C89D4C
6B177AA810FBB608A57F053C4DA17FD8A122DD63CD2EE0563B0FFA48FEF5CBDB
333E4EF010579993E238020BE59CA5D3F31F329BD506C436A3A2AAAB6CBD385F
DB0E5188BC3D34A31214C941C253FAF1F818F84A3F73340CA7F3B7A85C87022E
70BF3FF56918287082AAA1D7B6CDE998BE3D8663592D3F0DEFC69D87A351A298
95DE83B0D7478C3C01D85F944C563EFCF85986470E4B8EDEEDC025A0FB3217B7
37B99EB7B6E2243F66B907475D1C465D1D07EDFEFC5123FE5A4D48A8B15BE327
2EF1EF1464C3F0D45D7CBB8749AF571E09> |
87 <001C60D8A8C9B854D0F414EAB29549463C152A8395E080F8A65050DED294
48713A9991EC80B85D2E40BC855D0C9C1C8F48B9F54A9F2AF77E5AE0CF2D93DC
43DDEECA57457D57C32A4E7F92D72E19B411BD6A8FD776B503B1ED0E4E775E79
8B36CAB4543E392F481E83DAF858D3B1A895E3CC06AB3573C04543D9> |
70 <001C60D8A8C9B77FE2C180CE42B4078449B9D767742AB4CF5971DFD438EC
C54400989182964B065BACA704BA363536AC987FC433F59A23A3DC16CBD969F4
2A6041BB8327C43B9105FC5DF44A0437E9E26FE545542A602D007FC6A926264F
9C2999730E7919239B324086FEA852156F456647AA0692084759C352D6998971
799F4BEF3EFB7DE91C98C83C567200278FF2145E16D28EDE7556C59DB204> |
78 <001C60D8A8C9B7A73DB907772911B7C2CEAC1D2074B2642ADEDFBA1679ED
254D30D2D9A5BDAE41A6A7C0D78C5D75E9522858A70EEA458FC30CFDA879F9C1
CE85600A63BE4554ACA119AD822CC5727738E5E5FAC782F5B6F69100B3F9A42C
95FB8AA53FD907276C4A477291A36A9FD6B1870ACEAFC297FB6D4CC1F0091BA0
9524439681D5D4A76F017EDD23AA69786F58BFB619D5D45A35621B583AF1C763
E994CD0C086A44F5E2750B3F3193B4E6E5A27940B47B22FB55ED113A092C7013
A98E096292640D2EA9CE95DF810761FDAF86F75648F6AFC27AA39909F96AF134
46AC99> |
72 <001C60D8A8C9B77FE2C19119FE019B929F076F8319E8913467AECA41BE2B
EAD3EC175346E3F888D3AD76D215AD69034A954DFD661ECBEA3B145468480B6A
15F5C865D2083DC0B04744AA76DE4CC9E0C9DBDCC2C59DAA00F28A6A47092C7F
FA0397DC47C5CBBA69AD805D3DD20D56411E92B0DE9E3F19C2FDEE1FA5013189
84A59E1CFFFD06EA629758085868D3F5F7204292> |
85 <001C60D8A8C9B81F2C3A9916C4CB28F21023538C2A69D3E08B0A448624D2
CE6C19473DC07A6A4C3E0D8D2DFD7B9589F2461E064A251BFFB4F1472DE500E9
83E2E667F5383BBA338778795701927E45FB048834AFB7FF5E045C79CAD4F90B
53A8A93629365ECF1B64B7916DE5DAB65845D9DB9B71D2B7B722597153CE4BA4
55AAC1333D36087A511839B6E1301E787D03299ED6FB7E787777CDACC74EC37D
8C360275B503E4954E912CD342> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /QAAAAA+TimesNewRomanPSMT-Identity-H /Identity-H 0 [/QAAAAA+TimesNewRomanPSMT] ct_ComposeFont pop end end
%ADOEndSubsetFont
/DUZMCM+TimesNewRomanPSMT /QAAAAA+TimesNewRomanPSMT-Identity-H findfont ct_VMDictPut
DUZMCM+TimesNewRomanPSMT [32.05 0 0 -32.05 0 0 ]msf
152.349 117.214 mo
(\000D)sh
166.549 117.214 mo
(\000W)sh
175.449 117.214 mo
(\000W)sh
184.349 117.214 mo
(\000D)sh
198.549 117.214 mo
(\000F)sh
212.749 117.214 mo
(\000N)sh
228.749 117.214 mo
(\000H)sh
242.949 117.214 mo
(\000U)sh
172.402 434.399 mo
(\000D)sh
186.602 434.399 mo
(\000W)sh
195.502 434.399 mo
(\000W)sh
204.402 434.399 mo
(\000D)sh
218.602 434.399 mo
(\000F)sh
232.802 434.399 mo
(\000N)sh
248.802 434.399 mo
(\000H)sh
263.002 434.399 mo
(\000U)sh
272.814 165.338 mo
450.294 165.338 li
450.294 158.738 li
463.614 172.058 li
450.294 185.378 li
450.294 178.658 li
272.814 178.658 li
272.814 165.338 li
.644953 .27805 0 0 cmyk
ef
450.281 164.879 mo
449.781 165.379 li
449.781 157.521 li
464.288 172.029 li
449.781 186.537 li
449.781 178.679 li
450.281 179.179 li
272.272 179.179 li
272.272 164.879 li
450.281 164.879 li
cp
272.772 165.879 mo
273.272 165.379 li
273.272 178.679 li
272.772 178.179 li
450.781 178.179 li
450.781 185.33 li
449.927 184.976 li
463.228 171.676 li
463.228 172.383 li
449.927 159.082 li
450.781 158.728 li
450.781 165.879 li
272.772 165.879 li
.800381 .471931 .0461128 0 cmyk
f
463.614 238.298 mo
675.534 238.298 li
675.534 98.138 li
463.614 98.138 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 68.9458 719.13 ]ct
[211.92 0 0 140.16 394.668 480.832 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 644 
/H 427 
/M[644 0 0 -427 0 427 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 644 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 644 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 644 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 644 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&]`A'7rs&K/rs/Q*ciAXtJcLB&JcN^hq#U?mrrMiorrN-%h#N$,JcLB&JcN7[rrN-'rs/Q2rs\o-
rrN-$rr`9&huJ?/JcLB&JcLB&JcLB&JcLB&R/m6hrs&K/rs/Q*oDjICJcLB&JcMGDq#U?mrrMiorrN-%
JcLB&b5d+oJcNmmrrN-'rs/Q2rs\o-rrN-$rr`9&c2`FrJcLB&JcLB&JcLB&JcLB&W;ur#rs&K+rrV0[
JcLB&JcLB&ZiKt(pAk3opAk3orr_]iJcLB&JcLB&V#^Msrri?,r<`E&rrN-$rrMZjJcLB&JcLB&JcLB&
JcNsoJcLB&])_j5rs&K+rrUOIJcLB&JcLB&`W5l:pAk3opAk3orr_'WJcLB&JcLB&[fHF0rri?,r<`E&
rrN-$rrM$XJcLB&JcLB&JcLB&JcLB&JcLu7rrV`kJcLB&JcLB&U&b&kpAk3qrrMiorrI]OJcNsoJcLB&
aT2>ArrW3'r<E9'rr`9&rrL=DJcLB&JcLB&JcLB&JcLB&JcMVIrrV*YJcLB&JcLB&ZiKt(pAk3qrrMio
rrMQgJcLB&JcLB&V#^MrrrW3'r<E9'rr`9&rrMThJcLB&JcLB&JcLB&JcNsoJcLB&JcLB&JcLB&JcNdj
qZ6Ekrr`3#df=t"JcLB&JcN+Wr;lp#rrrE,rrrE*rrM$XJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
U&b&kpAk3qr;lWmJcLB&b5d+oJcNair;lp#rrrE,rrrE*rrLCFJcLB&JcLB&JcLB&JcLB&JcN.X#6G#4
#6k;5!nRF(!.k3&!.k3X!;cfk!!<<(!!)lskl?;8JcLB&JcMJE$N^D4!W`<*!s/N+"7?/@!.k3&!.k3&
!.k3&!6Y@o!.k3k!!<W8!s8E'_uPAhJcLB&JcNdjqZ-d!!!i]$!<*!#"9APT!.k3&!.k3&!4;e/#mUJ2
r;liur;kaTJcLB&JcLB&JcLB&JcLB&JcMPG!s/N.$N:G<$O@%G#6Ftp!.k3&!.k3&!29Jj!V$0g!W)kK
!.k3o!.k3&!6"pE!W`?(!<N?*!Wr)rrrLULJcLB&JcLB&JcLB&JcLB&JcN1Y%fue8#7(M=#7(S?$4$tF
$Jkc7!.k3&!.k3X!;cfg!!NH,#mp\6kl?;8JcLB&JcMJE!W`<(rW<*%rrW0"!!2rsrrMlpJcLB&JcLB&
JcLB&JcNsoJcLB&`rHVW#6kA;$PF3m'b1]Z#Qb(O!.k3&!.k3&!6,$9!<N6$!V-6j!S7='!.k3&!.k3a
!<3)s!!**#r;m3)"9eu4"9Sc'!<3-#"Qf]9!.k3&!.k3&!.k3&!.k3&!2BMq"pPA4#71YA'GCrg&/#?W
n,S%?JcLB&JcMMFqZ63e!sSl/!W)kK!.k3o!.k3&!7(ZF!Vl]q"9&?*!s8]1"9nT$rrW3'e,Y(#JcLB&
JcLB&JcLB&JcLB&[/^^D"pYA=#Rq=^(`!ep%0Qgj!.k3&!.k3&!42b'!Ug$e!UB`;!.k3&!.k3O!<3)q
!"Au2!s8Z-#6tG:"9\`+r;cj!rs&5uJcLB&JcLB&JcLB&JcNsoJcLB&`rHVT!s]&\>E#Z&_5r;`,6n@q
!.k3&!.k3&!6,$9!W)j)&3=H[P`U;k.1#tSr;kROJcLB&JcLB&]`A'5q>_!+!Wium?[[6FAOIL<!!3#u
rrW3)joBu5JcLB&JcMVI!WiT1i;eH0JcLB&JcN1Yrr`-$)$9s@!#Z4T*<6?U%p,:Gd)snSb0J)U`d]lE
!!s,N(`i_["pP25rW)otrr`92M#`,-JcLB&U&Y3%!WE'#"9B#3!"_).G'AguQ#C5U@3P[P!!<9#!;QWp
"9/C^!.k3o!.k3&!8deV!rW,n!>5eJ!!EE,$53OF#7(tX003EQ!rW*-%g<(H%Klb:#QOi+!rW0"%0$_8
!WN;`!.k3&!.k3&!4;e,!m^ju!.k3&!.k3k!<3/u"=F9R!!!HI$O[^M+^r7;ajSh[c+MN_d`]bJ0*2+f
%1F?r!WiQ1"9eT%rr`92p&K[EJcLB&JcN.X!<iN&!#6:N!&eSJBmGbWR"9LEGA;SF,m+5eo`5!orrMus
JcLB&JcLB&])_j4r;cQm,7=h]!!<<D$32_+2@UBa.r&5m&HDen1ar\@+TqoP#64`*!rW-"$jI+J$NU82
"Gm,1!.k3&!0R<^"7cGD!.k3o!.k3&!7q5L!rW*#(_$WI!#ZV.W6Wl8b,//o+ZD;bYg18._gi+&!!3Z:
r;cj"qZ-Wtrs7ZcJcLB&JcLB&_uL2T!s&E&!(h]pG)06CrW!H0,&<BaEd9#4!!*?*!!*,t!;ur_!.k3&
!.k3&!5&:Q":tnJ$O6YF1bL4S0c0lt#65Q-?7IHh#Qk/7%06S0!<3*"!<36&#6+]'"82_H!.k3&!.k3C
!!!&]!.k3&!.k3&!4)\(!rW*#%1N@;!#[J_`5gQ=9dpqr.j5cJ,&#!RdDpMO!!!9:r;cj"rW)otrrW3+
M#`,-JcLB&TE#9+!<EQ.BlJ3T<qlY%*-.L-IT$7J!rr?$!W)lq!KI/3!6Y@o!.k3s!$27G%gi[U!)P*q
1DKlt#6kPC#6tSB.mHZk9*#;*"8i0!!WN0""oef,!<3/^!.k3&!.k3&!.k3&!.k3&!.k3a!"fbO!!<`V
[FO*WCE<Qb"pttbr;[*\NQ9YsQkp&0q>gHqn,S%?JcLB&JcN(V$NUV8!`k,;E@1_d"T8<0%giRD!'b1O
Lckb=(Bj[;o)O@BJcLB&JcN1YrrMlr+p8>g"9B/e+VGOs!XJi/"T]V_'bh!#&0=.P!<XAX#RCS;quHWp
rrS#WJcLB&JcLB&JcLB&b5d+oJcO*s&J,r_!&K,Ve&Qhg*WcHZ"sXcZ!!kG3U!pcuD$^RG!;uuU!.k3&
!.k3&!6"pD"9AN6;N$0@$2ji("TAB1!tGA;!!"m)DLP+V)[-*?i;eH0JcLB&JcNgkrrMlr!!W?2*_A"9
%KH_?!!EK-!!O/X'G_#a!#mdZ63AMK#RCS;pAk3pp&K[EJcLB&JcLB&JcLB&JcLB&])_j5nGj(:,GOAH
`_Ii\!!rW=)#sg:!!Xs4a5tW`!Vuct!WiT.#6kBd!.k3&!.k3P!;?Nm!"h;hFCbj\"U-%T!!!'6$3:5<
rW!-bAXeJg"T\2qrrN-'OoU(6b5d+oJcO[.rrN-"rrN-'r<=bU"Tni9%0m(@4q\8($6'p4)?g9U)&!Mr
)$U9R)[7HP!"'#:"pYA;"onZ%!ri9#$fh;>!.k3&!.k3&!.k3&!.k3&!6kND"7lL'"TTBbajA1W+<^^c
!!!cJq>^a*-n)+5ajN!A!<3-##QG#!!.k3&!.k3&!58I-!?MOO!'bOQC]aY;%Klq=!!!?-!t5;8!snr-
4C<Sr.eE`@!WN?'!.k3&!.k3&!4r72!WN0"!WN?%"tTo]!s95K#;RST&-*"D+<216"pGYO%hfZm#n@=N
!!,5N0*qge#6tG;!!!*"!ri9#$]+k8!.k3&!.k3&!.k3o!.k3&!8deV"TJQ$!#bn>!!j;@#8Ibbf#Q?]
*WQ0@!<<*0%KHJ3"T8<6$kP%te'#Hl%M]*K#65,3#6tM?huJ?/JcLB&JcO-trW*iE#6>#@!!3-#$B&PM
/H>qX"pP)/!!!$#r;cj"rW!%,K6D/1!!3N/$N'o(!WNAk!.k3&!.k3&!6kL%!<E0#!WiQ1#RgtB"qL\8
"U"fl'-J>&)B'_@!!!-)%1N==#6u%]!<NZY-Qk2R"9\f-'+,0I!riB&!<3N%!.k3&!.k3&!.k3&!.k3&
!.k3_!<33%!r;m6!<N6&$P+c-]AJeu*WQ0@!<<*0%KHJ3"T8<3#7!:Z[bK#t)\)rc!"&]+#6G,9#_`81
!.k3&!3?2"!>l"A#6=f)"TSaI@?Vu;!!NN1"p"`)!!*-!!<30"!!?8aJjfS<!seo:!rN&u!WN@e!.k3o
!.k3&!8dc7!<E0#!WiQ1#RLY?!<<*&":d4;-NFJ[)B'_@!!!-)%1N==#6u%]!Wio@%k^'a!!E<6$53RA
!riB&!<3Mh!.k3&!.k3&!.k3&!.k3&!.k3q!<33%!r;m(&dJX^$T=g0dB5J-!WNK+&,uY0')_e>!Wi?%
!ruKKcdm"[&f1EGrrW3,nc47AJcLB&JcNLbrW*H2!"8i-"98EeJq.\<"TAW(!<33#!<3)u!!WK)%?POU
+oMBB"9\i*!<3*"#6+[T!.k3&!.k3_!&su[!!!'%"pP58!"/i0!!<`L2)J87*ZlOK!s8Z/%1NIE"pPMG
!!!'%"Te[,!!!]?"U5AF%LiCB!!<<'!!rsg!.k3&!.k3&!.k3&!6Y@o!.k4.!<33%!rN$-!rr<+#8dhf
d)FC.+9;BArsA]9rrE'3r;[</!WWT.#:4rHca5kK&IeX=rrW3,huJ?/JcLB&JcO-trW*!(r;[3+!"49l
Igc;_"9o)/!<33#!<3*!!!`c0"TU>qE,PXT!tbM8%K-;,!WNAk!.k3&!.k3&!6kL.!<E0#!WiQ1"UP//
!Wi?(!'Mef#72Lo+X$pi"9]/C"U,)7%1N:;!Xf&8$5`aC9EPG%(CU`c!!!*'!!!<3p&K[EJcLB&JcLB&
JcLB&JcLB&])_j6qZ%K8!!``G'GWIK`nbnA#6=i*!"TSE"onW4%K-;,#Q4W-(DsI'eY!s)qu?j"#RCM7
LB)o+JcLB&X8r5#qZ$m,Ch'._!!!*'qZ-X#pAb?u#64a*JH:KbrW!'%!u(b:r;cj#OoU(6b5d+oJcO[.
(BFO:!!33*"T\T)!X&Z2!#l_l'a>$c*;p!`!WilC"9\r7#mgY7"9]DS!WaB#3=cE&%1O*q!<E9)!<M0[
JcLB&JcLB&_uKcA^]8rdJcLB&JcO$qrri3!%Kc\:$6B]mK%A>T3!'-^rW)s/rs&K'rseo,%0m+<!rr<7
%UmZ-do[[g!<3?)"7uSF!.k3&!.k3b!!30%!rDs"9n@ItrVus$$i9r(#58)u"TnZ'$A!GR'EA+9%Kc_4
r;cj#rr@WNJcLB&JcNC_(BFO:!!33*"TeZ+!WW?-3[Z+<%0d"V+T2E_!WilC"9\r7#mgY7"9oST"9\]^
1H5pP%1aBo!<`E*!s&FX!.k3&!.k3&!.k3&!6Y@o!.k4.!<3/u!"f;7$PXBl:qOQl5T(%9)&Ebmr;cj%
rrE'*rs\i+'+"sQ('%sgfVgV1!!!$"!!``3"QBE5!.k3&!.k3t!<3)s!!F*lBS$Tf!<33%#6+]'"8r3%
!<EE5r;[3,?"S^p!!rWC"9Sc)!<3/g!.k3&!.k3&!6kKO!<E0#!WiH+!!!*$rWX9K1IMf[$3CD9"9]2E
%hA^C()?uS"9]5G',CKK&-*8P&0="C&e-30#mgY7!<MfmJcLB&JcLB&JcLB&JcLB&JcNC_rr`,u&HW1F
$l(%Oa3^V((D$ic'+PNN!<39'!<3B*%/g/9)%7&a!!gWs`-;7c!<<*&!!``3"GZu/!.k3&!3?/&!<E0%
r;Zq$Q@1sm!<33%#6+]'"8r3&!<EE,!r`0#!Yl#SIXrjH#QtD8"8r6""-NY9!6Y@o!.k4.!'L>`!!!'%
!s8N(!sAf04DR8(#R1\A"U,#3%Ls![!Wj,Q!s8Z/%hB<c"9\f/&/u3$=W%Y^*Ztaq!WiB'iW+Q1JcLB&
JcNgk!!Bn7JcLB&JcLB&blACZ!rr<(";2=M!W`9@;VB0m)up6*!![;Ue]90f!WE*!$i^5,!qlVG!.k3&
!.k3f!<30"!"/l/!t,)BJ7=fZ!!VHa%4-URB)ho8$3:/-!!*-!!.k3&!.k3&!4r4E!<E<+!<E?-#R;=m
#S6t9NYMNtjT#Q"=:YNB$R6u*":>55$4;OgJcLB&JcMMF!"IofJcLB&b5d+oJcO[.'a"O<!!EE;&c`"7
!?e/Yg0b*b"oneh!"Uf_bM.4e!!*'"$OZq7!WqE_JcLB&JcLB&e,]LNqu@-,!sSa:?\(oS!!E9(jo>g%
D20VA#mC>1!!!$#lMuM:JcLB&JcO$q'`e=<"9AN,"U#&M*skgF!(d:n"98Pe!"B3#"r%g[,pNa(!s8l;
oDjICJcLB&JcLB&JcLB&JcLB&])_j4r;[0/"p5AI#ADT/`t\IP!!_Td#T.!mcd=i^!!!'#!Wn&UJcLB&
JcN"TrrN#t#6Fl*)452N&H)S/"Qoak!%E)>N;s(]!<J,ZJcNsoJcLB&f`2?\!W`W3!Y&o\'+Xs@!!MHb
#mVM#/5$EX!"KM;!<3,]!.k3&!.k3&!6G3@"1nPb!.k3&!.k3q!<3-!!"9&9!tYnH]=lmI!!!*!!!!,c
!"0VgWQ<bE!t##.!WqomJcLB&JcLB&_>sT:qu@$,!!%7hLC!q\!W;uu!p9Og7WXtI!!E<'q#H!HJcLB&
JcN1Y#Qb&.#m:<-;^),?!!3#u!!;Bb#R:PD-W:<Q#S$hEr;cj!M#`,-JcLB&JcLB&JcNsoJcLB&h#RHV
r;[?;$RTKA^:>ls#64`*!!!;h!!a/C:X$]#4=0q+rs7TaJcLB&JcLB&dK':Jrr`6#$l5@ND?'Y?!!!$"
!!_Td#mZZ0HiO-K!s&Ge!.k3&!.k3&!6G3S#RCqO"9Su7<'!JX!!N?&!<<*(kPu(p!+I-(":>YM%LrRC
#mp;*JcLB&JcLB&OT5@^o)O@BJcLB&JcN=]rrW-!$k<Xu\&-^9-iaAM":F8k#S77fU"%DD+oqTBrs4A[
JcLB&JcMqRrrN-%rW!7CFHIRD!!<3'#j)-d!!lhbIlm]5!s&F_!.k3o!.k3&!8@Jb#RCqO!s8s%4AH7l
!!<3'#iu$r!t%%E/L(T5%h9'O!so:p!.k3&!.k3&!.k3&!.k3&!.k3o!<33#!"KbYGhKa@*=DiO!!WQ+
#3Gmh%6N.Zb#/*;rseT#JcLB&JcLB&^]4uJ!<WE(!"t<(A-)`2"98Q,!!MKc"p4l+*/SBMrW)s"rrE'"
rr@WNJcLB&JcNC_('4O<!=fSW)$U6E0.J@Q!rrH("9SW,kPtkq$3V:t)^,as"pPbU"9])?M#`,-JcLB&
JcLB&JcNsoJcLB&h#RHXr;[->(UV?5Gmk&\%/g/+''B6!"q(j=gWPHP!<3Mf!.k3&!.k3&!7CiR!<E9)
!!#r>M&H9m!"/Z)!"S2m%fm+>!(2fj+92BC!WW3$!UTl=!.k3&!.k3q!"f86!<EZ?)&WV_&0X1:"9SW1
r;Zg,kPu,#&d&7?0H^?""r%aS":GV2!.k3&!.k3&!.k3&!.k3&!.k3]!!*3.r;[!B?H^L.38FQ=#QSJ_
bK(V+&HDe=%g.UfJcLB&JcMqR$NU8<!!"!XDKc'_"5s4j#m(V<$&*83!!!**!!!?,OoU(6b5d+oJcO[.
%gE4=!t>\T&IAp\'0-R4%H.9t'+bld!':Vs!<il@!sB2Dj8ac3JcLB&JcLB&JcLB&JcLB&b5hPFr;[!B
RF'T23njWA4g*J_?P*8<$O[(0!.k3&!.k3&!5JRB!<EN-!*FK$*WQ9Fi;aGo!W`Q,</,?I!!EE)!"8l.
!.k3&!.k3&!4r4A"pY/0%1Ns_#sB%G!"TMLi;a,r&.8s[*ZGY@"pGGF!s9)BM#`,-JcLB&JcLB&JcNso
JcLB&h>drb!WW3%%LktRdE+!`g].]b*+%FEZ7ub$!WiJa!.k3&!.k3&!6kKJNJ;]Y!!EYf!!i`/!YGDT
P^7'A!!*9)m/V_<JcLB&JcO$q%gE=H"p>/6"9;=U/-ZCk'&`g$$ORF_#SK'F4:MDp!!!9/p&K[EJcLB&
JcLB&JcLB&JcLB&\H!!?!!!'0&!bDfO=2.(!!F>b^Wjt*@gj.Z!f$c-!.k3&!3cG'"8i-(7?*'S!!!-)
i;a8l!=T25!+gJ9'EA+6NrXb3b5d+oJcO[.%gE7F"p>/6"<p`#!!iiB&)dL!$jm[]#mh\(<<*.%"98W1
j8ac3JcLB&JcLB&JcLB&JcLB&blA1S!WrE.#UD^\aMU:W#N#Ll$Np\7%KLh#d&e<2!!!'%p&K[EJcLB&
JcNXf!!rK&#DIP_!!<3*"5a(d$ipb:.Zo'J!!!6+r;_ELJcLB&JcNC_%gE4P&-E"A!^&DE!!!'*"Q9=d
!W`l?%g3SM+Tr#U#n[]'!.k3&!.k3&!.k3&!6Y@o!.k4.!"Au2"98`6.WWq^TcaROhZ*Z^#lO`05fCgp
4rjV'!X[ofJcLB&JcLB&e,TISr;ZpFM1o77!!*3)hZ3ZWrW!4VEeOJn!<rN*m/V_<JcLB&JcO$q%gE4R
&-E"B&4&K?#m()1"Q9=k!<EN7"p>$)+!psn%M/UFp&K[EJcLB&JcLB&JcLB&JcLB&])W3D!rr?4%nX(L
cqk8P!!!,[!!iuM!!!$"(51!<fS_3Z!!E^e!.k3&!.k3T!!!<'!!lYQKI6a%$ig=e!;um(":5''EIg(L
!t(+iJcNsoJcLB&hZ+)m"WA'X":ZM-2&l`($f:pp"98H'+<h"R!=0SO(E3AVj8ac3JcLB&JcLB&JcLB&
JcLB&blA7^!rr?3&m3c2`Xr^l!!!5^!!*KErW!9+(.crs_`%Pq"9eDuJcLB&JcLB&_>jQ>r;[+aJ9Cnm
(]sa?h#I`m"993^B70a^$iL'W!.k3&!.k3_!"BA@(_d)V!'r@i"U#\JhZ*ob!!<6J+9i;Z"oq1'(E3AU
M#`,-JcLB&JcLB&JcNsoJcLB&hZ*Zr)>sO?[`@*C!!*NChZ3Zhr;[-1$+S:-D?'bH$hjZ$!riB&"S;\G
!.k3&!.k4#!"B2G"V4(1N!U*u!!!6*h#Iff#64`tDh\c&#64c&"9/Dn!.k3&!.k3&!6kKS#R;@n(EEJU
3<1HM"9]GQi;aAl"U"r_0`qLX"@<(t&H`./!!!#t!J^Z,!.k3&!.k3&!.k3&!.k3_!<3r9!!j=YcGEoh
!=]Xu!<3]1!!3H5I0S<IY5e\5&,-)(!riB&"IT7A!.k3&!3cG4$j["c>\msO!Wi?%!Wq<\r;cj&rW!.P
IoQIP!!)s"rrJJeJcNsoJcLB&hZ+/l#9Os&0`V2!"s>&l"VVR.!"T5:"9^G6!s8N54XCLL!sJ8sr;lNj
JcLB&JcLB&JcLB&JcLB&JcO$q%hB-M!"s(oerV]h!"B26!oX+i$k*+9!<EK5435Y"2A6<'pAb0p!!<*$
LB)o+JcLB&_>jlI"TUf/IQ7B."9&9##2]F\"9/T)!!@:jPR@Birr`3#L&cf*JcLB&])W?E";;FP2@L3D
%MT]\!soFq!!i]1#mhau!s9,>-oj[&"Tei"!;uqd!.k3&!.k3&!.k3&!6Y@o!.k4.!"T\Y!!!q0e^%MM
!<<N6!!D0[%h&jH!!**,#r\*rdWuQ@#PS5u!rW5n!.k3&!.k3&!7UuT"UtHRH>s)g!!W?%!!hB]rr`9*
rW!$SK82tr!<30"!V6;C!.k3&!.k3q!"T25',CRY&e4mL'GgfQ#nGno%g3"A#pCGo!tPAo5=#G[!qlTo
!;uqR!.k3&!.k3&!.k3&!.k3&!4r42!r`0-A]WQ3)\*&T!!!32i;il[r;Zm)#TX+@bK7RZ$3Kl#r;rAe
JcLB&JcN(V!!iK(!s!P,=Sr.!!T*nW!<33%"9&9&%"!8ArW)frQiM^<b5d+oJcOL)#qnUf"9]&;"pb:g
!"T)2&J5?W!s8f11bq3)#m0/fJcLB&JcLB&JcLB&JcLB&JcO$q%flY;!2INeL^jn+!WW9+#N5[_"8r3+
#RD@oX4PX4!XJE!!!)s!LB)o+JcLB&_uL5N!=JorF-7[H!!`K("5NtW"TJT&!!c8[LCjLd!<N-"L&cf*
JcLB&\H!'D!"pkN!!EE;"U556!oX+b!<EcE$46k;#R1SR5=khV#`/P5!.k3&!.k3&!.k3o!.k3&!8RVa
)_K=X]g`#''+4d?$kD(nr<<K,!--Z9Y6td"!.k3&!.k3&!7h,Z#m:55CM8+r!<E0#!X[`arr`9)qZ$^5
P]K:Z!.k3&!.k3&!6kKF%LrX@!!ud.(`38U&.o$Ji;ilZrtG82!WYb/rW;cnJcLB&JcLB&JcLB&JcLB&
JcN=]%2)gneXmub!=K88!"9Co!<!*%!sS`na32mX#DiG4!.k3&!3uS6#n-ebG^39h$NU5-$jkekrr`9)
r;[$)!!%=aHk)8=JcNsoJcLB&hZ+/u&Hs6V!'U`1(]sjS'*JHs!<3-#'E%t;"p,2o(`j=lj8ac3JcLB&
JcLB&JcLB&JcLB&b5_tsXj>-i&ci"@$NL/:%c%*t$O[";!!"@2d`HbO!WW3&!!!6%!.k3&!.k3&!5njH
!tbNFDIk-p!Wi?%"9dT^r<3'!#m1G58pbD>!!*'&!!3-#"GZu/!.k3&!4r4A%1rq2!!"AM+sI*k&J5-K
i;a,f"qD+F!rr<:%2T@#(_AA+!<<*$!!!.`!.k3&!.k3&!.k3&!6Y@o!.k4,!"DK=bf).H!<EQ9!!!K=
h#J&q$N^A0!$kk!e>3ua!WW3%!!;HdJcLB&JcLB&ec6-]"osEl>QXs-!WW3'"Q'4X"T8<1!t##@I=H/8
!W`9$!<</m!.k3&!.k3&!6kKS%1`G;!!!?0+sI*k&J5-Ki;aVt"qD+F!rr<:(^^6\)-$nC!<<*#!!3#u
JcLB&JcLB&JcLB&JcLB&JcNC_%gE6!e'O`l"onW+"98E.$/GU]#Q=]3!#$9fcd>Sk#6Fr3#*/b9!.k3&
!3cG*.Yi:*qZ-X!hZ3ZZrr`3""p>/2!-3gPqu?a!"8r5s!MTRG!6Y@o!.k4.!"T,4"?In1!Wj#K!<EW=
!s@K^'a"O<!!33%!"TYF"tho&!<<9'!!EGi!.k3&!.k3&!.k3&!.k3&!.k3q!"TGF_8t&8"q1J3"9\])
#moDfrs/K&%20DC`lsVJ!X/W1#64l*!.k3&!.k3&!5\^;Cj(:(!<32Z!<33%"8r3+"9\])4a;W<!!!6(
!!39'!WW5t!K[;5!.k3&!4`(=.531T!XKGQ!<EW=!s@K^#Qk//!!33%!"TPM"U,>i4V%Mm"98Q.!!88_
JcLB&JcLB&JcLB&b5d+oJcO[.#oZC`cE/2h#7M%>!<3,X!<33#!"T,7!!5d0a2eYk"p4r4!!qokJcLB&
JcLB&eGp!iHus9,!!<3$!<E9)hZ+/h!rr<%!<WE(!WW66OCW##!!3?)!;uru"8r4O!.k3&!.k3q!"B/>
*ZA,e#7gq?#RCS;h#RHUq>^p)#AF/=#lt21!<iH-rW%NMJcLB&JcLQ+!!3#uJcLB&JcLB&])W-TK?N%p
*rl<M%/g2+!oF"X"T/6)$31&D]?8S`rW<6(#65!k!.k3&!.k3U!!>`/NAUP5rrN-%hZ*rb!rr<%!<WE(
#6"T)M/7J`qZ$[$!!)rurr\tqJcNsoJcLB&hZ+)j2]!ej#mUb>":,8:"l01Y!Vl^'#@diB.KKSO!!N?+
li;V;JcLB&JcLB&JcLB&JcLB&blA&.\]iMP$ig8G)VG,j%/g/:%2&X@"E2T2HOU&[!XSi.rW%NMJcLB&
JcN[g"ES@&(BXO8rrW-$i;aGj!<<*&"9S`+!!EE);fH\\!<)s&!WW6$!!*-!"-<M7!.k3&!4r4=$:kF7
,7Ote#6thQgAq6Vrr`6'%Km@U!D3=l?4$]8!!`K)OT9t5JcLB&JcLB&JcNsoJcLB&hZ*s\c.9E3#ljrD
)VG,j%/g/8%1N:;"=)+8Wu;'C!Y4JqJcLB&JcLB&ec5dWOFBq$!<3-!"5s4l!<E0#"9\f/!!!68!#00e
NXYme!!W<$rrN'#r;_ELJcLB&JcO!p$=+>G$O[:K#6thQgAq6Vrr`3&$P=-T%fcTh&HMt6$N'mU!.k3&
!.k3(!!*B+JcLB&JcLB&aT2>BrsA]1qu@!)$3mNQc#3Rbr;cj*rr_-Yrr`,u!!3E/$ksElVn^H)rW!!#
)B8VTrs"eiJcLB&JcNXfrr`&s!<EE'!!bZ'O<FT+#6ao(rrq?]qZ-WsqZ$_8MfB=-!!!K,!<3-#!<3.q
!.k3o!.k3&!:Kn0"9\])!s8T+!<EH5":+u/!"`EE!X9;N!!!*'!<EN7i;ar#!<<*$!WrN)!!E9+##8VH
!"onV(C(3G!"]\C!X];,!.k3&!.k3&!.k3&!.k3&!.k4*!<3-#$3(8.!!iZ2)8jh@8H8hj!<3H,"5a+Y
"8`')!Wio@'btT+d\Ha@!?*$Y!!3-)#)*&/!.k3&!7V#K"8Mrs!WE')#[qn3!!!$&$2X`&"ks%W!W)j!
0U-l@!rrB&!rW-!!ri9#"-<M7!.k3&!6Y?a"9\])!s8T+!<EH3":,&<$l)bB!Ws&L!!!*'!<EN7i;a,a
!<<*$!WrN)('"F="pQ)^+TN,g&J56S!!!QA!Wi]9R/hg=JcLB&JcP?A!!8;`JcNsoJcLB&m/[.frri3!
#mh%R<R]?o+TMTB!<3B*!oF"X"T&00"98i8%hC2-d_d%1!!!cNr;cj%nc47AJcLB&JcOp5rrMus!<WQ(
!!=U"IU`9V!<N],!<32V!!30%"8`'#Q?ZaGq>gNsrrE'"r;_ELJcLB&JcOI()Z]s>!!`f8#6Or0+XA9t
$3:8A'EA+8!rr<,#iPau!<E0#!WiN/!rr?'"9\^H)%72a#mpP7!"]8E!WiB'LB)o+JcLB&K`D/X!!%TN
JcLB&JcNmmrrW3'qZ$p/$keTHd<-T;"8r6"$3((a!<33!!!!*2!!`lE&f%+ebt/!<!#?@K!<37i!.k3&
!.k3f!<3)s!!**,qu?n+H$h(A"o\T#!<32\!;c`t!<E9!!!R:_D_V4nquH`urrE'"U&]cFb5d+oJcP*:
)Z]s>!!io:#6Ou1:*Lku$4$eI&HDe5!rr<,#iPau!<E0#!WiN/!WW9'"U,*1()/S+$OQb9rt,23rrM`l
JcLB&JcLB&JcLB&JcLB&JcO0u#o"(7]?AAY*<lTD!<39'!oF"X"TJQ"!"9DD#8C@nc&WYM#7_7C!!E9+
"p>'a!.k3&!.k4#!!rZ,!!!$#!s8T3qu@(LH[>_m"9A]/!<N-!rr_!U"T\W+!<<N,!!5-1DZEi9!<3*"
!fR,2!.k3&!6"p@$47=X"TAQ:##@-6!!i].&.\a@!Wi?%"U3ib#QXr+!!33+"pGbG!"&c/!%f'"8d5=u
"9]/C&.emE!<JSgJcLB&JcLB&JcLB&b5d+oJcOm4#m1/A'P#,1ZlL=e!<39'!oF"X"TJQ"!"9AC#9+Z4
dCCA-#7_LI!<39'"S;\G!.k3&!.k45!"&`-!!!$#!s8T/!r`0%(l!fLr;Zp1!s&H$!<3/U!;up(!"&]+
!X!dlLAV&O!WN5s!.k3&!.k3&!7q2R$47=W#Q=l=#?j/2#RUP3&e=sB!Wi?%"U3ib)?Bj=!!33+"pG/1
#m(/.!#?8e"p4o0!t>\N":tV9!<IrUJcLB&JcLB&!!.]PJcLB&JcNsorr`&s#m:AQ+/$m(GS_Fu!<3/W
!<33%!rN&t!"/i.#Qh9Ycsde*"qCM2rri?.R/hg=JcLB&^&S<=!sA`3"T8<&6\(1Cr;Zg)rW3$!rrN-%
i;i`TrW*!&rW*3'!rtf8OUqBjr<&VkJcNsoJcLB&mf4.)!<<*'"VVOb'*/+?#o5R(&-`@>!"B>7!Sm_t
!<E0#!WiQ1#RU_=!<<0$"WghI"pG&1%hB'W!<E9)oDjICJcLB&JcLB&JcLB&JcLB&h#RHWq#Cd)"sPD6
d)/6g*<66@!<3/W!<33%!rDs,!WW`2!Wn"ucAinZ"pY&,"98Q-#ml@eJcLB&JcO-t"Tni0":GA2!!7=u
J,B<F!WN0"!WN8V!<*!$":,#:rVus8Dukt]r;ccuMu\G0JcLB&b5`=Z!<<*'"VVOc'*/(?$9(.D!s]&2
!XfD7!Sm_]!<E0#!WiQ1#Qk>="Uk8/%N8Fm"U+r/%hB'W!<E9)R/hg=JcLB&JcLB&JcNsoJcLB&mf<@i
q#Cd.&1UT-bb6-i(]k#q!<3/m!!bd@_p0kU#Qjl'rsA;tJcLB&JcLB&j8]Dc!<WE,":551!!<I[G\I$U
!!<*"r;ciugApsK#69g(JcGcO!;uro!.k3&!.k3&!8RYT!WN0"#Q>AJ&H`%B!%]Hn#Qt81#6kA7"5<hU
!WN0"!WN?%"qCe?!s9-*0foXI"oo#="U"u/!!<=Y!.k3&!.k3&!.k3&!.k3&!6YBB"8Mp)#RDcDf$/CV
%i#-Nf)YgQq>g?l#<B-3c;u%k!rDut$(1dF!.k3&!5JU7!WN9$"98]+!!>iLGs)!)!s&T,!W<#u!T=%U
!;?L!!*OPt'`\77r;iJiJcNsoJcLB&mf44+!<<*)#87a_'*A=D.53,&#6Y21"U588"5<hU!WN0"!WN?%
"qq.D!s9)]2EM6P!rr]:"U+l+!sA/qJcLB&JcLB&JcLB&JcLB&JcO:#%Kd1N/BlGf2%'Wp!s\f/aT)Jb
CsUIn.K'5H!X&Q)!!WX_!.k3&!.k4#!!rZ,!!!$#!s8Q1rW!%YH[ch.!!!9"!RLfH.0=pI8,<5c!KI/3
!.k3&!65'U!<EN7"q:\<$r\Q'(]sgA!<E6-"U+u1f)PjQ!<W*!#7)G-0dmD3"8r6"#6+am!.k3&!.k3&
!.k3&!6Y@o!.k44!"BGP=j>"*&.8aK":+u1aT)hl3R,pd1]RXY!!33%!!WZ"!.k3&!.k3&!9O7l!<E0#
!<E9)!=8`+#`W_:q>^L!q#SeA!d]?Dq>gNrqZ)3JJcLB&JcOI((BFOD$3gnA"TVFA*!-3E!W`?(#6b85
"4mPQ!Vld%#QQP79FM",rW!'$"pP,1LB)o+JcLB&JcLB&JcLB&JcNgk&HW"6!!WfE'9g;XOT5@_!XK20
!<3,R!!!*"!rW*(!sQ3^e5ZPUr<\_hJcLB&JcNXfrrMio"%%E`/,TAQ!<<*#!<WE)!T*nG!!QPVOoPI_
r;cj"rrJhoJcNsoJcLB&mf<@gqZ%92!!NNL8M:&J"onW)"98E+"pYCX!!`Q0*AULm!!`B(rt"Z#JcLB&
JcLB&JcLB&JcLB&JcOI(&HW"6!!E]D(V7f=;#gb$!X];1!<3,R!;uut!!`]1NR6"*!XJ]2!""8XJcLB&
JcO:#rrMrr#Qk&,F,>SN!X&<"rrN-%rrL@E"!`;Q/,K>H"9/C`!.k3&!.k3o!<3)s!##A6"U7=l1^jTs
!!!*'!!!3-#7&`Yq>^a*!WXrL%fce3"9/mu!.k3&!.k3&!.k3&!6Y@o!.k4:!"/u8#6tVK'hQKm\2+!_
!X8c1q>gNtgAq6UqZI?1!s&F(cc!L0!tPnO%Ia@L!.k3&!.k45!<3/r!!X<rO^S4o#5\E#!WN9%!RC`M
"9ALNF__0Y!<33%"8r4O!.k3&!.k4,!<36&!;us8!s&T:;d(LX&eG6O!!*3&#RC_C!!!$#i;ilZr;cQm
#94Zg1-7?$!WE3)";2=P#DW;2!.k3&!.k3&!.k3&!.k3k!"/u8#6tVF'nF?EOuE:>"9\f/#Qjl'rr_!U
!WrN-qudH2!s&E\cF`'W!tPnO%@$pF!.k3&!5\a9"8Dj/98/*T!!<6%!rr<)!!**&!s&G[!:^$n!sAUO
Bqu@=!<33%"/5dI!6Y@o!.k4>!<36&!;us'!sAfh;G[]!%h/^L!<EB)#RC_C!!!$#i;ilZr;cQm#9"Qm
0f)lD!W<0$')r4/!.k3&!.k3&!0I6]!V6;C!.k3&!.k4,!"K)5#6t5/#mgqD.^IFJ.D>cc%t_gQJjKA9
"98rC!<IrUJcLB&JcO-trs8N&"D2Rk0Ef2l!=/o:!*Nf_#lk55#nW$qJcLB&JcNso%gN=@!Y,\B!sJ`6
9`P/E#fm#@!"B'01dh<V#mUV>"9]>MR/hg=JcLB&JcLB&JcNsoJcLB&mf3h"!s]&2!!rr;#=ZP\_%=<\
"Un#LgoW^;!<3T0!V?AD!.k3&!.k41!<3?&!!I^q<ZhO]!"0&;!$u]D6i[Dn#mpD-JcLB&JcLB&h#RH[
rrW31rW<?+"'km,)[O1Y#QuG98KJHM#6b56"9]DQLB)o+JcLB&JcLB&JcLB&JcNsors/K&#6tJC$$FSH
R`5@&!"B;MbL+U-!!WE'&.egCR/hg=JcLB&^&\09r;[!9L5.;c"47,=!"0#=!!$taFoVOI#RI"%JcNso
JcLB&mf3h!!X&W+!!33)!sr'S!!Bq8%0HSr7lq@a!X&W.!tPt8!.k3&!.k3&!.k3&!.k3&!.k4,!<3<&
!!``6&IY;Ueo8;&#R_$?_Tmc6#lk#,%Le$kJcLB&JcO-trri9#"\4)r!!<VF!!*<1#ljrh@Wi7^#7Cfr
!.k3&!.k3o!"T,4"9\])!WiN-/Q*bm!!L@Cp](R%"!oui!!!**rWN63R/hg=JcLB&JcLB&JcNsoJcLB&
mf3k-%0-A4"p>&@--+-K3rfW&!"B2>D9U),%hSdA"9\`.oDjICJcLB&JcOj3rri3!"`SO8!!!5>!"/l6
!!!:TEDQW8"9\H"JcLB&JcLB&h#Ile";MXQ!W`<*"ueM9%D;`I!s8U(2^\_3!<`H)!<rmd!.k3&!.k3&
!.k3&!.k3&!6Y?O%1N:;"pP25%o(^$X=D3iq#Cm*#RENDdDmLC!!!-)"p^OrJcLB&JcNRdrri6""!NSI
>g<?>!!*0.rW!:fIrGDg!t,)/!<StqJcNsoJcLB&mf3e"";MXQ!W`<),"=XM%(uWM!s9-A5r\iI!X&N)
$OlY-JcLB&JcLB&JcLB&JcLB&JcOU,%hTBS!=]JB"riNOd:Epp#/:-D"9]jGd`l2D!!E]1!"]9g!.k3&
!.k4!!<39$!!>rHHSrG9rW!76LOL-A!!iT+"ciY8!.k3&!6Y?Q"U-"k"9\c-#XL='/Hl1Wa8ku8%06J9
91;&S$31A9"U5!q!.k3&!.k3&!.k3&!6Y@o!.k4>!"TYR!<EW="pQKbb0MjV#7&'F%gE"=$6X*+d"s:R
&c_nD"7uSF!.k3&!.k43!<39$!!@[gGRD.b!!E0"#p4GG5l^ll!<EB%!.k3&!.k3&!8RVc"U-"k"9\c-
#A,J?#R(82^AnN?!=9T,6S/TE":YM<"p'JZJcLB&JcLB&JcLB&JcLB&b5`%b&HMk?$OdMKaj7C!#6tUW
!;Z[+$jH\:&L$)N`A@r1!!!3.R/hg=JcLB&^]4B<$iL&/"G;#!!<^XJmJmCn!!&^8FT)7@":Ce%JcNso
JcLB&mf3k%"WSQd!sA]+<&l*/$j$LG!"K&1!sJ[,4Zs8W!u2RQ!qZJE!.k3&!.k34!!!&l!.k3&!.k3&
!8RVc%hesE$O[COK?_o.#64u6_#OfI"oni>*5'A7<XT$?!!!31LB)o+JcLB&dK':Mr;ZsOM1ZuS]Dr-9
!rr=:I!P\k!<`Xf!.k3&!.k3o!"T29*#o%_"9TND3sQ/u!WpFCq>_!,!WW9*!&m21!s8Z>('9j'JcLB&
JcLB&JcLB&b5d+oJcP6>!=9>:!"&iD(:hl><r`4/"2Os<$Om"7$3l4/d#\n[!<<E8oDjICJcLB&JcOj3
$ipA2$31'/JqX14!!U(:$NU>1#VM!W)ZTjB#Q"LQ!.k3&!.k4,!"T/;$OZq7"pQ)(;ZIOE!!0n9$3LD3
!WW328La]D!s]tn",6f-!.k3&!.k3&!.k3&!.k3o!<3H*!!s>od*TB_!!!N4a8l&:!=KM=!"&m1d*fE;
)$'^H$(1dF!.k3&!5JRC!s&W/!""(%BE/29$.&\@!<*!)#69g1:B1A!$D7BN!6Y@o!.k4>!"B#4$k!%8
"TU;35n=V@^B"99rrN*!#Ylib"U?1r!!DinJcLB&JcLB&JcLB&JcLB&JcOU,%gW4E%0-AKB\(Ll+ohTG
!Pna:%MepB">n$Cbp`c5!<<Z=LB)o+JcLB&ci=Fb#666$E(Bs0!=/nE!"/f.#S@&eDJ0"M"qQ^oJcLB&
JcNso%1NRF!u;LT%hfC:$4dZe!;ZZq"TAQ4"ptc-'+P?S/2%#+R/hg=JcLB&JcLB&JcNsoJcLB&mf3_%
!Y#V>!$[cZcXnK:!!*ZFr;[-PT[2"j)$'^H$hOFN!.k3&!.k41!!a&?!*FMa)Z]g;^AnWB!=08;;ep:j
!!Wu2!.k3&!.k3&!8RVa%gW7=((ps3&.BKb%hHDTr<3B0$4A3o'J9Ln/2%)-LB)o+JcLB&JcLB&JcLB&
JcNso$NgAI'`\4r]?nVS(W6=M!!*]Cr;[-MDp?Ur)ZTjH%%.*I!.k3&!58F@%13)`D.!>D!<<3(d/`V8
$O-\?%KI\aBiP-?$D7BN!6Y@o!.k4>!"BSP#6lFu"%N=k#mLbE^AncJ":#)>%gi@B"^VHk1^!sR!.k3&
!.k3&!.k3&!.k3&!.k4,!"8o/*#/GR9$GSt(Dd7h!!*ZBr;ZsH9?k`""<.=@$kA$mJcLB&JcO-t$ORUQ
P\O1u!!iQ4"2=gD#QkD@!!$SAM#\%kNW=Y2JcLB&b5`"b%gE4_-NI3J!!WW?$3\BLq>_$0":,/?%13(>
"Gd=?0a%QG!.k3&!.k3&!9X=^$(V'J!6Y@o!.k4<!"C._'cD_NdtnbF!!!iF_#OuK"98E)"98G5bgC>/
!!il&!.k3&!.k3&!9O:]%/g/2.u8?Q!!!`K]`A'8r;["$EcqEd"oA:O!.k3&!.k4*!"C.`"pY,j9b%.*
"U,,6^AnNF#QXr:%j<_I!X9S_K`H])JcLB&JcLB&JcLB&JcNmm%2KEh+K<f6CC(:I!"oa^!;Z[+"9\])
"9\])PgIm?!!!31R/hg=JcLB&_>jTI&H)S1<KCqp!<3e[!:Kpf"T8<(+aA5N"UUh%JcNsoJcLB&m/RG0
%gE1V5Xkq["9&H("MXpF#RCG3%hAk&*<7$"!qQDD!.k3&!.k3&!.k3&!.k3&!8@J_#6u>7b0Rdh"pY,.
#7S9G"pkS:!F*h!"M+R9!!J&WJcLB&JcO:#!=BG;!!7FsAc;Z1$P'oOrr`9%qu?qMHr'hN!<nPbJcLB&
JcNmm%0m+E&3`NI&cr+@#m(.K!;6C!!s98Q!DF@5"q6guJcLB&JcLB&JcLB&b5d+oJcP0<%0m1XC!k%t
1Bn6f!!`eC!"0)>!<G0pf?b<9!!;cmJcLB&JcLB&jo>De$N:#2-A6S.!!!$-(;BkL"9/E"!![+eE>Ji\
!W<"M!.k3&!.k4*!"B/=#;8M1.1QCZ#n-k;]`86=!u2O^4rj\?)@D/uJcLB&JcLB&JcLB&JcLB&aT)\M
#U5nect4C,"onnJ!;HO%#mh1U!<F=0f$RY=QN2U;JcLB&^]4fG#QR_GG9d.p#65)3!RUo;!<39"!!Z2I
F!L_d!MTRG!6Y@o!.k4:!!s!.;GmZ)!!!?=^AncL#6P&3"Wnfm65UFU#6b;'!.k3&!.k3&!.k3&!.k3&
!.k4,!"B#1!X('kdEj]m#ljr/]`8<E#n[aM!?c7*!mHNBK`H])JcLB&e,U![!!<B)IsQ>>!"&`,#QXtB
!<39"!!XWeCfCB;"-<M7!.k3&!65'G$uf0E"pk80$4t2Wq>_$2#6P&3"Wnfm*YJuK"pG-t!.k3&!.k3a
!!!&?!.k3&!6Y@o!.k4>!"B;@!!$EPd^9Gj!!!E;]`A!E#6=i;1WI\Q54S]*!.k3&!.k43!"B/:!.oDb
!!!6-!!!00_#XK?r;[-*!WWX?EGtmY#lOaT!.k3&!.k4,!"B)5!!!@=?pt+u!!!<5^B"9Ir<3<I+U&Mm
"<0?0#RQ7dJcLB&JcLB&JcLB&JcLB&b5_tV#lk![aNotV('"=M%)r;B!<!Q;!<E]H^=:S(!!8PgJcLB&
JcNRd%0m(^H#OJu#6b82!!Nn\!:^'h#Q4W/!Wi?%=ac>2!=>J#JcNsoJcLB&mf3Up!rr<J@9t8^rVus5
$,6K?'E&(@+X$sk%j+IK#Rp>*JcLB&JcLB&JcLB&JcLB&JcOU,#6kAF%DTs=;Z-Uq&%qrK',(ic!<EB*
QNYFXLB7d;!.k3&!.k3t!!?\KNr]+`rrE'&_#XK?r;cft"9:9&I3"=JJcLB&JcNso#6Fr,"@>_(%/g2+
"NCH<!"TeZ"U,#3(`3Vb$oB40!!enlJcLB&JcNF`!!UFDJcLB&b5d+oJcP6>#7C_F+jJ?Q5Q(T^&%qrP
',(ic!<EB*B@GA4"Tn;rJcLB&JcLB&irB2lG^F-)r<N?&rrp4=rs/K&rW*-%!f)CtqZ)3JJcLB&JcOU,
#71G7!)HI!')_h1"MXpD'bplU"9]PY$O-S54XUF:L&cf*JcLB&JcLB&JcLB&JcNso#71AQAC](o-iF&F
#latI!;HQo%/U#..E^)\/J=HOJcLB&JcNXf$NpG0+bG&/!!``5#0d/<!<3/u!!WN*!0)28"/,^H!6Y@o
!.k4>!"BAA#m3LV4UV5i!WiH+^AncQ$j6\5!!WW7$4C8S$3pb,!.k3&!.k3&!.k3&!.k3&!.k4,!!`N)
,b33*C+B/^rs8W+^B"9BqZ$U?"K'Gg<u-PkJcLB&JcO0u#[2Ip&-)q?"pVa@rr`)t"U"g3D/Uh`!.k3&
!.k3o!"B,:$8+G%(^g<D!WiH+`W5i8%h&jL"98E+"pteH57J#I#+5IC!.k3&!.k3&!.k3o!.k3&!:9ai
435Of2B;SorsZ^DrrW-!#n7=D!#B"lc]B:A!.k3&!.k3&!9O7j"p=pHCiTa\!<EB/"U2L<rri<$"T\T[
GAp(M!.k3&!.k3&!8RVc"U5Q2,U`Wu%hAgI!!!-)]`86O'a+XD"p>&_%1+luLB)o+JcLB&JcLB&JcLB&
JcNmm"]!If_&sQk!<3JK!;Z]q!rW**%1N:;)_]aoYTT>6JcLB&JcNXf%1iXBJ8JWn!!**)"pG1V!:9an
"9\])!WW3-H@]n+!.k3o!.k3&!:Kmu#mLf;-QiTt%hAgI!!!-)]`8ET'a+XE"p#,E&Prf+!.k3&!.k3&
!.k3&!.k3&!.k4*!!eD/cC>:O!<N-!rtE3KrsSc*";VaW!!WQ6^"^CrLB)o+JcLB&e,TX`#m>3g/,]JJ
"of"E!"8l/#6t5/"98H);hfRY!.k3&!.k3o!"T>='2K_N"9]JU$46b5"U2sIq>_$.!t#AZ+pJ5S!!Wf2
'hnat!.k3&!.k3&!.k3&!6Y@o!.k4<!!g![cZT^/!<N-!rtE3KrsSc*#o49Z!!!7oe\uk,!.k3&!.k3&
!9O7a#n'1@Fo27>"of"E!"Ar0#6t5/!rr<&.=-@cr;_ELJcLB&JcOU,%g<.s9d'K>!#?=W$31&0"i10G
!s8l;+sI3q!rr?)#65?4&r-I=!.k3&!.k3&!.k3&!.k4$!<33#%/g/6%3s9@d4G=u!s8r?_uTQ4&Hi4G
%0?S2!!WL:`Qkau(BY-F!<3-##6+b&!.k3&!.k3t!<3)o!!rc2!!%=\PQ1jir;cj"cN*J8rr`,u#6P&/
!#UB08H&Sl!s&N*!NH-O!6Y@o!.k4L!<30$$Msr>!!!3-":lgu=pu&X!<E<+%1N@?_#XKDrrN-&rrE'0
rW!I&#lk)0!<ro@$OZq7!Wi?'!!rsc!.k3&!.k3&!.k3&!.k3&!9X@^"T8c-!"06(dEA[A!!!*'$k0`J
#Qt8>%0?S2!!W]17E3To(_$QMr;cj!rs&K)PlQC9JcLB&iW/uZpAbL&"99HgE+AqO"T8?#"2=j9"8`''
$j-M1!/>N0r;Zp##R1<s!.k3&!.k4(!<30$$Msr>!!!3-"=GE:3XZT7!<E<+%1N@?a8l&:#n.4C!<`N*
!"fb@!"r!4"98Q*!=KAG$NL/.!WW3,$)moV!.k3&!.k3&!.k3o!.k3&!;QWp"9/Z,#Q4W+)Lp,^GU!(d
rs8W)rrg(:rri?0r;[35![=tmfL$8\#64f'!!39+!WW:S!.k3&!.k47!"T/6!'baV/-#hZ!<E0#!<Kq8
rr`,u#Rpk<!!$qUM&?3l!rrQ3!JUT+!.k3&!:'Xb!riN*"oe])!ri9"#7`d@-PZt%'`\49!t#A9!PnaC
$46e7!s8N'&e,!Y!")%**Y\bX!XT5E$NL/-!<<*)#F>FB!.k3&!.k3&!.k3&!.k4$!<30$#lb/.!!O=@
cdPK1r;cj'rrE'%a8ku8rri?0r;[-7![<HAds)K7#Q"N$"TJP$!.k3&!.k3h!"T/6!,Zq/!!!0.!<E0#
!<LLHnGrRkqZ$m(!sel,5&Pj@rW!$$"T\_*!.k3o!.k3&!;um<!WiT3"U+u1!Wi?%#6tN@,UWR!',:KI
!s8l;!<L":'+,'I!<WE(!"BAA!"'_W)*J-'!r`N1$ig8.!<<0$#7#q_JcLB&JcLB&JcLB&JcLB&k5bM`
q#CR`bKe'S+8l3>!ri9##epB>"9/Z*!!!B5!Zt7^c)DTj%1E(6rri?'PlQC9JcLB&ec6'Y!<@XpC&e5:
"9Sb<!<3)s!<*'(!!!OUJ8kJf!sS`+#+,CB!.k3&!7q5N!riH&";:tD"U,?5-m/g&',(TU!!!'%!s?UE
q>_TC#QXr.!rr<.$3L87!%]^&#6Y/<!X]>;!W`<%!!WY,!.k3&!.k3&!.k3&!6Y@o!.k4H!<3,r!!R)b
bGQ@'r;cj!rrE')^B"99rs8Q'&cr+[.)jZJ1(=["!!!$"!!EE+!!7cQJcLB&JcP!7$NU88MfLr\!!`W/
"1nR5!W)it!t"o+!cs3TrW!$*!!*=Z!.k3&!.k48!<3-#"oSQ;"pP57!*:NT#RM4Z#6t5/!WiH+_#OfJ
#QXr.!rr<.%KI1C$48(8BE//<$j$bG!WiB'!!!3-QN2U;JcLB&JcLB&JcLB&JcOI(rrW3&q#CX$!hn,`
HPI:m!<30$$ci>C!<3-#"T8<.!s9GYT[1Sf()@#Wr;cctVZ;;KJcLB&a8l5@r;[$YJTDS,!"Ai0rrL@E
nGrRiqZ$X!#lO`*;3-GKr;Zj!#-%ZT!6Y@o!.k1o!!!'%!!!$#!Wic=%1NLG!!!0U2#mgb'+YN]!!!$#
!s?@>)$9s@!!**#!!`f2!=&iW:07c+"p"]2$jHq8!!3-%!egW+!.k3&!.k3&!.k3&!.k4:!<3-#"8Mp%
!Wp3e_d4&mqZ-WursQRArrW3'r;Zg"$4@[fHc3pZ+W1@hr;cctPlQC9JcLB&g&V-Rr;Zn,IW#,b!"]&3
rrKe5rrMus#lt&,!WW3JItp/b!<3(e!.k3&!.k4*!$;7D!!!$#!Wic=%1NLG!!",o2#mgb'FtW^!!!$#
!s?UEq>_B8!rr<%!<<*("p"`0#7<n&,6S5P!t#D?#5nQ%!iZ0O!.k3&!.k3&!.k3o!.k3&!;uot"9/W'
!!r`1&N\C`_'KNrqZ-X#rs-"5$Od.N&NRqX]-JC*#l=T%!s/Q+!egW+!.k3&!:Bgh#6P25rW!$5G@uC(
!!NB-"9\`+[/^7/!!3'!"U16JC]FG;!!!0'L&cf*JcLB&m/S(4$3://!WW32%1s*O!<iuO'3>MB!sJo=
%0Zq6!kSF8!WiH*!>5D:"TW@/2[Tfl!t,GB#ljr+!L3Y:!.k3&!.k4C!!!+_!.k3&!.k4(!<30$#Q"K-
!s]EEdES1-$jle2rs&K.a8k]0$O[(N&MgW:_*B"H$i9r("9/G%!.k3&!.k3n!!<E-"9\W'"#4k6:&Y.m
!WN<&!R1W/!!!,u!!@J%Fp%^DrrK,"JcNsoJcLB&*<6'H$3://!WW33%1`sM!sL.l(,ZF#!sJi;%0Zq6
!kSFJ!WiK+!!*6,!*)KL!!iZ/$47(G!!!$"!J:B(!.k3&!.k3&!.k3&!.k4:!<33%%0$G.!"05K+IUU)
<=o32"pFl)rs-:=rrW&t!Wi?-$3UbD(kBuSE$u,.qZ-QsQN2U;JcLB&g].EZ#Qk2.!!lMDFXI.i"onZ%
"1nR3!<*#r!!?AUFX$ebr;i>eJcLB&JcOO*(D.5[!<`N+!=]MI$j6_?3uAk`"UY\?!W<3%!riJG!;6C/
!WiH+!<<*#"9SWr1+NeA"9Ji7$O[";r;iktJcLB&JcLB&JcLB&b5d+oJcP`Lrri?1rr`3"$Om[s^!FqN
'EA+="T8?##JU9=!rDs,!WWE-$jd>AdE%_%$k`@:!!E3&K`H])JcLB&mJm=k$3LD0!!n'nD#aP:"onZ%
"1J:0!W)j"08+ID!!N?&"pG#.L]E#,JcLB&m/Rq7&HMn8"9AN4%h&jL"UeTP('b!M$ipD-"oeZ(#/(!@
!WiH+!<<0/!<`K--Sm8($3UJ?rX8`-r;i5bJcLB&JcLB&JcLB&JcLB&gAq6Srs&K5rri9#$PjOWda,H(
"98E6&,cM.#0$Z>!<33!!"K)4"pP;7!$fn7]e'g,#Q+T%"9/M'!.k3&!.k3n!!<B2!=&N'#)dV%!!iZ/
r;ciurrE'#d/`P6r;l`p!ucQ/ErH%=%/p:/!.k3o!.k3&!#,D5()?rQ"9\`+$4@+H"pP'+,ngmi(C:6J
!!!0+!Wj#K_#PGU!<<*("pG/1!!33&!<=#^*Baf7":khK%0Qe7rW.]QJcLB&JcLB&JcLB&JcLB&m/[.e
rs&K5rri<$$iq+ZK$ho-!!3-#%hJU=rs$4<rri3!!WiE-$O-h<!"6Ngc:SZZ"8i0!"9/Lj!.k3&!.k4+
!"B)8!=Jl-,`6^d!!r`0r;ciurrE'#^B"96r;l`p!sr=^N;`eZ#lju,RK.p>JcLB&gAi<2('4O?"9AN1
$4%"D"qXTW!"fq^(Baj@!!NN-!YZ6g!;Z[7!<E0#"pP57!!!'%!!*'+&KjgM"U#8@%1NFCr;iktJcLB&
JcLB&JcLB&b5d+oJcPfNrrN-(rt589rW!-,*#uK5cXQkS$31eU"9\])"9\`+_#XK<qZ$a$"9o&3rW!+g
da3=Q&c2P.!s/Q/#)*&/!.k3&!:Bgr#Qt/7!!$5NGlRmI":G)-rrN-"rr]q7r;lis#6=f,!@rMS+T;B?
!Jg`-!.k3&!:9b.)B&YY"U+r/#R1A;#RDk@0a8gG+!Uso!<E?-!<F/[_#OfC!<N<0$3^S6!<Nr:!<<E3
!#S91"U,2>%Lr[I!<E6'QN2U;JcLB&JcLB&JcLB&JcOO*rrN-(rt589rW!-**$*_ScpRd5$31eU"9\])
"9\`+a8l&:rri3!!!E3)$N^A0!-cf3TFi+C"8r6""9/S)!.k3&!.k3n!"BD@!=/Z*O*,^J"Tef>r;ciu
rrE'$d/`P6r;lis#6=i3!<@@q9)\el#lt(.!.k3o!.k3&!"8i-)B&YY"U+r/$3gV3#SBNb1D;&Y+!h*q
!<E?-!<F/[_#P5O!<N<0$3^S6!!33&!=K/5(-s&H!X\i9!X8i0!W`?(K`H])JcLB&JcLB&JcLB&JcP0<
'aFsD!!NN8%0-A>!\eH6e;45,"98\.!;lg+-,\9T*Y&/M$k*+9"pU=mJcLB&JcOd1rs&E%!Y>eErW!1M
LiNLr!rrM4!:g+"Q$R$B!!<<'!!<<'!!<=r!.k3&!.k4*!#5P:&.fEc"9\])'F5-g!!$g9!!<3)^&[Eu
!<dB@!"&i>%g3"G%fue=$)moV!.k3&!.k4/!!!.t!.k3o!.k3&!#Yb:#6t5/"U,>E!!!--0TF3(@fQK3
!!E9(W;m>HWR&jK%fcS<$ig83!!\&UJcLB&JcPECrs&E%!=oY=!"'orMGF3P!rrE'!iQ)#FDu.+'EA4;
!!!*'!!!*'NW=Y2JcLB&m/Rq(!Y>nT&Hi4:!"'/E2ZNhN!!!*$!rrD*!;lg-#[%--%g3CR"9]5G!WiZ7
QN2U;JcLB&JcLB&JcLB&JcOO*(Bt'D!!WW9$ig84(brJAdP(Y'!rrE'#/C6(!"BZkbg^8@!!!<3!!!3-
VZ;;KJcLB&ciF(Mr;[?;&-)b3<IK`M!!33%!WWAF!8mhe8o8l5!!*?*!!<<'!!*,+!.k3o!.k3&!#Yb:
!Wif?&.esI!!!'4%9<H/,6.cH!!3-'W;m>22ZNq/"pbS=!t5S>!Wi]9K`H])JcLB&JcLB&JcLB&JcP0<
(Bt'D!!WW9$ig84'KXLb`sVkL!!<?("Khb&!"BZ?cIA0p!!!<3!!!3-PlQC9JcLB&iW/u_r;Zj-')hk<
GD1>L!!3-%!rrG4!:g+"+`D[=!!*B+!!<<'!!*+n!.k3&!.k4*!#G\<%1Nj["9\])!Y,c[!!!<*!WW9(
!!C":l2V>!'EA54"UGJ<!t5S>!X]:6!.k3&!.k3&!.k3&!6Y@o!.k4N!<30$!<!0.!!!NA?dR3"r;Zp(
#64h)!"9Ggaj7gN!X&]3!!!3'#(lo-!.k3&!;$9k"oSH$%K6>/HBDJ2!!<?-!!0"u!X3Of!06sWrrN-"
rrJ,[JcLB&JcP0<%KQS;$4I=F!rr<("V5AZqu?g%"TSS+!;lg-"TT8U@L)r6!WiQ1!WiW5QN2U;JcLB&
JcLB&JcLB&JcOO*rr`9$r<Ni4!#,s'bL1e=!rr<(#/1*&!"BPSZ-1Ed!WiQ1!!!3-VZ;;KJcLB&ciF(L
r;[99%0-AKEK`'V!WW3&"NLN"!!>r:Se:o$rrN-"rrKD*JcNsoJcLB&(B=F9!=B/B$j-S3!!NKXBFk.D
!WW3&"K)5&"U+uED>jM<!WiQ1!WiE/#_`81!.k3&!.k1N"bQf,!.k3&!9jIk$46n=!!!lX[EZf_r;Zm#
!!B>'qu?s6$\-=DM@C$n!<37g!.k3&!.k43!<3*""8r3)%h/L=9llL(r;Zm"!!9S/nGiY;JW;bd!<3(m
!.k3&!.k4(!"8o1#mgV5!!!619O]LL!!30$!l"a#!!`T.!'3mm"9eZ'rrW3+W;qMMJcLB&JcLB&JcNso
JcLB&qZ%!2$3UJ3!#[6/dDRF3!!<E*!!fG&#8.DMc,6js%K-8,"onj[!.k3&!.k4E!<3*""8r3(&e=sB
EI3`E!!<?(!!T5"!<IrVJ84l[rrJ,[JcLB&JcP*:%0?S;#lt&,!!`[9B-n#c!!<?(!!TJ)qu?s&!rtJQ
2Zs9^!<3-##aYOC!.k3&!.k3&!.k3&!.k4&!<3N,!!O]Te'"$m\,bdo%0Qe]_TL(Y(]XO="9o(.!.k3&
!.k4!!;urs!!Wi?!"aHnCVTr,!!\=-IKKQP"8r6"!O;]W!6Y@o!.k4J!"/o4!Wi?%$4UHL+pO_@$ipA8
>qIW.#71\;!<N<("pTb]JcLB&JcLB&JcLB&JcLB&klC_mr;[!FK@&"^'rD!/!"B,8+eR'(<#>T8"9\o5
PlQC9JcLB&j8f,Zr;[$7$ii5.G!`>3n,NZ!JUSU>!sAK%rrJbmJcLB&JcOC&$NpS6!WW3-.pcQ_#.OZu
!"T,3$9Kmm&-iLJ!<E6'"pV%,JcLB&JcLB&JcLB&b5d+oJcPZJrt#&."Y7.,dOGKq!"8u1%Udf3M]`!"
#mge9#(lo-!.k3&!;6Em"8`'&)%6LZCNUbm!!<B)!&k(4G!uB6"T8?#!KI/3!.k3&!:9aq"9\])"9]#;
!!!Eq;d?*uqu@62!<aqn(F0;!&H`+:!X/ao!.k3&!.k3&!.k3&!.k3&!7q5N&,cJ36da#q$O=0Al2V7q
!"Ld6c`n_q!!rr9#,_HQ!.k3&!7ClI"8`''((:2$BOV#D_#WEo#mLA0&:o(F!!EH'!<3)*!.k3o!.k3&
!"T&0"9\])"9]#;!!!@0;,Ekb$j6S6$5saN$5!jP!s/N*"U0S[JcLB&JcLB&JcLB&JcLB&lN$qfrt>81
")uZ2XJ>jl!"'+Qd)eEN!"BAA#*f1?!.k3&!9=.["8r3+!<ET;%>JRW#R[a8o)K't!<<F8FGKo#"oSH$
!MBFE!.k3&!8@MR#QFi)"of)3!!5bg1:@2J!"T>@!!rW/9*lCN"9\c-"U1k*JcLB&JcLB&JcLB&b5d+o
JcP`Lrri?7r;ZqjaNfL0!!r_'d*H5&!"BAA!!\&UJcLB&JcPKErr`3"#lt&8$p8`M!!j",!!<6-!!*6_
FcR1>"oSH$!KI/3!.k3&!:9aq#6t81"U,AG!!"$*;A>o,qu@65$NL2-!`/k5(BajB!X/ao!.k3&!.k3&
!.k3&!.k3&!8.AP#QGJ:!!EG;aj=2!!9O7fJ^2N.!!!N?"pUt*JcLB&JcO4!rrr?$#m18<)e!l.!"'.N
!9!na!tGD;!-!c^"U4i)rrKD*JcNsoJcLB&%fcS:$3C84"V2+D!%g3.&t].4$5!UR!!#D()]Jn_!WiE,
"bcr.!.k3&!.k3&!.k3&!.k4:!<3<('E.t7%Ed#E6_j_Z!"9#2!+jEt])VgA%gE6'!.k3&!.k43!<36$
!!r`0%jZ@JEW?FRY5n.o#m1bA"orLnD?U4B!<3(m!.k3&!.k4*!"B8B!WiN/%hAX?3^-FT[K,Rm%gj!X
$kND)1E.89"9JW."fVKR!.k3&!.k3&!.k3o!.k3&!;um,!<EB/!!"oie^S[@":1Y#$NpJ1-bdgQ1E?Gq
#6Fu.!egW+!.k3&!;6C%"U>&/!!!6/!!%=jBEb".!sK#5$O?`SC39a]#RUTj!.k3&!.k4:!"C.t!Wi?%
%h'*a70!Z(V?$Gm#9=op?P41U#6"T(!>QN>!.k3&!.k3&!.k3&!.k3&!8.>]!WiQ2!!"m7f[WOn!Wok3
kl;1s!<=L=d`to4!!!-(!Wf8#JcLB&JcO4!!<i`,!!`i>!%<DE63k7*i;a5h$N^M48p,&!!!iq7!.k3o
!.k3&!;um,+sI'i!!!NW'bVYi#RI%&$6:,p6PpL>#64`)!Wa,UK`H])JcLB&JcLB&JcLB&JcP0<%flY3
!X&`.!'.L?cPHQ`"/Z(q!"K;9!@2@2bDdG@!!<<+!LEe<!.k3&!9=+\#R1/,#7:e<>_R8?$EX="!"K)=
!s8N?KksWe#6t5/".oRF!.k3&!8.>R+<U^a!!a'*+r^L^#7%a=kPu&1)@@K4)^ksl!!**;&ubk_!.k3&
!.k3&!.k3o!.k3&!"f22!<<0&"pY,.9$Gi!!rrT/TE#?*!<FQ-f?CQB!!!*&!s\j\!.k3&!.k4E!!*?/
r;['-"TWq"<t#G.!!<<1!s8l1!/,6=!!``/!!J8]JcLB&JcP*:ruh7?#7Oi]%KHJ:#GqLt!"Bhb$OA'u
8-o7r!<F,PQN2U;JcLB&JcLB&JcLB&JcOI(%0?S3!!WXOd*S3a!"9%@!9sOo!X/Q(*ZE&EaZT_0!!!5%
!.k3&!.k4!!"B)8!!!'$!!!4PIkhZB^B!0l#6G#2!!$k`Oo,1Z"gJ&Z!6Y@o!.k4L!!+#Yr;['1=#UHd
!"K7+!!X/Q#mVe0;>gIr!#,lr!.k3&!.k3&!.k3&!.k3&!:'Uo!<E0#"pUpMc>O!h#mI1+qu@3.!WW3>
)Pb^&AHN)9!s4bgJcLB&JcOj3%0Zt:!!**#!'YaU$5a#M!:^$o!sJZ)4+EG;rVus"!hTIE!.k3&!8.AP
*;oj=0NBt/!!*E2\,b^m"r7pZ#7<+^qu?a0%B0>Z!.k3&!.k3&!.k3o!.k3&!<)s.!<W?&!#QiucGVsJ
!!WY$!"9/:!!!H;Dp6@p&J"jA"+pT*!.k3&!;6C%"UG,/!s8N'BQ\_'%1&L)!<ri6!!!aeL._FF!!8)Z
JcLB&JcP*:%2]i\!!N?e7Sj?j!!NP'!;ca+!>#hG"9:_S)[-?E!X8jq!.k3&!.k3&!.k3&!.k3&!87D_
!sJ]*!$Ef@c+kb.!!We?!9sOn$NpG0%2Da^a1Duq!!K2"JcLB&JcO4!%0[%<!!<<'$@Qu=!!j%K!9!n[
!WWH4rW!"MJoUbi!WrE'Z2fIVb5d+oJcP`L!?)[N!!c7h9+(_""UUh%$NUhP"9SWg5;`TI!!36,#)*&/
!.k3&!.k3&!.k3&!.k4;!"K#3#QOiIF48B]+92BP#GqM!!"KGD!!!6(-ah(B4raP&#*o7@!.k3&!9=+h
"UP//"9ni^H>c%K$4*a6nGit$!snu.Fa8TC!!<3)T)aHCJcLB&f`2Hk&I8[L"@,".#QOi3!k86q!"K&4
$3p_7$UZU+!!i]1!N6!M!.k3&!.k3&!.k3o!.k3&!"f22!rrT/!!".(e&l,<!!!N7T`>K/#64`,!$RQO
c=7go!<<.R!.k3&!.k4E!"B8=!!!-3!)e,Y-NFP\SH&Zr!t#86!)8#p,le#I!f[23!.k3&!:'Uo&Io'S
#oPud,6n2K$3I()qu@0-!Xf5:!"(/41`$E$"I/t=!.k3&!.k3&!.k3&!.k4*!"T24&-i181:u&T/-c.T
&IGrIl2Uko#m:/,"Vk.hbaTsY!!!)"!.k3&!.k4!!"B>?!!!36!-<Bj'`\aO^B!-k%1*%D#QQ9*G"_l<
!s&S2!.k3o!.k3&!;um,&I8m[%O!YU*<H3@#m6k$$j6Y9!=9&:%kK"d$4-\=K)gK'JcLB&JcLB&JcLB&
JcP*:%1<C@!)Ltj\ISoF!"K=4!;lfu$OHq7!!O)idE96TrVup%QN2U;JcLB&j8]Vo"TSN,"osd/8cSi#
$EX<u!"B58#R^V8IW9Z6!<rQ/TE'QDJcLB&f`2Hh#S.FG1G^$W!WW3)"1S?r!"B#4#6>,;"op(t=:>HB
VZ;;KJcLB&JcLB&JcNsoJcLB&rW!E5$P3:<H.:08!<E0#$k/g0!Y#PArW!-2%`$698,r\k!<n/WJcLB&
JcPKE%0[7B!"B/XNbp!@!"94*!!*3&$OdXJ!*a5t!!*9*#*&\8!.k3&!:'Uo!t#hX!$EWj&eY0E"9bS%
qu@0/"98E6'*J@J(gdUX&![-H!.k3&!.k3&!.k3&!.k4)!!s&A&HDg+cHC_=rVus-%CcE'!!3Q=!WE'*
%1AZKdrPKh!<fA%JcLB&JcO4!%0[IH!"0$*Kk15a"UYUO!8dbc!WWW@!!"HaN"Q<q!X#_.JcNsoJcLB&
r;[9/$PsHV)^>=q'`\4:"JGf("9\])&JG6K!#],R%fd&k!.k3&!.k3&!.k3&!.k3&!:0[l":Ye?"2`='
>QOg(!=]F6!;lft%2\sC#m:BOcd/Bi!!3=j!.k3&!.k43!"B)?!!!6LDLYmk!!ir@XT7kk!s&E6&,lP5
E.LCc!<E=r!.k3&!.k4(!"B&6(*s(n)]'J:!<<6)\,bdo%0R(>!#?:M!<a3?0bk1r!.k3&!.k3&!.k3&
!6Y@o!.k1_!!!$"(C^?bd*KX%!<E0#%h#'2!=^"H!!WQ/<79"0$3C21#)*&/!.k3&!;6C%#mC;/#<%6e
=9&=(%1Jd-rrE-6&,lP5FaS0A!<WLc!.k3&!.k4:!"B>>(,um;(DIi1!WW?*V?$Mo%0R.@!#H@N!>cYQ
9H"D+!.k3&!.k3&!.k3&!.k3&!87D]#ljrXH.C,T)ZTjH$ap'#!"B;D!!!ZG!WiY(cc]B6VZ;;KJcLB&
dJsdY%g)n6+bFc'!!<K,!!r\B!8deV(An.7NH&\FY5j.Sb5d+oJcHA_!!X#E%1E4S&NBat%KlkA#b_5,
#RCD1"U+u1!(o72!!3K4#DE/0!.k3&!.k3&!.k3&!.k48!!t9LdFCu)!!!B7U]C;m%1<OD!#$"I!XO+r
d<?e"!.k3&!.k43!"T)2"p4isI"EdI!t5/0#Q_+/nGrS)qu?q0Ciq?1!!AkoJcLB&JcOO*%gE4K%1F-j
)'B%h%Kce@#e0m"!"T>@!!!0+!s8NO3B[cX#77@0JcLB&JcLB&JcLB&b5d+oJcP`L$O-Sl`QcdW$NL57
$(h2+$46b5&eY6I#X->]U&l_C#DE/0!.k3&!;6C'"T\o0!.&p@$NL2:!!!0'T)em+r;[')05cAC!!!(\
!.k3&!.k4<!"TDB#QbMr+<q'm$4d4@$4*L/quHa&rrE!$#64`a6nJcH"IB+?!.k3&!.k3&!.k3&!.k4*
!"B&2$NOG[caF5i!!!<3[K,Rm%giXD!"onG!XTR^f"3a="/u9P!.k3&!7CiX$NUY9!0)D.!!!01!!!-&
_#W?mrtYJ4"9K$IJp+<tJcNsoJcLB&&HDe@#Rgb76Qum@!t,M>!sf1+!<3?)!<!'(!!"rG703hs!egW+
!.k3&!.k3&!.k3&!.k4<!"Ar/'F]lBe:n25!!!91U]C;mrs/Q(rseo."h;q"<=&ns!.k3&!.k43!"TG<
!!"U%N[Xr.!s8N'!s,S*nGrS#r;Zs&"'^;)SH+6AJcLB&gAh`n#QOu12Eh*B!XAl2!s]%?!9sOp#RCD1
"9]#;!!"Z@9E5.rW;qMMJcLB&JcLB&JcNsoJcLB&r;[37%^X+%?O$i:!!in'!<3<(!<3N-!WrUicH--8
&-mmhJcLB&JcPKE"p"`)!+'l-rW)s!rrE'"T)em&r;[!'"tP(P+cHDQ!.k3&!:9as#RCP9,;M@]!WrW2
!s8`3V?$Mo%gWF@!!EE2#ljr<6V\*k!g`n=!.k3&!.k3&!.k3&!.k4(!"0c&aj%=P!X&K'$4"!>l2V=s
!rr<,#QXr+"BWalV]-/G!.k3&!.k4!!!WN-!!%@sFnu(=!<^.<hZ3Zbr;[!)%0M957^)lE!6Y@o!.k1_
!!!<3#QQM67L9%p!Wi?'"U1S"rs/Q(rr`91rVusm;Z\QO"GHi-!.k3&!.k3&!.k3&!.k4:!"Bu9ce"p9
!WrE&$jH\4V?$Mo%g)n6!!ii2!<<6UbgjKM&!m9J!.k3&!9=+a!s8N1KTTL8!!***Y5n(mrs\i+"U,>8
M25f9!.k3&!.k4*!<*95!&Qbo$31&-!WW9*#e0m"!"T;>!!!*'%1N:;%89hl!!K8$JcLB&JcLB&JcLB&
b5d+oJcP`L"Yk_XcYsWt!<3+i!;us%!!"+?ciVKg(khsA!.k3&!;6C!!s8NTJq6,d!<N-!rrJ_lrrr?$
"qLq=CNXS9N<"P1JcLB&m/R4q$4R@A/cl4\"oSH$"/Z(r!<39%!!s5L!!!<c9hbTmQN2U;JcLB&JcLB&
JcLB&JcOI("Y6n+c:&NI!<3,/!9O:[!XA]*+,8%gE#>PSJcLB&JcO4!#m^V5@YB7J!!*-!!<3)9!8deV
"oSE*#7:H"E-OIL!.k3o!.k3&!"/c,%LNUs0.dS:"U4i)rr\qprs&E%"q_FI!!sT=!`9^<K`H])JcLB&
JcLB&JcLB&JcP*:#t3=ba:/7P!!<=t!;Z[)"pP&-!s8N''M6O!UE>g&JcLB&JcOj3#mpb7Li[\?!!<>&
!:Kmp"U+l+"q1JVAT_XX!.k3&!.k4*!"TSK'.G%I!W`]<!<E0#!Wok3l2V>"#6Fr,!#64P#R(3!;'u[L
!.k3&!.k3&!.k3&!6Y@o!.k4L!"!Gg_Qs@J!!!*'RfEd""onW*!rr<8,f]u6`%QfEJcLB&JcPKE#m^V5
Jnn?d!!<=i!"&l5!!!30!!$5?OGs6l!.k3&!:9as%L`=_)@uoM$k*.;!!!'%V?$Mo%gN=@!WW38'a4gG
!(9UM#+#=A!.k3&!.k3&!.k3&!.k4(!!AV1d"_K!rs#h1kPu&$%0-A1!rr<.$Fn=,<N,tM!.k3&!7CiN
!s:)iIN\Rl])^di%fl\2!!``/!"&r2!'4GT'X@^j!6Y@o!.k1Y!!!H;!!4>E%1Nm]r;rSk$jHn="98E?
)A*J]!]:!K4+mTc!.k3&!.k3&!.k3&!.k4:!!BaUhH0XUrs#1tq>^s6%0-A1!rr<.$CJrYJsQIh!.k3&
!9=+d!s;D@PlLmn"9b\(o)K:%!<<*)#64`2#ljr3=d2%A!.k3&!.k4*!!s)D!!Xt^$kEp^r;sD-l2V:u
"p>&/!#caf&-;nP7lR@HJcLB&JcLB&JcLB&b5d+oJcPcM";Al(b!5h)rs,"n$5!jM!!EE)!!NOA!mS`i
K`H])JcLB&p&GO(+(fV8!!EW3"98E&!M9Al"9/?/#RCD1#87.?!*tFuNW=Y2JcLB&m/RS)+ohT]&eu5s
'*84;"/Gqp!<!'/!!!rW',^cM&k=AfQN2U;JcLB&JcLB&JcLB&JcOL)"?k2WW'("Yrs,n2kPu&(&HDe6
"98E*"]Wmebc(So!.k3&!7CiV"$LgE63%/m"9\])!<Kq8i;aAj!rr<,#QOi0*!-6CAVH;Q!.k3o!.k3&
!!<3$%7:$o#S@dd',(EK!s>.qr<3H,!#ljj*<6'U!_asoK`H])JcLB&JcLB&JcLB&JcPHD(CC?P$jm+;
!&BbddS:DT!"0/;"98E8';bd+!<39'%/U#0.%&E.>8[VQqZ-X*rsSi/VZ;;KJcLB&oDnmlr<*'#r;[3.
!!<E*3.#p'!"]\>!<3J0!:'Uc"pFo*"&=,a+8u6B$5*^PVuVDLJcLB&lMr"1"UYSF$j-S5!WrK,!!s&D
!+9.S!<<*)#6=i*!!NP9!9sP+',(EK"9\])&eP6L$T'.Q(^C*B!!EN4!<E<+!s8Q)\H%3]JcLB&JcLB&
JcNsoJcLT,"U>5;#QOi:!!"j_bgnc^!!!B7"9\])',-u<rs&K3qZ$UA#'\M@GSp\iqZ-X*rsSi/PlQC9
JcLQ+rrN*$!WrH(qZ$p'!ru_KJK4_%&,cM.%%@7q!!i]4!!3-OH?D@L!!<Q=#mcgsJcLB&JcP`L*sDfT
$4I=F!s/N+!rr<.#n@PNAe"nC!!``0!<<*'"f;:t!$;jf!WiK-!!!TD"9o2O,U"fG!Wi?(#7(>2"9\f/
!<K(uJcLB&JcLB&JcLB&JcLB&irB/`"pbG3!"VWJ`QT>2!!!91!Wi?%%M#uKl2^hbrri?0qu@!,+A'r*
V'QQYqZ-X(rs6(6JcLB&JcO^/r;l]o#lt&,LM1`4!"BD9!<3JB!8.>X":kJ:!!R^o@K$6/$47%F\c@<^
b5d+oO8o^j!<iW4#Qb&.!W`?&!"/r6%4Y7X!!E9%"pY#+rrf"q$ka0R!<WE(!"TbF#RLn>0.][%"9SW(
"9ei.r<&5`JcLB&JcLB&JcLB&JcLB&o`,d1":,23"9AL:f>jj!$ig85#Qb&-!"KL9!;lis!WN<&$iBu1
#9YA6cGMOL$i9r($i^L/!.k3&!.k4A!;uro!!rl2$'8pe!!!H@r;cj+XT7Ye#Qtb?#64a@G_l>!!##8:
VuVDLJcLB&lN$qcrrrE.rrW0#%KZV1#R18^;`Fm_!!!3-r;cj#\,bdo)%mP_!<WE(!"TeG#mgqc/nbCk
!rr<("p+l)"1J8^!.k3&!.k3&!.k3o!.k3(!!*-*$NpO!d*QqF)#sX="8r6"#+knq"TJc*!!*9D#90bg
d9RP&"T/9"#lb$k!.k3&!.k4H!"&`,!'#X`$ig87&H)V/#b(hm!"T5C!!E9%;1FZ3!!!T7"pXr)rrJ\k
JcLB&JcP-;""daf"TAE$"oSH$"/Z(r!#6"T!<E9)!!!B;!!EQ5,XGf<"pFu,r<3-&rrN-(VZ;;KJcLB&
JcOg2!!/bnJcLB&JcO[.rW3E1_9LD$%3GQM!sAK%rs#t5kQ(Vcrs8N&#m24fJ]uJq(_d&L!<3?)"LeA_
!.k3&!7CiPCk.3>!!EW<r;cj'^Aupe%gW==!WW3CIuQ,^!"T5;#5\E#!Q"hg!6Y@o!.k1T!!",l?46u9
!<36$!<3.p!"9AK!<E9)!!!E8!!3H4#QmA"*sVrL!<!'#"9/E%#*f1?!.k3&!.k3&!.k3&!.k4L!<3-!
"T&0*"9];ed*K<W%2bT8q>gNsrri3!#Se(Ea3D.?*X)B@rs&K(V#Z)IJcLB&li7+l!<E?&!!<^^IrG;d
!<i]+!WN8(!:9ag!<EK/qu@"XIUE-U!rrN0qZ-WuYQ07TJcLB&klCY_%KHJ6"Tnr0!<``e2G4J^rW)s#
r;cj&\,bdo*si5R!!**#!!`Z-!!WW-=\:X\#ljr,!X8i4"U5/;$+U%f!.k3&!.k3&!.k3o!.k34!<3-!
"T/9!":#u>bg<(5%1e^(rrW3'r;Zm(!#5\T-HF9\-Qr9drs&K(P5p17JcLB&rW!9.!<EH+!!XcsJPZ7F
rs&E&rr\_j"onW(!=/c2r;ZnQH&_b&!=0#/!<3.m!.k3&!.k4J!;up3!!!3,"UY82!$3mS2[]`k!!!*'
r;cj&V?$Mo*si5R!!**#!!i`2!!WZ8=@Q3q#ljr-"9o&6"U5/;$)[cT!.k3&!.k3&!.k3&!.k48!<39'
#l=T.$P"&Ac-g2E)[ieKhuF,l!#,kYO3Ydf,R+YT!<351!.k3&!.k4)!!<</"TeT&"^c_4-3+)G!<39'
"9/B$"2Oun!;up#!s8l2rW!%&G%rB'!<33!!<3/<!.k3o!.k32!"/i0!s8N'$k<UM!s8i76psWY#QOr.
"8r6""9/Ou!<3,r!!30$!t5;:7Qi[D$3C2.!=&l.#6,!p!.k3&!.k3&!.k3&!.k3&!;ccr#6+u+!!s#O
)6:m,6lcjIS,i*[$O-SE%Ms!2aH%SR#5nQ%"eu'L!.k3&!:0[m!s8`.!!<4BGD$8"!<39'"9/B$"0V^n
!;up#"Tnr0rW!$WIV_CN!!*B/qZ-WuYQ07TJcLB&kl;G"!WrN)!"98C#Qk&3<'a(U#Qk/1"8r6""9/P7
!9sRa!qu[(!sAfX5rU5"!!39(#7(23rs?49JcLB&JcLB&JcLB&b5d+oNWB(`rsAQ&!>6O^5K:d[',CiZ
"pk/-rsYM"rrW&t"9JQ-!!ii<#Va`NZmcRnr;cj%rrSAaJcLB&LB.>TrW)ot!sSl4"o\K'L3[Y5!<3E+
"9/B$"J#Ms!<E9)#lt/,!!=$`ChWeJ!=T)-!<3(k!.k3&!.k4L!"oG=!WiH+!!!WB$4@";"\hul"o\T)
#RUG0rri?&V?$)c'*/(8(cjN?$NL86!XAr6"Te`-"/c-N!.k3&!.k3&!.k3&!.k48!<39'$2X]1&e]*,
c^YR\#RpkBr;cj+[K,RmrrW&t%0QY8!!Wf:%E6];5mn"t!<39'!k//]!.k3&!9+"Y!W)j'"p=r-!!"(%
KK]24rsJc.rrE'%_#W9k"p"`,!seo0qu?e-Fbp"s!=/f)!<3):!.k3o!.k34!"B)8!WiH+!!!WB$46q?
#m=430*MI\!X/u1!<33%!L3Wb!YPJ8!\HE6#6P&2!XAr6"Te`-"-ik<!.k3&!.k3&!.k3&!.k4J!<30$
$i9o3*uLm"d:`jh":k_Hr;cj3U]C;mrri3!%0?M9!WW9%!3+JqD$pgO!<3<(#,M<O!.k3&!;$9k"8`'7
"UP21!!#]EM[Kdk!!3-#%1NCA!!!6/Y5n"kqu[E0"98E&!s(-$N=l3k!s>J%JcLB&JcP*:(C^fS!<WE(
!#$%R$4$kN20'E3!!*?2&H)V/"h"Er!<3)n!"8l7"r0.(#Qk22!X8l-!k//]!.k3&!7CiI"0qoY!.k3o
!.k32!<30$$i9o)+W:[+a2g@W!s]8?$N0u)'V>C*"Si$!#Qb#*!!Ro!c^5(Or;cj&rs"YeJcLB&LB.>V
rW)ot(Bb$F!<<+CG^f]+!<<-#!"BA>!rr<+#Ftkn!s/K("9&9,"p"^DMEq4B!s=hhJcLB&JcP`L(C^fS
!<WE(!#$%R$3peg0kh's!!ET6$iL)*"f).r!<3)m!"0,<!'"+3!s8T+"pY#-V#Z)IJcLB&JcLB&JcLB&
JcOs6rsS]($QMdcb-32q!!EE6$N0u))7BP1!<39"!!39)!rW*&>fb1!*";cGrsA]2rrT_2JcLB&JcOd1
rri3!$O6e8#QP?cG$k:^#Q4Z&%K?J/!<3;?!8RYR!tPD9!!!$#"p+d6LM-ej"p):8JcNsoJcLl4%2'9R
!!<<'!#6.Q$O?_=-mW(*!!!3-%L`48rs,.rrrW3#rrW&t!!*K/&.fL/=[`;n"9Si4r<&5`JcLB&JcLB&
JcLB&JcLB&q#LF&qu@-0*,s0KSgFF;!Wj/Fr;cj8U]C;mrs&<"!sSf.!WE''9#Ain.guU\!<3B*#lat(
!.k3&!.k4C!<33!!"0&8#S-nhI"+`g#7^V3rseu/rrE'(Y5n"kr<!Q2#ljr1!<N<&<el,8!"K%.!.k3&
!.k4:!#H7\!!!*'!!!`I$P<X`,pu=m!!!*')%6BCrs,t4l2^hcrrE'#qZ%'/!>#eW.U,mY":>58#5nY5
!.k3&!.k3&!.k3&!6Y@o!0@3\&,cJ5#RCD1#RE/c$-^XT&c_n;!!!(Z!<)s%!d2l2I67B-rreGaJcLB&
K`D/X"T\`,!!!6/rW!:'G^CtO!!!3'!!/>bo`,1#@rZ#p!"8c0rrDuuScF?BJcLB&r;[W:";_jY"p4r@
&d&4F(F(.S%0-A4!!!%k!:0[d%VYhA!>-@O)#XK3!.k3&!.k3&!.k3&!.k3&!:'Xb&,cJ?#RCD1$Oo#4
bKh+0!!!*$!!BG*f`2.Je'4^Nr;cj#[/bdYJcLB&huEuc"T\W(!!`Z+!"*dlIh`"b!!3-#!kA<X!!GK/
Ccqds"oeT$!Q"hg!6Y@o!0@0i"9]MW"pP/3'+k<J%kJ#1,npC\!!3-#!fR-Y!!*EprVup1r>>J6P5p17
JcLB&JcLB&JcLB&JcP`Lrseo,#mU\8!#-,Ag;go'!!!(l!:'Uf)UHaN5Q(T^"/>jJ!.k3&!:g*p!s8Q)
!!!<.rW!"bGA-gQ!!/ttiW&rprc&,B!XT#6!!)ruYQ07TJcLB&lMqFu";VaT!s/N;%g)qA4t@iR!!!&(
!87D\#p'<V*YK"t'bp`M[/bdYJcLB&JcLB&JcNsoJcLl4rseo,#6tJ6!"KTag'#T_!!!.W!;lg!^!"f)
r;cj"OT9t5JcLK)!WrN*%06G/$j6P1(R9D)!!!+_!;-="!sM\?J,fW`"U+l+r;iJiJcLB&JcP`L%KlnM
('=X?!YZ(I"TUY;rVup#R/lRR$OR7A"=OWh()7Pb!M]XH!.k3&!.k3&!.k3&!.k4:!<3B(!"8u5!!!cR
WR&ms!!<>(!8%8TT$>E-!!]\.JcLB&JcO^/rri9#$3pY5!)/$*%0-G2ZiJJR#m:5bF`n](!<`P<!.k3o
!.k34!"B#4&eY0E!<E]?"pben"A/Xo!Wn,WrW!63#ll(n!!!05&!$^B!.k3&!.k3&!.k3&!.k4L!<3B(
!!rc2!!!cgbf\$lqZ$TtSH.pT"*W,5XIT?C!.k3&!:g-i"T8<)!sAT+I!^SD!!!%s!9*ta!=F?r8cSho
"KDHR!.k3&!:'Uq!s9/K!!!$#%1WRB/Lj6sqZ$TsY5m8V#mgk;,9m^!!"TUH!.k3&!.k3&!.k3&!6Y@o
!0@0i"9\])!s8T+!!"*@d`qle+Sl'<"H3?Y!!Pm;aMoG;N<"P1JcLK)!WrN)rW!-)"oo9kIqAEU!!AJd
nc0)OF`IH^!s8Q)!!!$#ScF?BJcLB&r;[?/!=]J=!<<*,$jcnc.7OX?!!!+m!:0[l#6tT%.4G6##mm:*
JcLB&JcLB&JcLB&JcLB&lMqS$"98E(!s/N(!$Z1$d=<2<!!<K*!!!;/!87DX!WXjjaj;aXYlK@UJcLB&
huNcZr;[3-#QQ/sKKoM<!!3?'!!!56!7:cW"TSOFGCg/%!s8Q)!!!$#_>o/fb5d+oO8o^j!=]J=!<<*,
$jmIm/HmR/!<<0)rVup&Mu`hW#mghF3@lof"pkTs!.k3&!.k3&!.k3&!.k3&!;QWp#Q4W+/u6_9:(3Eg
lMq,"+-+XfFs6ea!=9+0!.k3&!.k4A!<3)u!!WH)!*"5j/=lk$!"K;897_@@!!!$%"98H*!O)QU!.k3&
!9jIm#RCJ5!!!0,$md)B,6XqFg&MKb&d^9O0Gb&s!<`M4!.k3&!.k3&!.k3&!6Y@o!/ppX#Q4W)1!%\Z
!@J;/!;um%#9RR'd?c3Y!!*3-P5p17JcLK)!W`<%rW!-,!<@b%C^c7&oDf$s!$QoK;>pP!!<E0#"9k@s
JcLB&JcPZJ%1!4@!WW3*"V!jG)@$D2!:0[p"q1eN2``Z#!<E9)!<K"sJcLB&JcLB&JcLB&JcLB&k5Yer
$NL//!*.muZ_d`T!"0Gf_q2[a!s8N'#7%^<JcLB&JcOd1rrMus#6Y#,RW;:,"0hjO!!<=FPB6^'"Tni,
!!ESE!.k3o!.k34!"B2>!WiH+!WiQ-"@3q4!<rj`!<)s/"9\l22+KG5!<EE1!WiB)PlQC9JcLB&JcLB&
JcLB&JcPTHrsSf+"9OD+`fu\fli7Is!#?*Gf?R2!#64`/#GhEP!.k3&!;$9k!Vud#"Xo+B/HGmE!8dbX
;Nln8!!NW6!!!$(YQ07TJcLB&lN$qjrrW3&rW39.!&GDk"pV"+g&MWh"9ScL76^eQ!!rr5!W`A5!.k3&
!.k3&!.k3&!6Y@o!/ppX%fQG2!kQ@uD1Vce!"Au0"p9Y1d=;N.!!!E6P5p17JcLQ+rr`6#$31)-!!-AC
IK0NTN<&VO%flY2!%a4b)ZTj?#ljr-"J,UF!.k3&!;um.%1N:;"9\l3!!*ZL)upfmQ2p7O%gE(=!sqOJ
!!<90%0?V3"/c-N!.k3&!.k3&!.k3&!.k46!<3Q.!!E_Wb1&qY!8%8Z!t\nfdBEl]!!!E6[fD![JcLB&
iW/u\r;[-)!<<IVFFsPs#I+9S!"9/?Mh4e+!!<<'!!<GB!.k3o!.k34!"BAH!!!-)"U+l4+rqa>!>l]-
!<)s/"9JZ6!(8=K!s/f:!WrE*PlQC9JcLB&JcLB&JcLB&JcPZJrrW32rW!*^e^1Tb!L3ZL!"&fk`R2mL
#ljr7$`*iT!.k3&!;$9k"T8<,!<E0NKR->m"q$t&i;a;k$ikU$FU%mL"98E(#d=;\!.k3&!:'Uq&J5!C
"9\o5!%8j*!tc\%VuYNO%g)kD&IglC'`\=F%0Qb7"M"Ma!.k3&!.k3&!.k3o!.k32!"/i0%hAX?!c$9.
JNs29K)klN%0HS2!%b\*dP)L<!"B="!.k3&!/CRS"TAB.!!**#;M9!-!!Wah!;-=&!WWT/!,?Y*'E\I@
!!!*,ScF?BJcLB&r;[??&HDe6"9o&1:)suJ&g8Kc!:0[r"Tf5C$o8_?&HE7L!s8T-VZ;;KJcLB&JcLB&
JcLB&JcP'9%KZV1(CgEF0"9-Y'*&FIVuYNOrso#.#\;0-MDG85%1TcHJcLB&JcOa0$k!=L!!!9-!,6;"
.h&T]cN"Cf#Q[t@E[q+o&-)\4$c2mq!6Y@o!0@0i&f:TK)%?iU$m.T%!!!$&",$[R!"T28*>f,c!!!?9
.P1c+!!JPeJcLB&JcLB&JcLB&JcLB&q#Cd6%KHJs^sC1-!!rst!:0[d%M/O=#WU;WUbDcL&J:i>JcLB&
JcPBB$jm7L!!!E1!-N3n*Y"Y?i;a;p"T^?$C.SC;"onW*$*XD]!.k3&!:'Uq&f(HI&If$N$77kq!!!*'
VuYNO%g3"R(CE&#!$2S%.KotU"M"Ma!.k3&!.k3&!.k3o!.k30!!s)D"or8Vd&m?K!=0!b!<)s-%1rR?
"p`W"_`%Pr&.t*+JcLB&LB%GX":,G:#QP24&V,'k$5SO"o)K4'"UPT\Aodqm"98E(".fLE!.k3&!;um.
%M8[@$k*.:!&-kk!!!*'Q2p7O%0QbJ'b1]T!&b?;*s2VA!.k3&!.k3&!.k3&!.k3&!9X=i%1NF?O3>t+
!!!96VuYNO%1`pK!!*)4cIH"s!=TII!.k3&!.k41!"B&3#Rg\5#QZl;H41,rY5llK%0[(B!E!`q!"T24
!!i\D!.k3o!.k34!!NlC!!!E9rW!'U8dGCs!<WCV!<)s."9]GT$3gJ17fXhW"9\ai!.k3&!.k3&!.k3&
!.k3&!;ult!r`0-$4I@Q[EZrp!!!6/Q2p7O!=T;5!!nV8eqF)(#RCg8!.k3&!.k4C!!<B)#7(2-"_*18
!!`k%!9!ne"qgn9+b>b&!=8`+%KWd6JcLB&JcP*:%g`F?!!io7"=,s+"98E'!iQ+Q!"K&4&f(NM!$Fl<
$P!7@"h4Pa!.k3&!.k3&!.k3o!.k34!!!'!!!s2H%4]WL]/]ikrs",VrVus*%/p55$"ME1XoJP0#Rcjs
JcLB&LB%G\!!``/#QOi5Ko'=?#7$.eo)K4(&c`1;I"t`'%KHJ=!M0:C!.k3&!;um.#6k/.%h&RD3'0J=
!!!'%Q2p7O%KchH(]k$M+@IOa'*A=?V>u2JJcLB&JcLB&JcLB&JcP'9%KZV1&-a4hd*Idt!!!*'VuYNO
%L*RH!!3Bd^s9hI&d&4;\,_*\JcLB&huEc^"TAB*,D_.I!!*2*!71]P#QtA4!W[.kF:A-K!<WA>!.k3o
!.k32!"/o3$j$_I5X747!!*$"KE1uO%0?M?&HDkD2F9A/"T\Xf!.k3&!.k3&!.k3&!.k3&!;lg,"onW7
"sA]Ab]4s/#m1<r!:0[r"s3gF&-=MkccSih$NgA1VZ;;KJcLB&o)Jgq$O$G/#"3ij.0'AWSH.XL%M&[F
#64a/Kmb3H"98H)YQ07TJcLB&kl;+r!t,/:.QKX6$31&,VZ>EN%0?bF%gi:G.RQBB"98J3!.k3&!.k3&
!.k3&!6Y@o!0@0i$3gJ1!X^U&ak%gJ#m1/7K)kiM%L)n5%0e8$c-27l"98u8PlQC9JcLK)!YPP7"U+mR
I?P'<!!*E-N<&SNrWE-"#:kFY9)o+r#b:sI!.k3&!;lg*!ZVmS!"D.Z:B1M$!L*TL!"B8B!<NQJ5sm72
"98E&VZ;;KJcLB&JcLB&JcLB&JcP*:%LWI@!!3?rb0@O>%1*+?VZ>BM%L)n5%0dnNe'+j8#65&4\H%3]
JcLB&huF#g!WW6$I=c/9rVus'!O2XO!!3<+"9&9*%?,mQ!!`N+_#T&eb5d+oNrTRi(DQoM$:%*=!!EH+
JcP]K%13FC!XSp"6Uh@d!!!%b!.k3&!.k3&!.k3&!.k3&!;um,%1*(:!!%SqduXP0$k&:"lMqCr!!!Z=
%33F4b<Z+/"pUt*JcLB&JcP<@$ipM6&T`jc%0Z_3!s>.qirB/^"p4u+!!R\#JH,uaXoO%RJcLB&l2Ukf
,:3<h"t!7c!!!?4V?#9L%KZe;!!<?(5!q@@#R^\8\H%3]JcLB&JcLB&JcNsoJcLl4%1*FE!<<,$d+2k1
!"'6g!;um-!<<*5'+GDEd*H>)!!Wdq!.k3&!/(=Q"Tni/5Bi4g"Tn`)!saeco`,'p#6P),!!PoLL(+4j
S,e-@JcLB&r;[**![B&m!":8UrVus)%?pkY!"Au5"TSN*"<9lo!!NZ1V>u2JJcLB&JcLB&JcLB&JcP*:
%1EjO!<<DEdEY;`!"9I:!7h,X%ho!DERr@+!!!94\H%3]JcLB&hZ+&g#8:?\JH-,g!!!00YlN/O%0Hn>
!<<*%!#(K;2$3rr!.k3o!.k34!"B&3/i*J-#SL#C!s8i?JcPcM%fuk;!sAW3#lmX=!"98<!gNb;!.k3&
!.k3&!.k3&!.k4L!"B>J!Wi?QcI/sU!!!E;PQ9nI$OdFD!)Lqf_Zg)I#c@ZS!.k3&!:^$t!=(8nF&r>N
%0-A3$D.=Y!!<</#m'r("GV89'a(T=JcLB&JcP*:%0Q_d0`VUm'0-R*!so@4!87D`!X&Z/"9]#;"[sLI
'at0H\H%3]JcLB&JcLB&JcNsoJcLl4%1WjL"9;]QdYfdZ!"f]m!;Z['%1N:;2QtfY,QJ2YPlQC9JcLK)
!WrE.$<V%^.0("n!!!0+N<&VO%0Qb;!rr<(!WZAXE\%Hc!.k3&!.k4L!"B&62_tFd"U5kS$4@@PPQ:%M
%g<(=!X&W@'+ZN0%5&.n"/c-N!.k3&!.k3&!.k3&!.k4:!"BPN!X&LQcdQed!!!cEV?#3J$j$kJ!!"X2
i5dkX$OO?DJcLB&JcO^/%06G>GA;.*!#-%G!!ib5!7:cU"p4r3!!!?/!&0UO4Vba4JcNsoJcLl4%0?Yl
1B:&M#6PDE$ks)$!<)s/"U"l1"9]PV$kFEe4qn)$PlQC9JcLB&JcLB&JcLB&JcP]K$k!%8;:*A1!!!N?
"pU:lli?tc#mU\:!WYg=bc3n(!.k3&!.k4C!!r`A!s8ODJ;j^9r;ciuT)dgMrr`0!"u^U?2ujR(YQ07T
JcLB&lMqG&(^^Tc!'Wjk)[$9F!X/b+!87D^)]JbW!WjDa!&H5X)A9LZJcLB&JcLB&JcLB&b5d+oMuX0'
cH*6j!"TSE#(cjS!<!!!#Q=c-+NMmQ6^%M%!.k3+!!EB6!sJZ-E.VL%"oSH$!K@*N!<30!!!X0LGAI6l
'qPDW!.k3&!;um.$4dIO$33:@)]Jn_!WiN/Q2p7O%3$5d!!33C*WQp%0/XE>!.k3&!.k3&!.k3&!.k3&
!9aCi".7<TIK0?W%0d$6!87D^!WiB'#RCJ5!!'IPhcdJhJcLB&JcOd1#lt&,!\8/G/-Q4U!<3))!7(ZF
#5\B(:iqg"%1pAVJcNsoJcLl4%1!4>!WW6p$l9]_"9JZ)"bZmT!"Bb^!!!*'*?>+[+>QS#P5p17JcLB&
JcLB&JcLB&JcPWI$3n5jc;4K@%1NLGPQ:%M%0?S3!=/r4!WW4fa3osD!.k3&!.k4C!!r`.!!HAENW94d
r;ciuT)dgMrs&?#"Y"23'+bVW!.k3&!.k4:!"T;?!!E9&:B21I"9\c-"U1h)g&MR!(]XO<"!&B^!!b)=
#Ia\b!.k3&!.k3&!.k3o!.k32!"08^bgO9V!!!<3"pTYZrW!E/!<<*+#m(/.!+sNo\,hfoJcLB&KE)#V
Es-oE!!EH'!<3(Z!:p3j#Q4Z%"U'?a;@*T"!.k3&!.k4L!"T)2"9B5V;[X0L!s8T+"U11lli@&#rrE'$
rtt_8!^\^oV#Z)IJcLB&JcLB&JcLB&JcP$8$P#kWd[qW^!!rr9#,VCS!"K#1!!!<3!Wi?%4j_3o%(H:h
!.k3&!9!n`!WXQnI9?OQ"T8?#!O2XN!<3<&!!`i5!/"m)'*lASJcNsoJcLl4%06M5*>o\O#n[aO!s/Q(
"bZmT!"BYX!!!*'(`35Q&O\WCP5p17JcLB&JcLB&JcLB&JcP`L%0QeTO3l$`(]XO="9o'p!9aCj$OZt9
!!"@DbgK#qVZ;;KJcLB&nGibgL3kTS!sAK%rrJ_li;il_r;[$1#68+QIO))sJcLB&JcP*:%fl\;0/G1%
#71\;!<N<,#,hOU!"TYR!!!*'&eY0E$8Y%@!!Tn5JcLB&JcLB&JcLB&b5d+oO8o^o"<Ou"`C1UD!!EE/
#(cjO!"0/B!<E0#.X0"`Fqg2AJcLB&KE)%!M?Iu3!!<?%!<3(Z!:p3j#Q4W,#6t5YDLY<M!.k3&!.k4L
!"T,3#uNT0":#5>!<E6'"pU@nli7P.&HDe5!tl4H!"9<%8g";8!.k3&!.k3&!.k3&!.k3&!:'Ui&.;@_
^r$Zlr;cj%V?#0I$OdFI"TSN>1tBjX-2mlH!rr<+^]8rdJcLB&hZ*_9I"1qlrrKA)cN*tMr;[$1('"\p
G]<T]!s/H&"j$ar!6Y@o!0@0c!WrHi6:V.]r;cj!rs48XrW!H;$ig81":Ye?!=&U'9/I"T!!<9&!!Skm
JcLB&JcLB&JcLB&JcLB&r;['6$ZOJ5S.-#-!<37f!9aCl$k*:C!!!r``m;Id!!N6#!!BA(JcLB&JcP?A
!u6ZG:AFni!M9AN!<3<&!!ru>!!$h^J,fQOr;Zg![fD![JcLB&lMq.k!rtPX,Qn8K!<3-##cIaW!"fVJ
!!!-)%1N:;#6R@g4okWcr;Zg!^]8rdJcLB&JcLB&JcNsoJcLl4"qhZHdE,SorW`B&rs"&Tq>^s6%1<OD
!"T:3d*Qb4#6"T&#+GUE!.k3)!!5<4PlMm(!<3*"!<3(Z!:p3j#Q4W/%hAmF6[jV"!!N9$!!K(tJcLB&
JcP`L%g<.;*,#ZZ!!33+"p+i3#aPJW!<39'!<33%$2ji-0NBe,!!N9$!!KD(JcLB&JcP9?!!8AbJcLB&
JcLB&lMqA+,f\0P/HQ(["onW-#,VCO!"fYL$OZq7&-dO/d@:1<"98N/^AricJcLB&i;`r]CNu3D!<3*"
!<3))!7(ZF#Q4W3'+Y6H&:T9m!!*0%!X6XFJcNsoJcLl4%0Z_E)JKBU!!33+"p+l+#_W3W!<39'!<33%
$2ji1%TP4e!!*0%!X5%nJcLB&K)blQJcLB&JcLB&JcP`L%2D:^cE@l]!!rr3!!WXl!9aF]%fHA8:<Cr"
"ono/!!WE*Y5j.SJcLB&o)K77I;aZ:#Qk&,!s8N'!<Jemi;il`r;[?D'*njDGBd<p!!WE'"98M5!.k3&
!.k4:!"T8?"TW-<#mg\9$k*1=$4<^3g&V-TrrE!#r;[34;]H8M!!WE'"98M>!.k3&!.k3&!.k3&!6Y@o
!0@0i'lMUKJeJ+a#mgS3"pTYZq>gI(r;[3a[F3MQ!!`W,"98Op!.k3&!/:IU4+2*F$31>4!!!*'!!!$#
N<&PMrs8Q'%hKB[#QS%QHQE.j!rrE'!i>sL!.k3&!;um."tBcV4p;<"!s8r?!Wi]9Q2p7Orr`9$r<3'!
$P,NC*Zb:b!rrE'!j;TU!.k3&!.k3&!.k3&!.k4:!"BsAd*P2k!!!E9!!!3-V?#0Irso&@r;[3[Pg@lc
!!3B*#64hA!.k3&!.k40!"NdaE?P;a!rr<'!rr<'"0hjP!<3?'!"T\T$k*+jDL"hS!<iH,!!14BJcNso
JcLl4%0o`1!#PhL%g3"G%fuh4$%r<T!<33%"oSE/%4;`'7K<Gm!!N?'SH+6AJcLB&JcLB&JcLB&JcP`L
%4T0<d2WVr!"989!!WXl!9aF_%f[.>!!tH,bft_@!!WE1XT3qQJcLB&o)K8bCiTLU!sAT(!s8N'!s>.q
i;il`r;[9B&f(lU&nl&r!<<6&#ds_b!.k3&!:'Uc!ce2>$3UkM"9]5G!WiZ7VuYBKrri?*r;[-6&e5F`
!<<6&#ep@k!.k3&!9!nX"JYsK!.k3o!.k3D!<33!!!EB+"q:\6!!R>f`2O@eq#LEsKE1uOrrN-(rt589
r;[EP+OeW^70!>h!#$"I!WW3)#,;0M!.k37!;urs!!iW+!=/[LH<1(N!!<<+"9Sa_!:9aq#R1;4!!%_%
GlS0Q":b;0rrN-"rroP*JcLB&NW9Ff!<N<0$3^S6!<N61!WWK6!$juc"Tnf-"pY#+rrJDcli8+G)?KsD
"Te`2#6P,9#s^O!'-n\E-NsYR!!ii3!YZ6V!.k3&!.k3&!.k3&!.k3&!;ccr"T&0$!s]#7r;["heB!"J
&,?5*"/l4R!<3*"#6,;8#Q4W7+!%]7ct37Y!<<cI!Wi?%"pW*JJcLB&JcP3=r;lcq%0Zb]JUf!G!!EB,
"9Sb.!6G3M":,#2!!#rKHN49T":>#,rrN-"rrpgNJcNsoJcMGD)$'a>!X]8<"T\T)!WW3-#QQ;H$NpS9
!X8l-!<3(Q!<)s?)B&YY"U+r/"pb;7#m_e?-j1_;+sdBr!!!91!Wj#KV#Z)IJcLB&JcLB&JcLB&NWB(^
qZ$^"#6kA>!so#3_UQRs%h/U:!<3+d!:0^c!WNB(%fZ\1!"0SYIF?Q.!!WE'%MJ^?rs#k2JcLB&JcGcN
r;cp!!rW*%!<Zk`JGoNP%Kch:!<JYigAhZd#lt,.!$@,F,le;T"8r6"!WN0""2Fng!.k3&!;ca6!<E0#
"pP57!!*-&!<<-&+Yujn"9]&5"U1V#g&N31('4O?"9AN1$O@%C"q4EN!"Tk`)$C*G":,87!Y#U\!.k3&
!.k3&!.k3&!6Y@o!2'>l"T&0/!WrW2"9SWKd*B'R'b(<B!<3+R!<)uu!WNB(%fZ\1!"0PX:t!b'!!`K(
%hJU=rs#4uJcLB&P5tO^q>^[;H['9*!!WE6!sA`-!JpgD!!<B5!<N0"#*!k.!t,25r;ciurrE'$XoO%R
JcLf2rrN-"rs&K,rrE'#%06J0)DE^-%0?Y>!X/ah!:0\#()?rQ"9\`+$4I1G"pP***"<Dp)&`AUrs8W+
rscF;JcLB&JcLB&JcLB&JcLB&qZ-WtqZ%'-!!``<#n11gb*"+]$_@@N!<33%%0$G.!"05H._O*R.2;g_
#6t,,rs$LDJcLB&JcP-;!W`<'qZ$^YJpBlc!!!<("9/D(!6G3C":>55rW!4PEcM3]!!<3$r;lourrLOJ
JcNsoJcM;@&cr+:!s/H(!<WE,00VBJ$NpP9rWN0"JcPcM*>&ka!<`N+!=]VL%0Qe@>S%GO"q1nA!XfAC
$3C:(!.k3&!.k3&!.k3&!.k32!<3,t!!<<'$47(N#o8QMb@De)$]G)N!<33%%0$G.!"05K+dLC&<tPE4
"pY#+rs#k2JcLB&JcPcM!W`<'qZ$_2LNsa9!<!$"!Lj)D!!<Q2"pY&,#Z#Ga.0'>M!!)rurrE'"^]8rd
JcLB&pAb<t!WrN+rW!6+!ru@f3sl;s"8r@s!87DY&J5$E"9\`+&,m"M"9f,n&eubt$k37>$O[:K!WpCB
JcLB&JcLB&JcLB&b5d+oQ2h:$";DG*\]qrH*!QWC!.k4K!<30$#Q"K-!sT?:da+L1%12n3r</qsJcLB&
NrT4^!!E0"!ec>MrVuour<%fTm/R4q!t#D7!!=TmE`;o:"9AT,!<K2#JcLB&L]@S[!WrK(!=K&7!+&Vp
!XJi/"9a_bli7t3$3://!WW34%2'9S!X0ha'K$4#!s])B%gE7:!Oi&\!.k3&!.k3&!.k3&!.k4@!"0;?
&K*sW`O6a+&dFp-fDtpRrs/E$$NgJC0%J4c,S17^"8r5u"N^Xq!.k3&!9aC_"o\K-$C?'O!!!'#$2t%-
!6G3C#m1SFrW!$)HuF]:!!EK.!s&GJ!.k3o!.k3>!;us.!<E?,!,P:m#RCG4#6ao(JcPcM)[ZoQ!<N<&
!"fYS'*/+;#T"%T$3C;7$P*aP#5nS!!.k3&!/LUT"8i.N!.k3&!.k30!<3-#"T8<$&-E4U*J)ASFqu2#
"cNHH!<3-#"8Mp%!WopZaCQ/'q#LF![fD![JcLK)!W`<%qu?d!!=/T("##Oi.fKDK!XAW+rrJShf`;$Q
r;[%)I<kno!"/]+\c@<^JcLB&qZ%E7!rr<%!<<*("pG#4#RsC=+U/&L!!NN&!<32#!87Dj!Wi?%!<E6'
$k*RS"pP&-)D*lJ"pP_O%1W79rrU:BJcLB&JcOd1!!/eoJcLB&b5d+oScJclrri9#$O6bQ,GWW(<tlJO
!r2hJ!;lis!riAu!!`Q,PLI[3()H]Grs#;"JcLB&QN7$dqZ$X"!W<!#<fr+HrVuour<*'#M#ciArrN&u
"t,%M-3+#JrW/qtJcLB&NW9Fh!rr<%!<<**"onZ3#R2\P@g</B!!!-)qZ-X!Q2p7OrrW3#rrN-$rs\o:
rs&H&#V\:C"pPSK%1W79rrTY0JcLB&JcLB&JcLB&JcLB&q#LEsrs8Q'#m(/P4iYjU.1?X^!<3+r!7V#K
!r2g"=3o4%+<g[`rs&K'rrU:BJcLB&JcP?ArrMus!<rl/!!77qIf9<N"98N0!<N-!rrKA)_Z0uD!<\@/
<r`4%!rW-!!RLgu!6Y@o!2'<'#RCG3!s8N'$k<7;$32J/C]4G="U"r4qZ-X"KE1iKrrW3(r<*]:"pG/1
=Y(Br$4mdP"9JW."eu'L!.k3&!.k3&!.k3&!/ppX"9/Z*!!*-*#TmU%ba94U$j$8+rrS>`joGD_q#CRQ
_:$Uf+T2<?#6+]'!k//]!.k3)!!30%!;lft!sJT'"!E,A?2ag-"T\].!<N-!rrJ_leGomV!<@CqH2mpH
"T8?#!PSPc!.k3&!;ca4#RCG3!s8N'$4Qt8#nAO;;?m=-"Tnl2qZ-X"VuYBKrrW3(r<*]:"pG/>9.h^t
#nR[O"9JW."igUp!.k3&!.k3&!.k3o!.k3B!<33%$iL&3"UcNBbgTr1&-Vk1rr`9$JcPQGrr`9,rs/K&
$P\lSct+O(!!WW8$_[QP!.k3;!<3/u!"8r3!!N@"Fal.H!<<-'"p4r.!W<#u!K@*B!!r`0!+:8&'EA@=
r;cj"rrK8&JcLB&NW9Fo$3:/0!rr<1%0-ME$7cc/1^"'b#RU\;!!!$#!!!91Q2p1M*<H9I#6b85!s/N(
!!``4<%04!$5!dM!WrN5$j-U@!.k3&!.k3&!.k3&!.k3&!;QWp"TJl.!!r]1._X3Y.h<'lqZ-WuU]AmE
rr`9,rs/K&$P[=!b`jFS!!WW8$cN*t!.k3&!:g-i"8`'!#m:/,"+>KH"TAB)!=/c0!<N-!rrKA)_Z0uF
!rt0"F@?09"8r6""9/DM!.k3o!.k3D!$)CR!<E9)!!!Q>!!!F#(E*\b"p"u;"9\])!<E0#rs48Xqu@`=
!XAr6"Tni.!WW3*#6cb+,Us-7%fue7!t5S?"/Q!L!.k3&!.k3&!.k3&!/ppX"TJr2!ri9#!X2`Le$obn
q#LEsOoXVErri9/r;[3.0>l/L1]RL`$P*cS!.k3&!/1CS!s8Q$!!`o7!!!IeHVs_A"Tnr2#lt)*!<3(l
!9!qX!VZR#"9\]CAUAFt!<i?$rri?(^]8rdJcLB&qZ$p2$ipA3"98E8&,lP1;%<U)!t,GF":"o,!<E0#
#RI@/fDtpRrsJW+'*&":"p#nf-pnIS%g)n:":l"L$-<1!!.k3&!.k3&!.k3o!.k3B!"f>:%1N@?!!!'%
JAoou$Q9!NqZ-Wurr@WNp]1<sr=&W)$Nq0Vf$Q__!"0/F&"ruT!.k3;!<3/u!!``2!!"^+G:3@i!<EH/
"To27!W<#u!K@*N!<3)o!!rc2!!HP]O8o:fr;cj#rr]D(JcLB&NW9Fq$ipA3"98E6%fcSC&ki]6!seu8
%LWCG!!!$#!!!91Q2p1Mrr`9.qZIQ4!!WW.%Mp]u#Rq=I!sA`;%g`QO!.k3&!.k3&!.k3&!.k3&!;ca,
%1N==!!!cM!X]&8]$/YuQiP8/%fl`uaNonM#64`;'*&"F'$1-*!.k3&!:Bje'E%n6%1l9LP+Vfk!"Au0
8qh$a!!*0(!!!N?ciAXtb5d+oTE#K*";DOM!!WWH,QIfM(3'BH!.k4=!!XPe!"^[]!WE*!#lbD7"f23N
!.k3-!!!0!!.k3&!.k3&!0.$e%1N==!!!cM"p=oI"3K$)222+d!"T)3AC8l2#m:5.',(?G&e_YRJcLB&
JcGiP',1<E":QMeG&WHAdf9g[!#:Z;1]RLX!rr<3&&&$q!.k3&!;ca,"9]DQ!!!3-*uk7\'HUEeQiP8/
%j2nn(bug+!<<**#S%=J"j$ar!.k3&!.k3&!.k3o!.k3D!"T28"U+l+%1NF@%U.B3NZ[imJcP3=%fl\[
a3`!\&HDe@%KHJ:$`*iT!.k37!"',C!!!*$!'YXP9)AU?!9*tcOD\V<!!<<'!"9:;!.k3&!0.$e!<EcE
!!!-)(_QoN""Gi^$&/H8!"ThZ$8O=e!!N?&#mgS3!s?"4JcLB&JcLB&JcLB&JcLB&qZ%-0"9er/!"BA<
!>:RCcsRr_!6P9P!<FC<bKsB+!!!K=!!!B7aT-nmJcLB&mK!7qqu?h>Ec;qi!5JRC"9;kADD2%m!rr<0
%+#!+!6Y@o!2'<&!<EcE!!!-)&eY3o-RKN6o)O@BmJmb3(CCg,0,Oim!!rr3!!<>"!.k3&!.k3&!.k3&
!.k30!<3T,!!+[h"3et@&r$DA!"/o8(gYG6Q6?5.#mmp<JcLB&K`D/W"9AE$r;d$$M.gQ4NW@E+$8Q[H
:B1J!!!!*'^&W`bJcLB&q#LF&r;[''!=;CW2?3oJ!6P9P":55C2Duoi"9\u9!!!<3aT-nmJcLB&JcLB&
JcNsoJcMABrt#&.#6Flrb0@R:&+]dQ!:Bgp"p>ttcI]KO!!!<3T`BZEJcM,;rri9##6=i4!=4m):AOsB
!9*tc#]kWB!!<<'!!<>)!.k3&!/ppX$iL&-"T\U$"#hY0"GQp3!"T><!<>#@5md_t#RCD1#mn'@JcLB&
JcLB&JcLB&JcLB&q#Cd;'b:fT!!N@`c-MH:!6P9N$OI4IYh%!&!!!'%%hH\\JcLB&JcP?ArsJ])#m^eA
"Xnb@)$L2;!5AL:!<?/\J]RnD!6Y@o!1j2j#6+i)!!=!0:DiU%JcP3=%g)n6!%:Ar!!**)"p>&@&Z#JZ
!.k3&!.k3&!.k3&!/ppX(&ngD!!3>@bQH1!!!n;Zg].ci#mUTlcHV:J!!334&%)Ch!.k3)!!3K7!<)s)
#RCM;C3jq$"U^:jcN"%qJ:fJa!.k3&!.k4H!<39'"T8<&5Y=cWQ2o&-%g)n7!=V:R"9AN-"p>&@&]k$)
!.k3&!.k3&!.k3o!.k3B!"0\\'c-iM%OTNM]INFOJcP3=%1NUD"%^/U^^h+Z!#?<E!.k3&!1*Zd#n[%8
#nI=B%<-K-!"]G6!.k40!"/m[L1^Jd!s&B%"9u"/JcLB&NW94d"pY>:#lXr.!'s'T:^i!Wg].ie!s]26
8MqXo"TSN,"qM9S!.k3&!.k3&!.k3&!.k3&!;QTp)#b6T!!!U4db0d:Q2o&-%1EOE"#IF4a=[u'!#?9h
!.k3&!.k4A!!*B;r;[-1#lll,K/`i9#GD.1!"*mtEsVgL!<<*("4@1$!6Y@o!2';n"UGA4#6"`.%7Ei?
%IjFM!:Bgt"9Su=#X^9p$j6P1"pGPKV#Z)IJcLB&JcLB&JcLB&MuX.m$kj<T!$n,`f`=PaKE0d-%0ltJ
$PJQDcZ:B4!"KFF!.k3&!/1CS#RCG0!!ro8!*aJp)#sa@Nr[W/!!3#u$>"@/,6.uQ!!!<-^]8rdJcLB&
qZ%-8%Kln<#7CkG.QK`u!XAst!6G3N!>>hE3AWW2$31&2":#"M!.k3&!.k3&!.k3&!6Y@o!1j/u$k*je
!!"aed**RLnGn.@mJm\&!u2+T>g(Eb,ldoS%&3fS!.k3;!!*9-r;[-4#loNoBE/#7"T/7O!9F1\!rW*+
1j==H!!NN+!"8t4!.k3&!0.$e$k!1@#Rq1L#=UR.!s/Z3#_i?6!"K#E#R(i!2`h?H!!NK1!k//]!.k3&
!.k3&!.k3&!.k4G!"8r@%fcT>cdB#u!!*4i!6>-K)ANGnaN_Up!!!'%$-3*u!.k3&!:Tsh#R^J0#(q"\
&./C>T`Dn/%Km+=!!a9`IV/Wc#64`-d/\aub5d+oTE#K6&-)\=$P3jL6nArN!"p.?!.k4<!"8o9"onWl
8hL_V!#urQ!.k3&!.k3&!.k3&!.k30!!rZ/$k*+9R*sK@!s8N("GQp1!"BYX%KWi[b]<aa"9JZ-[fD![
JcLE'!!iQ3r;[!\LNj4B$B5&7!"T/7!!!N4=+PN##6t5/!<Kt9JcLB&JcPZJ$4maK!!iiA&/7PcrVus3
(RP3D!!WW3!!"cI2uWgW*6/&2!.k3&!.k3&!.k3o!.k3D!"TAB!!!3-";&Gtc!15K"U4JtJcP-;%36Ji
!.W5=W;lo#!s]72!.k3&!0mNb&/+sB"p87[DZCOdq>c*IjT#Ym"onW4#TnY;1'\&a!.k3&!0.$e',(?G
#RD(c00C?hrrE'9L&g!/%L34E#ljrA<Z_>B!&-#,[K(mZJcLB&JcLB&JcLB&JcPZJ%g`OB!!WW>,gsoT
63%)k"df;2!"Bqo!!#j:cG]b`!s8c=aT-nmJcLB&n,Nh-'*&"7'7+\-!#$EG!5SXC%gE"6#Rpc\DdNhY
c2`Frb5d+oTE#K9'*&"<#U(fa2]<>0!#QRE!.k4=!"K>@#RUP3!E:$T!!"c.!i,gJ!.k3&!.k3&!.k3&
!/pma)&rVV22oi%FUS?P!"fTn!87D\,THge.'2"J59^=C[/bdYJcLK)!Ybn?#QOr/!&8A&=p0``df9[a
%0-A0!!$tfGl7UC$jaWKJcLB&JcPZJ%j)\p#7V+Q$NgB8%1s0T".0)2!"B5=$4&45#XSLk&demT`rL\k
JcLB&JcLB&JcNsoJcMAB%2p#_!&Ub,cStt+!"05,!.k4;!"0qi!<XL"d`lt[#77.*JcLB&QN.I'#QOi-
"9;DIE?tSb"Sr+M!9F1f&Ie^?!WW3jG]5A9!!*?9XoO%RJcLf2!ur3a#6#)8+p\?("To>M!sF>Yg].cj
"ptVf.LI9u!'LYp#djYa!.k3&!.k3&!.k3&!.k4H!"BPN!XhTDdDc.d":G>@QiP2-%2KTY!Z4VXbcrc(
$31+K!.k3&!.k4A!!rf<!!!$+!.KB4RfL8)!>>h<!!=-eFCtLP!='+_!.k3o!.k3D!!s;S"U"i4$o91K
rWE91!t+W"JcP3=%0Z_9"WSNf!=B*8$k!WA!.k3&!.k3&!.k3&!.k30!!s/G!s3\tc(G%A!sSr4%u()<
!"0SW!Wj2b`RVjn"VJ-BJcLB&K`D/X%0-Y6!Wa*uFYs.#MZD3+!>>h;!!6ngIJs3I$4"?HJcLB&JcPZJ
%hf]]"9JT(4Wj_-$3g\:%%%%;!"B)3"pGka#6Y,@C]k+]`rL\kJcLB&JcLB&JcNsoJcMAB$N^AC&[Ka-
>Qb0?'(GsR!:0[d$OH\?#FsYjH3=H]!i5mK!.k3;!!*0&r;["!IuF^8"9&9#"T/7O!9F1]%0ub1#=kJ-
%fcS;!NlES!.k32!"/r7!!!0+&LgZZ#m^V9"Utus!87DR'b^HJ"U."^%1EfU!.k3&!.k3&!.k3&!.k3&
!;QU'!X95`d)a?a!rriI!LEf-!"B5?%1NmYAD5/*#m:\=aT-nmJcLB&nc/pu!<<-#"G(QKqu?^%TE)e.
!=B)/!!a()F@lN5$j"cVJcNsoJcMGD$4$h9!!N?P,#JdTrWE66%J'RO!:0[d',(6H"TUSY1D(%j!.k3&
!.k3&!.k3&!.k32!"/l1!!"0Zcd%^i!!!$<'ncSA!"K)4!ZDmZ!\h.1bUX)2#Ia\b!.k3'!!!$'"TTfp
HXZgP!=Amh!7LrJ#Q4W.!W`:QG&R`f"2=hf!.k3&!;ca,!<<<2$4\I1:^-q$#6kqUQiP2-%3Qbu#64`*
7QE@J"98MF!.k3&!.k3&!.k3&!6Y@o!2'<$!XJc++e-:"?QK1I+;ODHJcP3=%flh8![&?^![+&YeO:,Y
#GhEP!.k3:!!`N/!ru83N@t,/rrW)uJcOm4!<rr1!!WH)!+U,%+0,Bn!.k31!"&`5#7<7*/gUT#!<WE.
&J9`tg&MR)+:/8Q!!t8;5;EWI!k//]!.k3&!.k3&!.k3&!.k4J!"B&?!X^s9]@@Q($3UkMQ2nu+%0?SL
)?9aD<SGQW+UJFr!.k3&!.k4@!!iW+"9=9iNX#ad!<3.p!4r48"U+leLMKQ/!.k3o!.k3D!"T)6!!Wut
-U%nD!!*3*%hJ73JcP-;%3m)&#64`+)*BHC$3LC,!.k3&!.k3&!.k3&!.k32!"/o;!WllUaKc0Z"pFr:
KE0^+%0?SL)?9aD/'?>P.L6Hl!.k3&!.k1T!!%Lo=T\^'!!*0+Nr[E)"pG/1(MeDF]`<WaJcLB&qZ$Wt
"9&9-3&2Q["9JT,":l'2!6>-L,9mEu!!!*$/i@VT!s-LDJcLB&JcLB&JcLB&b5d+oT)]3"&e^eXdWGNi
#mp&#JcP-;rrW36r;[#(e(\75#GhEP!.k3:!!iT*!&/8V-NO8H!!*0)quD<KjT,;]r;[$,#6b9$JWZu5
JcLB&NW9Fk#R(A3(h+-_"p4r0!!!'&L&fp-rttb>r;ZsG6X0Tl[K(mZJcLB&rVup!L&cf*JcLB&JcPZJ
$NU>B*lH4K7fWMq$'YG2!<3-#'E%n7LsOJ6$O"QOJcLB&JcP<@#Qau+@r[_5!<N-!rrJen_#XK9r;[*.
#6b8HH@RLId/\aub5d+oTE#K.#mCAB)I<CJ"p4r-!!*,l!.k4;!<3o9"oSE)#!Pj'!!/nrJcLB&OT5@^
o)O@BJcLB&JcL`0#pEHte>F>f!"TV?!<3:Y!87GQ$i^G0!!H*Ca2ARu!.k3&!/(=Q#64i8EHu^)!<3:`
!7LrJ"8r3+#6tMG!/"NX%KX?FJcLB&JcPZJ"qh[Y":5WJqum$;rrSPfa8l/Fr;Zs*<YH&Ka8gelJcLB&
JcLB&JcNsoJcMAB%3^PPeo;H*!"TS?!!`c#!.k4;!<3H,#5nN)0>ku^.AQrq!.k3:!!NK*4`,X3quHa%
q>c*IjT,;_r;[-/#7V"?EFX&5!NlES!.k32!!a/P$7Z>p1C!d\ru(h<L&fp-r<`E&":\!>*Z)6bJcLB&
JcLB&JcLB&JcLB&qZ%--!^F6;d4Yb*!#$"G!"BC)!6>0?'`S44!!F^1cHon=!.k3&!.k4A!!WK)!,#k`
(An14$(h46!<30"!!rl8$jltoB51?PdK"k!b5d+oTE#KC)\"n0";_.?!!NNV.g-"H!.k4=!<3-#"of>9
!!EZ_!!#Nb!.k3&!.k3&!.k3&!.k31!"&d*d)aE:#QOi<'*A47%M+9og&V-errN&u"=R<pcBks>JcLB&
K`D/Y!!!(X@qkf?rs=YbdfBCMr;[-/#7;(D!+KMp$buao!.k3&!;ca,*?+uV!!!*'!!!0+.k:`*QiP8/
rrW3(rtYJ4"UbD4!."[f!.k3&!.k3&!.k3&!6Y@o!2ol2#mh"K"9\])$O;m=b)69$$O[FSmf7q>li7t-
":YeA!WW3%#0=[-@MfO_"TSW)"9JW/"p+k4!.k3&!2fhq!WN8p!!=QgK/NN+r<E0"JcOm4rs/E$"pPD8
#Dn%Rqu?g"$ipgG!.k3&!1X$,!<E<+!!!*'"9\`+#mgY7!$>/^'bpfQ"9e`5KE0^+*<?0D":5A7!WW3i
5pm*G":PJB&-WIB!!33%!!rtP!.k3&!.k3&!.k3&!.k3(!<3?;$k*7A!!!69\C/T+!<EQ9%M"^'a8ceT
":YeA!WW3%!fkOROpqj)"8r6"!riK)!nRF(!.k3'!!!'!!WN8p!!QDPL'%DVr;cd#T`Dn/rs/E$#7:Y9
!C;fj)#XF:#Qt/7g&Q^)b5d+oXoKCA!<`N*!!<<+"9AN0#m(,=,ut!\(BXaB":P_/!.k4;!!WH)"9]#;
!r`05(elFZ"9\u5%LiRI!!!'%!!!<3[/bdYJcLB&JcLB&JcLB&Q2hR&"pYA7!WW385Ln2n.00GR"q(fj
!87Dc"9])?!<E0#"Th9@e%QG<#6tG1!<33%!lY.k!.k39!;cfj!!*R`"Fb=j!!3#urri?(Nr[W/rs/E$
#71M9!<SO6>Q"O(#QOr-a8gelJcLT,rr`9$rrNi8!WW3*#6kG^,u+g_(BOX?!sf0u!6>-F!<E9)#RCP6
rW!R11Eco*!Wil="U+l+!<E0##mo8bJcLB&JcLB&JcLB&b5d+oVuRJ8"pYA7!WW38DV**n-NO5P"q(h-
!.k4;!#,P=$OZt9!!!?1-ahLK3>Mi-!!!*"!<33%!j_lY!.k3K!;cfj!!PE=F$9R)quHa"rr`0!JcOm4
rs/E$#Qt89"TWRmEX_jG!=Ak9!.k3&!1Eof"9/B"!Y582#6tGb.N^)I(DQuQ!sAQ/KE0^+&HMn7!sf/5
!<<*-4u=i,"p+u-#m^\7!!**#!!rtP!.k3&!.k3&!.k3&!.k3&!;ca,/Z[=D;'H#A!!!3-!!!'%QiP2-
rr`9,r;[61"s8BKbC1<<)#sjBrW)s$rrUdPJcLB&K)blP!W`9$r;lZn"($S&$i0l'!M9A.!<3/u!!i]3
!<E0`OEj%g!!391!SRO*!6Y@o!3-&!!Vld+$o0C^"UYqX#mgY7!<M]jJcP-;*<?0C!sSr3"98E.*_/:S
#6Y)2#mgb8!!**#!!WY8!.k3&!.k3&!.k3&!.k32!"2-7e&*IZ!<E0#"pY)-rrRoTg&V-Trs8Q'$N^AR
8^u%i)%@G`#lOc'"TJPB!.k3&!0mQa!WN/u!VcWqKnBA>rVup!r;ciuN<%E-rr`,u!<`W+!!<UbIWkYi
!X&].a8gelJcLN*rrN-$qZ7329e.=n$PXB`#m(//!L<`,!$)(@!s8`3!sAT($33IXB*SP@":>A;!!!$#
!!!3-f`6U(JcLB&JcLB&JcNsoJcMMF#7(Tfe]O?r(Ae+3!riMs!.k4;!<3-#"T8<.!s9Sb\')ih()R,X
r;cctZN,RWJcMJEqZ6Wq"!38H4oPE_!W`>q!.k44!<3)s!!*9)r;Zq9M2DH7!!<6)!<K\1JcLB&QiR-g
r<j,9!!<<'/iaOK"q_CV%KQV1!<3+T!8%8b!<E6'#6b,/#REXkBEJGD!<<9,qZ-X!`rL\kJcLB&JcLB&
JcLB&JcP`L#7(UJe%KW6(&J"2!riLm!6>0?!riE%!"0#<*uLKfa*AI:$j6G.r;tRNJcLB&JcP]KqZ6Wq
$"8O&&HDe4!!*+i!5S[8!W)j/#QXr-!!#ZELFW?)!WW6(!<LsUJcNsoJcMeNrr`3-'*&"7!uWXA!!WW=
&Io9O!<<*$!qQDD!9sOt!<E6'"pFu,#6uSNAg.E`#6=u4qZ-X![/bdYJcLB&JcLB&JcLB&S,iQjrri6"
$N^V>*B2?p[jhUf!W2rr#_i?-!"95<'+m:Ocat2<('k!>!<30$!lk:m!.k39!<3)u!!NB(#6Fu=rW!$+
G("Q5!!<B*!s=A[bl@eG!<i<##R6uWC&e58!"/]+aoI"nJcLT,r;cp4&J5Nh!s/Z.',O=M!WiZ3%1NLG
r<&DeaoMGEqZ%?:"pG#2"TWC?6O3r"!so,3!<<*#!S7='!.k3&!.k3V!!!5O!.k3o!.k3R!<3-#"T&0+
#7MAcc.Rh(#6tA/!<!2p!.k43!"0/;'+m"(bJZFc#S6e4rr`9&[/bdYJcM\KrrN&urrN-+rr`6#"#k4U
4T5<_#lt,1p&K[EhZ*]Y!<`3!!dK<?r;Zp#"9AP5!.k3&!1Eod!>?+\%hA^B"tU<*,74JR$3^kJ"pY#.
L&g!/rri3!'aFpH!<iW,:f0jc$3L;4"p"`)!!*,>!.k3&!.k3&!.k3&!.k3.!<33%#lO`4!!!TQ-*b_H
3#_ht$j?M/rsSi/QiP8/rrVur$O[+I#oIa0b^1lL'`.n/"5*[+!.k3'!!!*$"8`'#";:e:rW!:>Ee>,-
!s8Q(!<JYi]`A'7rrMrr"&XMm/cG_P!<rW.g]2p+b5d+oYQ,aH!W`<(!rr<6)@d5\!")"(*"r;Y#lju1
"pYA8!s])&!.k4=!<39#!##P@%0cq;!&Hf#*=N&Q"U>/5!!)ru[/bdYJcLB&JcLB&JcLB&S,iQlrs8K%
$P=.GbLO?A%KHJ6"T8?#$i^<`!8ISS!r2g($3^kI$p`1_\L7mqqZ-Qs`rL\kJcM&9rr`,u!sB&;"TAB'
NIP15"on`-!!!$#M#bj%rr`9%q>^UAIsH,7!!!'!"3LUq!.k30!!r].!<E9)!!!WI'b:cX"TV[D#6P)8
#lt&2"pYA8!s]'u!6P<A#5\B&"pPJ?rWEH65<D[L"9\o-"TJK#!SII)!.k3&!.k3&!.k3o!.k3R!<33%
%/U#.)&\I]f9-"3!=]P;!<3K-!V6;C!:Bje"oA9/!X/l7#6t5=_U?n(&eFj>rr`9([/bdYJcM\Krr`,u
%0Qe9"onWSL5@5a!Y#_3!.k40!<36&"8`'$!t\piP5YI]!WN83!.k3&!1j00#6t81"9\])&J5?Y#6tMs
.KC(m)&`V\!!!3-rri?9L&g!/rsJW''*\gR$3:5/!$a4'"U,#2!sJi.!;ur=!.k3&!.k3&!.k3&!.k3.
!<33%%/g/2!!!lX^sC8:r;Zj-&,cM.%0$?q!6P<A"oA9/!X8l6#6k/.QIs<6%iP6Err`9(f`6U(JcLE'
!!<3'qZ%'9"9AN'!,R:3!"]2C':/^4!<36&"8`'+!s9p+K.d3)!<`K,g]2p+b5d+oYQ,aM#6=i."98E:
&IJjM#qn=_!u;Fd)[$9D!!WW1";DRA!.k4=!<3E'!!NQ7$jm":rW!*[;AoZ="9&K(!;ur+!.k3&!.k3&
!.k3&!.k3@!<33%%K?M.!"U/Me'GBc!!*'"&eY<M!!*$-rrRoTg]7?XqZ$a%#mU\;rW!+1d_W[A)Z'O7
"9/SG!.k3&!0mQa"oA9,%fub3!"ad0<WEI."pb`n!7:fH!WNE)"8`'(#6t6TF)M$Y!WE3$!R(Oq!.k30
!!ru>!<E<+!!!`G'a=jK!%B<5&gSVA+pA,N!<r`2"<AMM!6P<A$Msf>#Rh.O"p+c)$ReD/!!EB,#6t5/
!<E6'f`6U(JcLB&JcLB&JcNsoJcMqR&-N+F%0?S2!!<3JIaH?22?EdW#o=3W"98E1$j$M%!.k4=!<36"
!!EH3#7:P3!!PU+`n*EeqZ-Wurs#k2JcLB&VZ?`#qZ%',!X8W)3.6$3!!X;H$1\(J!94(Z!WNE)"8r31
!<<N5!+^DA(B=^A!s8Q)\c@<^JcMAB)[ZoQ!<`N*!"feM"puV)-3t,*.39Q7"T\W.#6+i+*JORL!<3E'
!#GtN%1iXD!!!WP7p-H."p5)8!!!$#!WpCBJcLB&JcLB&JcLB&JcL`0rsSi/r;cj&$6'aB^r4bG%KHJ1
N<$Ni%glLje:etH%h9'L!!``1!ndR*!.k3&!<)uu"TJo.!!d^_L):6t!!/AcYlG.46[3c:!!!*$!!`bc
!.k3o!.k3T!#,J9/hRYF!!!E9%g`\#&L&&!!!!&`!.k4,!"LOa#=o.0)$C'B!!33F+gh<%!.k3&!.k3&
!.k3&!1j2j$i^>-!"B/C()L)ucb0hj!!!-(qZ)3JbQ&.V0%\1R-O'Y_%KHJ6#6FtI!.k3&!0I9]"TJo/
!!WRbHXI6_!!3-&!egWk!!=<i@W_MJrs-aJJcLB&MuX.c!\Q)9%fcS<'+5*R!'_D4$NU5-!s4J_\c<6A
$jcoV$P<dM"98E'![/`?!.k3&!.k3&!.k3&!6Y@o!3cJ'#lau(!!WKG,aHj0K)GZM"9RffJcOX-#6kOI
`SFc8&cD_0"TJM1!.k3&!20B!#RCG;!!"O%Q7r1:!<WAn!.k4"!!6>=R/R*c!WND9!.k3&!1j0#!s9Yg
#6t5/$P<[P%RE&O!!*0&qZ)3JbQ%kL!$3J*"9o&.!<3*"'ZU3*!.k3&!.k3c!!!2A!.k3&!/ppX#lau'
!!ODs`6$=trVup"Mu^Eh#7(Nada=Br&cD_0"TJMU!.k3&!.k4K!!ii9!<W<%CibX8!!!%b!3ZA/'Rkft
!!!$##7')cJcNsoJcN"T%g)nV+9r,O!"02A&i;R'"9&9#!TsH7!8RVZ!WXrc0Eq^Z!<3*"'X[pm!.k3&
!.k3&!.k3&!1j2j!ri9#$iL&2.;78WS.u#+"S_tK!6bEJ$jo#4aiH@aqZ-X$`rL\kJcLu7&-2e3!!<<0
$NLHVC2j4R!X"#S^]4LqBP7AGr<:CFJcLB&M?*Y^rr`9$rs&f;*CrII"on],MZC9f#Qb!A,pN^'',1<E
rrUjRJcLB&JcLB&XoJG&ec::%b5d+oYQ4\)rrE',r;[*PVT[S"'`\::rVus%"7#r=!8[\\#R;]EdF;bP
qZ-X$[/bdYJcMVI&-2e3!!<<0'*(d<H8km)!<N0"!<WDq!.k4!!!HDJHkue]"hF\c!.k3@!"]DA!s8N'
#71c75"P_Y!!*-"!!*0'r;_ELbQ%qO!X_@H0+nU*'E%q2!lk:m!.k3&!.k3&!.k3&!/LXT'`A"79[:`$
'`.k2"9sne\c<$A#6[NHd&&]%!W<#u%bUi6!.k3&!!3-&"8r3)%1iMd<`pIQqu?a""IK1l!"(N,Db:!6
"p4r.!T3s0!6Y@o!3cG4%1N:;"U,2=!!!L27nNOW!<WJi!.k4-!"T,4%6Y%'*"O,5"9\f/"9c+4JcLB&
JcLB&JcLB&JcM5>rtPD3"*2f8Z2+G$"p4]&JcO!p#mgn<*QuaL70*Gf!<3PL!.k3&!0[E_"8r3)*Xr1$
A1\&mrW!$#!!E=W!5JRA'4u',!!WW0!s&GJ!.k3&!/ppX%K?G."oeo/!!<U6:,2SF!<`Fa!4i.@!s8iO
!!>7k+!1Ug!s8Z/f`6U(JcLB&JcLB&JcNsoJcMqR$NpSG&c_n7!5ch-C>f/E!8[\\#6t50U=7GBqZ$X-
'"%^k!.k3K!!!<%!!iZ;#[qLj!##h.!.k4"!"0/821'ls!s\f+#Q_R<JcLB&ScB39'*&"9"UYY<!'Nbe
'Cu3U!6bER!WjD]!"^U[%hT$O$jm+@`rL\kJcLB&JcLB&JcLB&M?!_]#o"$O!!!u@d*'F%L&edb$47"=
!-?Q;YQk.1rVus6&(pr7!.k3&!!3-#!rW*($mTt8=o]ZSOT;Qb$NU>0GDK*+!<`B'"5j02!6Y@o!3cG4
',(?G"U,5?!!#V[>nu;uJcOX-%gW4T)#t.!&f2#c#7:e@"LS5]!.k3&!.k3&!.k3&!1X#s'+kEQ!!"!a
daa=)o)O@BbQ&.["TSNOZe!N!)A<;T!#5d[!.k3&!0mQa"8r3+"U+liH@@RK)%-?CJcNUe"p#,4Cla>`
rW!!##R/NSJcLB&MuX.n%0Qh9!WW3+$j07'8.1.P\c<6O$P*pZ/hnsi#7q%J%KHUa!.k3&!.k3&!.k3&
!6Y@o!3Q;0&Io!N!!"@Lb1935i;eH0h>e&i"TSQOJ^r/&)A!,R!#,^H!.k3&!2fet!sni*#n74AG\hs3
!"'/$!.k4"!!WH5!&KXj8,`Ji!<`P=!.k3&!1j0"%1WOE!WrE&#<,1R(CTg7JcO!p%graU((1:$00KON
#7V.C"31Cn!.k3&!.k3&!.k3&!/^dV(]==7CXNC6[g<`K$&ASm!"K,7$k!7gbf@Uo%1W@<"5!U*!.k3'
!!!?5$31&-!X]87Jp:,k!!!7d!3H5("!<AOBDql5"p"r2iW+Q1b5d+oXoSJ+rt,/0"=mS>#SH"qJcOX-
%2'9V!rr`l2(0(?":ksJ!.k3&!.k3&!.k3&!.k3@!!*lRr;[(ueCf9\$igG'!.k3p!"0&;%1*UPYKPC8
%1W::!!C7AJcLB&PlM0r"onW)!X]8uL5#d/!!!-#!.k3c!"0;?@#0=:!!!3(!sd0QJcLB&M?!kc#8%LI
!!OqV@1j"WL&edb%2]f^!rr<E3&Ua>":ksn!.k3&!.k3&!.k3&!6Y@o!3Q;&)^51\#SY>/`_$42'+En$
JcOX-$O$\O(B=GNbgER/'<qOh!.k3K!"B8B!!!3,'e<[5B)iPLl2ZD9d/XOb&0[3U2?3^X!='(J!.k3&
!1X#u#S7sp!!!HD=qVYc!<i&qJcO!p%2p,i"r%gQ7gK)!"Utp[!.k3&!.k3&!.k3&!.k3.!!aGc!!!Qn
d*r5t3WK-s%#=np!"/f0(`EAS0$2Gh//Zn;JcLB&K)bl\$jlt7"U-;JDKRu?#7$:iXT/_;*rq=;F8u:A
":#:n!.k3o!.k3R!"B2C)]Jbc',NeC',(?KirFZ2h>e!#(^C9Z)[f%<$5WsW&$l7f!.k3&!.k3&!.k3&
!1X#u+r^L^-ah.Q.hDdb#RL)'JcNso%KdL`!!![\d*dLt!!<iH`rL\kJcM&9!!N9$#9O?SDJb@\&GcBY
!5edG$l&aB(^CF[?t:\d)(!Q.JcLB&MuX.s&.AgE!"1gf%g;q5/MR>0L]Fpb%3Qc5'`]+<6m<$>!!NPZ
!.k3&!.k3&!.k3&!6Y@o!3ZA4!ui9]!*@7h\JYMP!sf1m!.k4+!"B_\!!!?kd*]$N!rs)L[/bdYJcMYJ
$46b5$kNf&G>]7]kQ$27eGp$c'EA+I#66Jd@:'!\)8#s$!.k3B!!<fJ#RUJ1!D<^t!!=f,!sA2rJcNpn
%3Qc5'`\5#77Rde!"&nM!.k3&!.k3&!.k3&!.k3/!!if<&If8?db''M#6"Z)$j_Xh\,ZsN%fcS:%Ct$;
=U+p9'%m8:!.k3'!!!$"&H)S35)YLD",m5b!"B2E!!!<-!!#K3N;sq,huJ?/b5d+oYQ+q>)$C6K";*gW
rW!$@*WuT*!.k4+!!j>R%13.:4'#Yd!!*62[/bdYJcLB&JcLB&JcLB&S,`g.$k4>rc-oSnrW3*/#k\1L
!6P9N%hAX?%17gAd$aq7$l?qaJcLB&PlLgc!r`0'#BGHR!!2lqJcN[g"UkY:!!<H)!!IY)58F[Q!.k3&
!/pma%hK*O"9:,71C43b!$3-`",Hre!"BST$4Hn9&Qr<f!!!-4f`6U(JcLB&JcLB&JcNsoJcMkP$SZ\M
d@hQc#ljr5#ibo:!8IP`!X&T-&Igk<bKE-k":MU;JcLB&VZ6u)!tk_:%t8n9rVus.#3l2?!7_&M&dJ14
"+5NF"hObd!.k3B!"TMJ"oo)<,:#hd',CcT!sA2rJcO!p!!`E&rW*9-#@0ei!!iT2`rL\kJcLB&JcLB&
JcLB&L]@T6ZI%!0*!HKP!!!<3L]Fpb%0?n>!t,MbOO2L+*=E#'!.k3&!.t7O":#/7$NO:UIO+mm!=]6o
!3lM+%0ce9qu?gbL5\7P!.k3o!.k3T!"TSN!!<]m,:+-3&f(ZS!s@Q`JcOX-%g)e3"9AN*":I%]:F-8P
!OVoZ!.k3&!.k3&!.k3&!1EljDpm%E)#aU:!<3;s!.k3l!"0;G$O[7td)j$l%gL&SJcLB&PlM'l$Om^K
E-P@jrVus0%/^*W!5ed=!WicAqu?mGLj`J-!RCat!.k30!!rl>!!!Ej*!d8]s!%ICrrRuV\c<6P&-)\5
":5A7%7WTR'EA3f!.k3&!.k3&!.k3&!6Y@o!3?/.UsRVY!XJr2!!!6/irFZ2g&MKi&ISsR#0"I,A-`IK
!.k3&!2ff%!sT\R+DcHSr;Zj-%-dhE!7_&O!X]>Cr;Zs$!-iO-])[E_JcMAB%gNFA!"q75!!<KP+ohTE
!qcPF!6bER&/,$D"9]#;!!58C>6Fs-`rL\kJcLB&JcLB&JcLB&MZ="k!#<c'ejf`ArrW3#rr\&W[K$aG
%1<OD!-$B.[hBPX#lO`'&`<Y@!.k3&!"95@+_"u>!!**#!"''o!3ZD&&,cJ3%i$1O>sA5f!!`B%!"J/m
JcNsoJcMtS%L)n5/Lrdm(De8>!!!$#irFZ2h>e-"&HDe6";)4G!!H:r4Tu#i#5nN%%(lRl!.k3&!.k3&
!.k3&!1j0$!WrF.d+"RO!<E6'!!!*'o`0RDa8cSW%1<OD!'nKHc8c[>!!<?.!!^^KJcLB&PlM6q!si(F
EA[^s!<<*,$N'mU!5S[8&,cJ4$6&tp@qH;N!!<<+!!LmRJcLB&M#[`/0Jj+L(Dm)qrrE'"L]G!d%hTBR
!!EE:&HDe98Q&Fe#6"T)!sAT,huJ?/JcLB&JcLB&JcNsoJcN"T#8.Ij[*R8t+PQmJ!8[\l#6t5/"pPA?
!!!sre_,d-!!3-%$NL//]`<WaJcMSH#(CfK#QOo-joBu5dfBCVr;[?8'`_!TJiWl3!<<-,!!!)?!.k3&
!1j0$!sAit2EUsG'GM,k!!!'%o`0RDbQ&Fa#64`*!XfA9!!kAd@1s"K!<<-,!!!)H!.k3&!.k3&!.k3&
!.k30!!s&D?GXt#0H^>qJcN@^(C(0F!!WW6#ljrE8^Pnr2Za<d!!E9%#N5Z7!.k3&!!iQNOEO_+!!34[
!3ZD&%/g/:'++^NE--.$!=/Z*!rr<)l2ZD9b5d+oYQ,1:"9;:V-OC(n'G1oW!!35^!.k4-!#GkF!!!'%
$OZq7#QRt23su&p!!!*$!!U%9JcLB&JcLB&JcLB&JcMAB"rA8]aj5#:quHa)o)O@BbQ.YVr;[?5#71AB
(8B%'G5q^L!!!)F!.k3&!0[Bc6uJGH#6"W&"9/B$!WE(N!5SXK"pP)/!!!Q6!!#N>L(XIf"98E&ec::%
JcL`0#mLYT0MVZT!!EH)!<30$%>Y"q!#5Y@"9])?!Wi?%!rtAf.0'>L"98E&hZ/6.JcLB&JcLB&JcNso
JcN"T#8fJDd)@mG"T8?#$fM);!8[_U'E%nA#6t5/%2NR!f<tqb"p=o2])[E_JcMYJ!s`aiN;N\U"9/B$
!UKf<!7Lo]"pP)/!!!9.!!!%KMcU)_"9SW-_uPAhJcMAB"pY5d2adiOrWN6$rr`91o`0RDbQ&@]"U"r9
$N^A0!!E9.?7??g!!EB("jI%!!.k3&!.k3&!.k3&!/pma."]drH49iS#7(8/rt'nb\cDaJr;cd#$NLJa
W700^!!!?+"5a*1!.k3&!"(o$F]nbL"onW.#E8_c!<30!!"'#4ATr8R!!!9)!pBW9!6Y@o!3cG6$8EhX
)Zq$!!Wi?%%hB9cirFZ2h>mQ\rt>>Ir;m?,!X_F,$Sh\^#QOq<!.k3&!.k3&!.k3&!.k3B!"CX#bLJ?W
!!!6/!!!QAo)O@BbQ.Y\r;[E6"pt\;!$Hg;c@Q<%$31&-#1!:$!.k38!"+]lF!(Gk"onW.#PnFP!5AO6
"8W!)3GreO"ono/!!*5T!.k3&!/pma#APD4!!=8]!WrB%rt#,BL]G!drs/Q:rtbV9r;[33,mX]d"ono/
!!*5]!.k3&!.k1N!J:B(!.k3o!.k3d!<3o7!<3<(%K-8;%M"NK^nq;?!!!3-%LrRCi;eH0h>mQXqZ$p(
&.8s`-,[XGCAe,;*>/DT!!!B7_Z58gJcN1Yrri?+r;[98"9]D=!$lr>=TAF.$Msi'"RH,?!7(WI!<E0,
r;[(`O`LL)!ttjV!.k3&!3Q;D#6tnU)]Jh["9]8F',q&W!";1G!Wi];!WiK-!<EcEo`0RDbQ&^c!<<*$
!WrN)#m186!G?!L#7M"^(]jj@!!rr6!tc-s!.k3&!.k3&!4;h,!RLgu!.k3@!<3o7!<3<(%K-87%O/g2
d96ka!!!3-rso&2L&edbrr`,u#m(GA$PaV4b0Zg[!!a,O!Wi?%$Oc+tJcLB&OT>Cars&E%"p>&A!WW4/
#&'5.!!!$%qZ-X!OT;E^!s&E&"T8<*7@J?T!t#28kQ$27b5d+o^]4uP#87ai)Zg'D":YeX'*JI="&f*u
#m^b;!X&W,!>,q(!.k4-!!iT+!!!'%!s8Q&!ttkC/o1mq$kF0l"U4r,#mg\9&J;t^JcLB&JcLB&`W,uA
^&W`bJcMqRrt#&.(Bt'L"98E'!$H"/b-E,l$ig81":P\@"7lME!6bHC"Si$,#mV%S1;;&\0,"<k!t+u,
rs%!RJcLB&UB(;qrri9#!<ro1!!j^-FE%9\"p4u)!<30#!.k3a!<3)s!!rjmGBsAl!"/c.qZ-WshuJ?/
JcM;@)$C'R&.oKU!WW64&d/4A&h"\f#lt,7#lt),"TJN&%u:4s!#>S9!!!'%"U+l+!s/W0!,s#%!X/lB
!WE6%!<3-#$L%PB!.k3&!.k3F!!!,\!.k3o!.k3d!<3T.!!<E0#mC5-&.0hcaOt&H!Wi?%"9],A!s@K^
JcOX-rri,t%1!7N%i(/Nf5qZ,!X&W(!<38@!.k3&!4;h,!riE%!!iuJ!!`L9EK2%<!!*B.qZ-Wuli;V;
cN*tGq>^_(GDANc"U=c&rrLCFJcLB&XoKOH":u+V&HW"6!>?4L$4BBB-j9qX!"B58!<`N+!=o_6!.k3p
!$;4B!!!'%"U+l+!s8Z/#"9U^3!B]u!<E<+!!!'%$4>AbJcLB&JcLB&JcLB&JcM;@rrW-!rri9##87bg
d_ipA+8Z'<$3(*^!4i11"TJQ"!"')=#7EiAcbVs^(&\.4#NYr;!.k35!;up*!!!*(#7:G2#_RC,GQ7^E
!"8u,!<3.`!36)'!<E<(!!iK'"!W/ED>jM=#m12/!!)runc47Ab5d+o^&T/Z#QOi*!<<-4&d8F=1H7B#
#6P#=$ig80!s&E0$KD,<!8[\p!<E0#!WiQ1"U+l1!WiHC5XRC?"U5qa"pP,1_#T&eJcLB&JcLB&JcLB&
XoSJ'r;[<1"98i1!$W)`c..C_(^^*?rsA]-o)O@BbQ.YGrrW#srW`ZA$aS.-J.iq$!<3;Q!.k3&!2BPm
!>,;3!tte?!!#uEP:HV5$31/1qZ-WurW%NM]`A!3!<<3"!"2hZLE$9o!sJ]+!!)ruhuJ?/JcM5>"pbJ7
!!**#rXTG="WB!c"pYA>!XoJ;!<30$!WNL_!4i.;!<E0#!WiQ1"U+o*!Y#/4.RZ]+"U,b^"pP,1jT'l4
JcLB&JcLB&JcNsoJcNF`rs8W+r;['V;:Wgt2%C)m!<39'!oX-2!8[_U"TJQ#!!!*"!!i`0B?8?61FiM*
!<3?)!<3,>!.k3&!3ZA."V^t<!"+*gIJs3K"pb;5qZ-Wsli;V;cN*nE!=/`)!"BWrCKCK9!t#&0!!!-)
bQ*4pJcMqR*t](b!!<<'!"0AB"UY5C$!701":5>B$ig8/!WW3("n_kI!6bEN!<E0#!WiQ1#RC_?r;[9>
AePCW$mR,("p4r.!S%1%!.k3&!.k3&!.k3&!13cd#lau)!!a[BcI@Fb%3PHIrs&K)L&edbrri?'qZ%?F
!!WN,"spn#ggVQ1!<<**#QOi+!pK]:!.k3/!!il7!sns6E-jtW!!!-&!=Au,!<3(^!36,!!>GYN!<`H(
!<@4JLCsRh!s&E&!!EGo!.k3o!.k3d!$;db!!!*'!!!B7"UGGs$kb)s"98W1%h/L=!Wi?%"U3odJcOX-
*<?0@!!33+"pbJL"U"l,!")m:*XW6!,6e>S!s&G?!.k3&!.k3&!.k3&!.k3P!<33%$iL&3%1H7j_U0#0
"pF/jJcO!prr_im%i/WtfX*O:!!3-'#64`.'A!59!.k3I!<3-!!!<6&#SR+:!h3SBr;cft!!DopJcNIa
pAkd)-Y\-;!"/f0!!!$&"98bd!.k3&!1X$,'bp`M!s8N'#Rgh=!)j7B!<W<&"U,/:!Wr<#rrIoU\cDa2
rrE'"rrr?*&d8F@!sU@k+#+9?%g)k5!!WW/kQ$27JcLB&JcLB&JcNsoJcNLbrri?0r;[-;%%kDiPS+N3
"P3X*!8[_U"7lKr)'@#Bf4t6a"Tnu0!!WYH!.k3&!4Mt.!rW**!<E<+!!#Z9LaN'#rW*!$j8ac3cN*\?
#64a:A<R?*!W<!!#R&?OJcLB&XoK=S'`e=;!rr<*"p+oM4X'k.!s/K,"UGD9!rW-!!VHGE!6bHC!WN0"
!WN?%"qq.D!s8c5'+[q?'+Y-G!<<B0!WpsRJcLB&JcLB&JcLB&JcM5>%gN=D"onW)![((\`6C^R!rN$"
!WW4P!3-#*#RGb&e[ZnB"pY#+rs@oiJcLB&N<&t\rW!*+Lj+[U!;c`r!JpfK!!=*mN*uSa!s8W/#4MVE
!6Y@o!5JU7&cDb;"U+l+#lm4K:'^Uq!!3$"hZ/6.fDtpPq#Uj)!sM=c.L-1[!rWK+"2t7l!.k3&!.k3&
!.k3&!3?/0#6tG;!!!0/+Ig@)N%4])!<NAj!.k3`!!roO0>Y`]=r@SSr;Zj+$.f0/!.k3C!!iZ/!!E:'
GaUJd!!**%p&K[EZ2b%5!-!1D+T;?@#lXq_!.k3&!1X&h&cDb;"U+l+#qn;5(_$9A!!3'#rrRiRZiL+,
q#Um*&Igo`7Mc:1!"Ai6rr_KcJcLB&JcLB&JcLB&b5d+o^&\0<r;['8&mNi#d4Gb)!!!6&#MT61!7h/K
!rN$.#Rk"gagXVH%KHM0!"BCV!.k3&!4)\*!WN<%!!\=%M\#jh!Vl`q!U'N8!5nj@$NN&CHs-FK!so)2
!R(Oq!.k3R!$)1F!WiB'%1NIE!AZN#&H`1?!!!'%!<E0#"U+r/o)O@B]DrHK&HjgS3#<52"<\co$NpUa
!.k3&!.k3&!.k3&!.k3>!<3<&!!a,LWRK.X%L`48r<E9%JcN(Vr;uir#T"Pjd*d"F%0?G.rs\,lJcLB&
NrTRh!<`N*!)/9*3rf6]!!2lqrrJ)ZScB*!@"s7D!!!-0#QaDpJcNsoJcNRd'*JF>!W`<2%0ZnE0L6<S
!sJi.!<!!!!<36&!oX-2!6tQT#mgS6-pB3_"9]ei%LWCB`;kJiJcLB&JcLB&JcLB&XoSJ+rs/K&%iS<m
causQ!<<*$!XT/=#jhVD!6,$="8`6$"8r3-C"LV>.2)^^"oo)Af)UC&JcMJE$3LA7"ooKcG\mE_rW2fp
r;lfrJcN+W$j-S@#SE;;9)nqr#moDfJcLB&S,iKh%h&jX&-i1I%6"8)(^LBI!<!$"!<39'"bm#g!<3-!
!;?Kt%1O0l!(d(h"pHS3&I\dFkl?;8JcLB&JcLB&JcNsoJcNRdrs&K.r;[?NREF*C/HGkP!!33.#m^gk
!.k4'!<3/u";(_<!!*'"4ho@q:*ouB!WWZ?`;kJiJcN+W#m186"or"LKfK/3!Vl`o!U9Z:!6"pE!tthA
!,uq,+oqTHb5d+oJcMqRr;mK<$kNsV3=$<6$lBfe#QOl'"9/B$#6+ku!.k3p!<3-!!;?L)%29Tp%l++b
)uqQB&.A[Ef)UC&JcLB&JcLB&JcLB&RK*^$$NL/K"DHl9_'K0U!.k3N!"feS!!![(hp'1k'+>!U!!!*'
qZQp$o)O@BJcLi3$j["H!!&I)A/,(H%fh1]T)]'$*WR4EEe+)g!X8i7nc47Ab5d+o^&STE!>lUb!=:,!
*uY+g("3/7!6tQT!s0Ml"VN$n7LK8#!<<N:pAt3mrrU^NJcLB&JcLB&JcLB&JcMqR%0?\=#QOi-(:(j8
M$XFI!.k3`!"fVP!!!ZbZI[-L$kiaH!!!*'qZQp$i;eH0JcMVI%g)q7!"&l0"[ujd*Wc<D"7?/@!3lM/
#S$h>8V2XHr;Zj*#2fK5!.k3>!"B#4)&E;]!":ph#6bPGpAfdFWW3P4!?NBf!!!s0&-N%8!=oV5!W<#u
!r2hJ!.k3&!.k3&!.k3o!.k3d!!*HAr;[-JC>-MC5QCcc!n..$!6kKO#64`3$YIK,aYP(Bq>gHqblE=q
JcN4Z$j$V;$4d+WLgGf9!=7BZJcNai!<EE'!!sErJTh(o"98`1c2`FrJcMqR%0HS:#nn![$R,s`!"0:s
!.k3\!"/l2"]mW<#RUP3#RAr]JcLB&JcLB&JcLB&JcM;@!=9A:!!tQ\c.I"c!!!'2pAfdFWW3G.!!WE2
$TFX'c@[5Eq>gHqnGn.@JcLo5%L*1C"9;eKKdQj$!<<<(JcMJE!WiB+r;[+"JUTTZ"on`2nc47Ab5d+o
^]4]D!!rrE&I:E6*YeS]!<<>Q!.k3p!"Ar/!s8lb2`;of!WWH2`;kJiJcLB&JcLB&JcLB&XoJtA%0-A5
#E.$R^(LbQ!!s>#!.k3^!"C%g!WiHea3hh.#mgS4f)UC&JcMPG$P![I!$6N5AHVu>"7-#>!4)Y+%KlV/
""8&8CAn26!=.N_JcLB&S,a$%"<euk!WX2p-3sYa$j62'JcMeN%hK0S#6b891+Y7/$3LA6#l+Q%!V6;C
!.k3&!.k3&!.k3o!.k3d!"TMJ!!!6D^"1eQ#6Y#,((&FiJcO!p$Q^/e#6G1-h8u3*$,Zap!.k3Y!"9>I
!"3"aN=,^d"9S\Z!.k3i!!*E/qZ$j`PB/S]!!EDL!.k3&!3Q;4"9]kk!XB&T49,E`%L`=>jT'l4]DrHS
%1!1B$O."O5Ucj=!sSr)!ri;[!.k3&!.k3&!.k3&!.k3@!"K59!!"m,e'Xd2!!!9-%e]mS!2ol*()-`O
!WlQEb0"HEnGrRkq#H!HJcLo5%L3.;13n"O!"&`,!"K#0JcMJErrN*!!!N9$"aXls)ZU*9!W2qL!6Y@o
!5ALC!>?+S'bV'N$5!^J!=I6TJcO'r'+,'N"Uu%_)ZW_K'+G9W#Qk/4"oSZ*"oeW'!<3)M!.k3&!.k3&
!.k3&!.k3R!"K59!!#U+f[!A9!!!T6!TX64!4r4>#S[s[!<N<PQ.FE\0C]&B"6TZ9!.k3I!"T)1"U+mT
K5hP)!<E9&"9e,mJcN+W%06q=!!WE'%feeBGZt1@!U9Z:!.k3?!"K#C'*(Z>%1EOP%0-D/!qu\H!3-#4
$53RH((_E1$n*/;4:;E#!s8]1r<E9*rrN-"rrMoqJcLB&JcLB&JcLB&b5d+o^&SNR'=5m4TE"rn!YuR!
!.k3r!<3<$!"KVSb0eCa!!`]0'FFg@!rN&u!riDR!.k3&!4Mq7":+u-:iq^`!<N-!rs.<ZJcNC_%!$c<
(]XU<!"]D:#7US4fDpL'JcMqR%g<.@"UH,:(CgoT!!WWB($,FI!5&=3!rWHD%hAgI.l&@M!!WH(%L<4D
$j[%A!Wi?%!<M?`JcLB&JcLB&JcLB&JcM5>$Pcaid(<Q`!!33;(A.ZZ!3-&!#Q"K0%i]Q@a1i\r$N^;1
"8W#t!riE!!.k3&!0[Bh"p4iTH[BB*!<N-!!XAr1JcM,;$j29&@2&\F!!!',!s\`*quD<Kb5d+o^]4lK
"9oki+Y<[(%KHJ5"r.m%!.k3r!<3-!$5j?b":"ob+;u!q"98E'$3^_A"pP,1!!!$#eGt1$JcLB&JcLB&
JcLB&YQ,18"9np"\Bir@'EJ4C$l0W=!.k3`!#,eK!<E6'$k*+9.\#5BIiJh<#6tq=!<3-#"Qoc:!.k3K
!"/f0!<<+3GE4HY"9eZ'rsJ/oJcN%Urr`)t$W<+>6i[2j!!!H.#6"Yg!.k3&!1j0&!<W<%#;.#G.g7":
"9\o5)]SMOJcMeN*s2T`)?g9I":u+Q3\Vp6#Qk&.!Xo&4"U5/4!WW3$!Vl_I!.k3&!.k3&!.k3o!.k3d
!"B,6NloMV,SU7[$k*med/\auc2\Uf$NU80!XoJ;!%M*sbem6b(C16G!!N3"rrW3'eGt1$JcN1Y#;h!M
=o\O*"T8?#$JYW5!5eg:"8W!#%=<8])Z'L7$N:(Y!.k3&!3?/0%6YR=!X0Yf"9\o5)]Rl=JcNF`*s2T`
)?g9I":u+Q"=#%)$NgA2!WW3."U5/4!WW3$!TsH7!.k3&!.k3I!!!)X!.k3&!29Jn!rW*&*CA2pb?k,I
rsSi.o`0RDU]:r4#lk85*HfN^X==qt'*edGq>gNuq#H!HJcM2=rrN#t#R>s!L'Rb^!<N-!!X8i/JcMJE
rrN-%qu?p(!"^cER8!JX!s8N(!W2qL!6Y@o!6,$=!W<!/#QQ+i:B1n9%LrRC!!!0+df=t"bQ&Xl$ipA2
!s]>:'+nCs!<<<-"Tec.!!NN-!WW3$!S%1%!.k3&!.k3&!.k3&!42_,!s8E$"Xg(lgmg"q!<3H,!oj94
!4Dk>#mgS=!WkNgf@>$Z%i>N\!!<#trrhKbJcLB&WrN/%!W2p"@ssM3rW)s!r;cj%mJqh=ZN1"+rr`0!
!!W?%")NmO6i-l_!U9Z:!.k3F!!*-%r;[?76mO?2$kEjY%Kce5!!NQ#!.k3L!$)IV!<E9)#7pk8!C7nP
0a7a_!WW3$"U+r/!!!$#q#H!HJcLB&JcLB&JcNsoJcNdj!!<-"&H`DhhS@2j)?BjH$NgJ2!!EGR!.k3p
!<3<&!"TVL!!!U)^X]_j'bq;l!Wr6!rr^dOJcLB&]`8$5rW!6+#p,ODC^0q@!W<#u#MK00!6"s<#5J6(
"U,2m>_.;?qZ-WsfDpL'JcN.X!!3'!%g!%;6P:7@#9+Ta!s&E8'&rtD!5&=3$2joC!!!*((`36)!!$10
"pP)1!!!*'!Wi?%!<M?`JcLB&JcLB&JcLB&JcMAB&I]K!bgLeP('"@C$NgJ2!!EH!!.k3L!<3<&!"02F
!!!*8T[:`K/J\6m!!<#trr`&sJcLB&PlM*t&Uf.X%KHJ:"8r6"#Q=^T!20Dm#5J6)"V(M?1O,3n!WE'$
"TSQ(quD<Kb5d+o_>k)Q&2H$d!!WWM*!69D!>6$m!.k3r!<3B(!Z:t<"9]P^!<W<%CI%q)!s8],!s8T+
!!!$#eGt1$JcLB&JcN1Y!!COIJcLB&^&\06rsAW(%iQW%%M&XfYe8PK/.r[%$Jb]6!4)Y8$NL/8!$n5Y
f6/&B":P\:!<3?)'B]@I!.k3Y!<3*"!<3<$!!X,D!+1)G:uMD+!3-#,#ljr4!#pf!FuKC,rW)s+rs7rk
JcLB&X8j=Z(]sj?!"feS*<ZKF!"*@:CHMh*"p+i1"pt\B#6Y2(!.k3E!#>k@!!rWEJcQ?<#64c*!sA`F
)?U'F"o/.M!.k36!!!2n!.k36!!!)k!.k3o!.k3t!<3*"$2ji7)B^%1&d*F"e>lCc&etTVb5d+o`;gAV
!WWQ-$W>`s_Ee;:$P<7:rs8W<eGt1$JcNgkrrN-"rs/E$"r@RgI[t!^cN&Os]DrQO!<<B*#sa#;N!01e
!!!B7#RK,aJcLB&^&T5l(]sj?!"feS)#sd>!&o@@63mi#"p+l2"pt\B#6Y1k!.k3W!#>kA!!iQ24V@a>
%06G2!!EEC)?U'F"m5l;!.k3J!!*0)hZ/6.T`>&qirFZ2JcMkPrt#&.&Io9Z"98E;=3f18DAF!(%g*4.
!.k3E!"9,9!!3-##aj,lZ7-gk!<3*"&,?3W!.k3E!<3B*"T8<*":P8TFEWs&qu?]tp],mGQiIU#!rr?%
!!YWJL/%^K"9eT&!!%TNb5d+oci>-j":#/@%0QeF#S%FN(Dn*0*<l]L"9Ac5#71\@"p+kT!.k3i!#>b@
!!*'""tO+>(Bk'F!<<*%!uMjX"P!L(!.k3[!!!/H!.k3X!!!&H!.k3&!58I5&,cJ?%Ls!P!!"7:eBs%4
()mqs!t!c`JcMtS#Qk//3mPh#GoQV\rrN-1k5^)6JcN+W%LEFE"98E'!!EW/Ck$b$hZ/6.V>pr)!WW4S
E/m$\#mC,+mJqh=JcMkP('FaF#7V+F";1tM&HkuR)`%Hu#Qk21rWiH0rs&K)pAfdFSH'9(!WWa9.6/OW
"9AK&!s9AW"9eN#JcLB&JcLB&JcLB&b5d+ociF(Yr;cj+rW!<,Wkurq0G4g/"pP.O!.k3j!##J8!!3-#
#65*(dEKLH$kNOE#7&WVJcLB&`;ooIr;[*6-NF-,@!?5iqu?a"!;urN!.k3a!"B#1!!*'""TSN]J9>`?
qZ-WurrLsVJcLB&^&SrQ"TSN7&IAaH%h&n=?N:'/"U"o/!XAl,#lb%f!.k3X!#G_;!!*'""TSW\,9/05
!WiB'!Wif?"pX5jJcLB&JcLB&JcLB&JcMkPrt>81rs\l,$WYKtcuTg4%LiUM%.4+I!29Gr"98E0"9&9.
%g&0Na2]h="9\r7o`0RDJcMJErseo,"qMON5B1[nq>^O(!;urr!.k3=!!EB(!!r`+!!WQ+08Xdn(An.6
!s8Q(!J:Bq!.k3t!#GeB!!!TC#mg_?$r1VT!!!0+"9\c,%Ku_9rrg^LJcNdj"9SW(#m1)+%gN(7-n[%g
!s&E(!Y#SC#1W^*!.k3&!.k3&!.k3&!5&=3#QGD7!";WAa3fVW$3gS8!!<E$!<3,^!.k3V!!33)!rN$+
/#^ACRmR>_!<ET;jT'l4JcN1YrsJ])#Qt8K$34d?Bj(<5!<rr0!U9Z:!3#r"!<WB%!!WN-!-Vq<2>R=Q
$1IqH!.k3N!#Yh>"U,VU!!!O%4\$Cp!!30%!X0#;#RCS;o)O@BTE##o!s/9!$s"?,)\WSe#RCP9&.nX;
JcLB&JcLB&JcLB&b5d+oc2dkLrt551%L'Vbg:A@B$O-\A!WW3%qZ-Wtdf=t"`;flBrW!K2!X8Z*+#qKc
erBn;!<ET;df=t"JcNgkrsJ])#6Y/:+^eo/55YB`!s8N(#lOeV!.k3`!!!0$!"&`-":G;3$?U*?,PqK@
$/PZ6!.k3`!#Yh>"U,VU!!#GZ;)&+V!!30'!s/Z8#RCS;i;eH0ZN't.rW!Q3!<`B&"TTel:([jA#RCP9
&.n")JcLB&JcLB&JcLB&JcMeN$PaBj%KHP^R*sHr9B?/*!1Elu!<<*#HbS%SAfqH_!t##2q#H!HJcMPG
!>@!^!"02U!'k=<CB+SE!!)`oquD<KOT5jq!s8uVEI2F<!!E9%!sJZ8K)j'pJcO*srW`fF&-)\=(E"/V
#SRmM!WN?'#6+l,!RCat!5&:=":5Z1.jZAG'+=oi!.k3&!.k3&!.k3&!.k3`!"1n(#o!@>Oi>Pg@5H@4
JcMeN%06G]OkRpn8cSi"$igLp!.k3&!4;e-)\`/M$P3_*G[Fe[!!`r5!;?NZ!.k3G!!iZ1%Kc\mKk>o8
!<*-%&b#dP!.k3N!"CF`#S[7=&j-pF!"KYXr;lp%rs&K,rrM]kJcM/<#mpeD,;LE_%1*@6!.k3&!.k3&
!/U[U!W)kK!6Y@o!6tQR$5*=G*G`gLaGL-$!!0t;JcNF`%134G/Y1A4bpF/-!%/Q4!.k3&!65'?(CL-A
$4Qtl?$L)u('b9Mo`<\FJcN1Y!=Ar.!!j$(ODJn:!#u-s!.k3&!5&:@*[qU;#QP/E2$*aX,9?R\h#N$,
W;m>-!u!@s,U`a!+;4b[k5^)6JcLB&JcM;@!!29`JcLB&WW3J8%2/_<^!"fs5Q^ud!TsH7!13`q":#tU
6b(@oSgj^?()H]GJcLB&UAtf9&-)\D!$7,.CG>f&#7CV+!W2qL!0I6k!sel,!rr=6E/JB1";Log!6Y@o
!6tQR*[2^;!&=fj'G:BG+W^@Zb5d+o]DrBA!=8i77jg,s!#$:U#1W^*!.k3&!.k3&!.k3&!58FD#6tM>
(cf@Oe?:;-!!!'-eGt1$WrNV>#RCJ3%7/L_e!hHj()Q-6JcLB&ZN(F8!!!=4COo"i!"1(Q!rE#q!;urd
!.k3F!"'&5!"Ar/*f"Tk4mW0#!.k3P!"T,4#m^b9-7hS3!s8Z:!!MHbJcM5>%g!1B!tu.I*A&F!&c`%=
#5J7N!.k3&!.k3&!.k3o!.k3t!"T;E!X1$Sf@7H2#nI"9!Wp7>JcNF`%1ELB!#Z5fd_aUn%hoZ,!.k3&
!5\^<G)(]QrW)s+rrDosqZ-Qqg]2p+YlG%1$31&<KQ<2^gAlg*JcNLb%0?k<"p8!j3A1pG!<`PS!.k3P
!"T,4"9T,H!!E9P0LS_?"U4&hJcLB&JcLB&JcLB&JcMkP#SdX`,.#bK_*7hu!t55B#l=W%!q-,@!1Elt
+:\DW!!!Q5)04!Jd$+S+!.k3&!2';u$rDLs:bVk\&dS=7rrMusqZ-ZsJcLf2$PNOA#64`aE-6FQ!!!+R
!6Y@o!71]H1a`2%"r:oP2?j?jrVup#_Z58g^&SZM";Dpb$31)3*=)on!#HO'!.k3&!.k3&!.k3&!.k3b
!"TAB)jJe(bA@4]!!!'5#SR"7rrV!VJcMkP!Y,\@rW!6-&KhsXeBQBH!TsH7!.k3W!"f9QI>VM7!!F>S
!"8i.!!!$#qZ-KomJqh=TE#?$!s&B+!!"QtF*pmS!.k3&!3?/1-7/^<'H1<k"pk\B!!!,`!.k3>!"T28
'GLi\!<<?0!"9tq@i+q@JcLB&JcLB&JcLB&b5d+oli@%ers/Q0rs&K*rrE''q>^R.#6=`(#QR7XZdH\2
8f##=JcNLbrseu0r;[W<!%E9;i5UlZ$PaC&(]XdA!<<*-$P![D!<3,f!.k3&!9X@^!Ug$e!<N62"Sr*+
;h0R[.0'GP"U+u1aoI"nYlG47!X&W3!!#<3T4T2H%f?;0$3UJ4!V$0g!WE(N!.k4-!#c+K!Wi?%!WiH+
!WiB'!!!'%!!!3-$O[7V$iU>9$OIIZ/OrlH'$L?-!3?/@"9\f/&J5Zi#m(2a5>rF"#S[II"U>>F+<V.(
!sAK)rrW&tJcLB&JcLB&JcLB&JcNjlrrW3*rs8W/rr`9$rs&?#%gr@;$3:VC!'nBId`6#6%c78<!1Eof
%K?M-!"KMV/"+f0`E`H[)]1++!<3*"!<3H,%f68+!g3P8!5eg:!Ug$e!>PtB!!`K."98F'I=[:s!!!*'
"U+u1mJqh=N;s:e!X&W+%fcSjL2d9*:BC=mrri?&nGrLgUB&I;JcP9?-O9tZ!WW3%!WrN+!W`<%!!33%
!!WW8$PEaM%0dFX#ne^Y8QuN("M4Yc!58FR"9\f/&J5Zi!Y5M;(IfJa;$[@3#6>,;+<V.(!sAK)rrVEb
JcLB&JcLB&JcLB&JcOL)rrW3'rs&K*r;cj-q>_!>$O[mh-7d!G^rp4+)$p*>rrU^NJcMkPrsAN%&-3CV
4,qYGeqt%O!!!T5$k3(7rs&2tJcLB&eH#UMmf3Lo"9S`,)#F:BBO,Y1-iaPR"U+u1!<LsUJcMDC"Tni1
"T\c*!!tlET7n<d!!<<-rW)s"rr`6#p&P$lOT9t5bQ'!o"Te`*!!**%!W`<%!!33)"98E7&fDPr*s2TN
"pY>t3D<Hi#64k`!.k3>!#G_>!<EN7$OZq7"U,,T7TCK0"U,YW#m(&/rt,2GrrW3*rs&K+O8sk4JcLB&
JcLB&b5d+oli@%erri?+rr`3"rsni)%1rsf(+60&g;SCY)AEJS!<3,<!.k3b!<3B&!"f;5'Gr,XR``_$
LD^'l!s8r?r;cj%jT'l4JcOs6rrMQgrri?(rrN#t%W?6FH63+e"98T/!s8Q)aoI"nYlFq0!sJi4!W<!'
4FM$q<r`=:r;cj!rr_imr;lltJcLB&h>eo,"Te`*!!**%!W`<%!!33)"98E7&fDPr%0H\<"p\F$<_jA7
#64kN!.k3P!$q^L!<EN7$O["9"U,5<(-WBN8d#nO!<E<+&.fTm!WiT3"pP25r;_ELJcLB&JcLB&JcLB&
`W6#?pAk3rrsAT'$NqbH^XBdF@2omh"Sr,u"Qoc:!1Eof!r;m,"pbSU&h84Ff$o[6'`\aD!<3?)!<3(W
!.k3[!;uru"8`'!!Y,)."C-7uS0\(6"U+o1"Tnkn!.k31!!NB(!s8Q/qu@!f@=jLm"TSN0qZ-X!r;cWo
rrE'"UB&I;JcP9?rrVop)$L0L#R:S8!<WE*!YcLS"UY5@*EmJ$#Qt;/!<!!!"2b+j!4i11!W<!?!s/W0
!\jru6j`nu!Y#,0!s8c5+<V!u#mgkC"U+o-mf7q>JcNdj!!g4<JcLB&JcLB&fDtpQpAk3rrsAW($kND:
]\:ZX<#QYa&d%n0rrgjPJcMkPrrW&t(BjgF#Sn$i,alope!VK^$31&3#QOi*!VZSG!.k3m!;uru"8`')
%0?h9"aGoGPmRBh"Tnc/"Tnk\!.k3C!!NB(!s8`/qZ$jOEHR4O!!!9$!!39+!<)uo!WN0"!KdA6!6bHC
!qu[4"U,/;#6t81!s8T+)&*S`!)Fm[D?L1L"9eZ'r<!!$k5^)6Q2ppcr;[9/!sSo6"TT)k6W4!e$NC,+
"9/W++TDfK$3(;2"oeUf!.k3G!!!,[!.k3&!.k3o!.k4+!"fD>%hBKo+b.b]be?"H-3sSiqZ-Wsrs$@@
JcN4Z'ak!B"on]8!#KS'bLX^&+9i#U#Qt:j!.k3&!8RYP!WN8s!"_#AKmdVK!"o84'a"gG!s&GD!.k3Y
!;QX*$NU;6!<iu6!'?!]LMI(i!<30"!;QZl!.k3&!7h,p!WiN/"pP>=%1NLG!WiK-#6tSX7Rf6a%g31@
!"8i0"U,/;r<CdPJcMkPrrr)r('+pI"thbb,o-Ie!WiH+!<ErO"pP;;r<WE,JcLB&JcLB&JcLB&JcN:\
'*\XO%im!Xa26E<<"ooM%gi::"oSH$!WNAe!.k35!"K>;!!<3$#o47paj&&EDZ9q@#lb$`!.k3]!;cfs
"8Mp"7uDGQ@/L!0$3:DF!s8Q)li;V;OT>.W"UY>4"9AK.$31&<GBIt[.Jj,F"8r5q!M9A8!.k47!#bn?
"U,)7#RCkK"pP,1"9\u5/6kA9,mXVW"9&9(!=/i4#RLA5_Z58g^&\0:pAc!3!!3N4"op1o)d=!X!WrN*
!>ZFT"pYD3#lb(s!.k3&!.k3&!.k3&!.k4$!!*3/rW!K3!!rr3$NL/G)d0W#aO-n/oDnmlrrppQJcMYJ
rrVur'a+LB7]k=p_4+=1$ig8<&dS^E!rrH%!;uot!f-i.!6bED#7CG1#6Y).!!Er9!WE');LiDC>8@2>
!VliM!.k3G!;cd0!!!$#!s8]1"9\`*!%D?IJQt26!!*6(rW)ot!<NE$!K@)2!6,$<!W`Q7rW3W6!WrN8
)\*>`#S.(K!ELikq>gO!rs/Q1rs8W0k5^)6RK3?lpAbR/$PO0Y!Wsc->n[2G"ptG8$O[(@!s/K(qZd'$
Q2lL:JcLB&JcPZJ!!.oVb5d+okPtnr!!!*5#64`3*;ojD-Z$cKf\(d'!"/B!rrN-'_Z58g\,cO1p](p3
#ma1he)J3F5mmqu%itoZ"9\W'!!N0!rrVinJcLB&hZ*fg!!!35$2so9"T\W1!<=cdG_:Z%!!!-&!Vli;
!.k3Y!;cd)!!!$#!s8]1"9\]-rW!3lH^8DA+TMuVq#CEu$iL,&!.k3&!8%8h!Wi`2!XB8B!<E9.%Ls'\
#9XTs%hK9[!!rH%rrrE-rsA]2rs.'SJcMkPrs&2t*=E5g'*8IB!rsJU*$c1?!u)1I!!33(!<`N2%0d%:
!JCH)!.k3&!.k3&!.k3h!#G\:!X]>?#RCD1)B:>+X2rl?ZVhAQ#nun1rrM9_JcLN*!sp-&^^]#Kb_dJ^
*!R&h%1`gRO8sk4])Vp6!!!,q!!Pr8PDsi%r;c]sr;l0`JcLc1q#LO!!s/u7"pP,2!!k0"N/)d,!!!E%
!;cej!6Y@o!9sP$!WiB&!!3-%!s92M"pGD8&Lg:A;Zm7)"8i0!!rW<"#/^Fm!58I5#QFl&!$M@D$47@W
&/#Nb!t#Q(-m^MH#m^q@"U,#3!!!'%"U+o-nGn.@JcLB&JcLB&JcLB&eGp?e$N^M:%1E4;',u82da,e.
2BEbI&IJ%/rrLXMJcM2=('G$P2.=MIc-W1]"pc1]%1NLH!WrE&JcLB&bQ%YF"oA9*%KHJMD1m=\;>U@j
"8r8Q!.k3C!;QX#!s8T+#lt,?rW!-1BlJNQAJ4tBqu?a""T&4\!.k3j!#Yh>!!33%!Wi?'',q)Y"#r"f
2]r),!!E9(r;cj!r<<'&k5^)6RK3?mrrW&trrN-,rXf>F%iGKP%KI.X))!a9"p+l0"U"r0!WrW1"T\Xi
!.k3&!.k3&!.k3o!.k47!"f8:#RCn[)\NYs<hJ.!_p!?5r;cj5ZN,RWYQ,OB!WW3.$O-t=!&'A]d*]m^
5TCaZ*>8ka#42DB!.k4#!";5OK5Q$7!"0\G"98H#!Pe\e!3ZD$!W)it!<i?$#mLD4=G)*TE^L61!;QZp
!.k3&!87GQ!W<!5!s8Z+"9eo3!$E:#.Ps^!*?t^k"pX`#rrW3'eGt1$X8r2%rrW&t*<?0C!tGhD!s/K6
$NN[G,qgN#"UGA<#6P)0!!*-#!JCH)!.k3&!.k3&!.k3h!"fG;#R_+P&f**@f%e3j[UT[Rr;ZjV(=rP<
!/pma!Wi?%$O[.D!!!NI'm@[Jd`/M!58b4G%0H]q!.k3W!!WWpOd][!>lF^,"UkD4$NU,+j8ac3MZE\V
qu?cu"p+Z&$NU8.!"X%(K:%!.!rDun!M]Y<!.k4;!<3)u!#5S<"9\l4%RNum#SJ6[!sBM`"U+l1o`5!n
rrg4>JcNLbr<3-%qZ%K7!<WE8%Kce7!XfA@"ooYs06CM7!!`]2"T&5i!.k3&!.k3&!1*Zc#42DB!.k4%
!#5V>&el#r6#>#t`R)/"!s9/K(D@)Zr;cj!rri?+rrgXJJcMkPrri,t%0?S;#n7=]'*JjN!!!-#!"Kp?
a2c]]TN<WV&dfKV!.k3&!65'E%Q/?KCjh9pqZ$^'"UGV2!;urT!.k3A!;urn!"B#9!!!')"99'1K49)!
!Eg9<!!3E+!;uqZ!.k3l!#kq>!!!$#"9Sf3!?qLD.PuQ&!<E?-"pG)0*?b:\rrN-$rrN&urrM9_JcM5>
r<*c=#6kA9"TSN)!sA`2"T\i:"p+r=%1N@T.SKgBCc;h/"U+l3r;i2aJcMtS!!UmQJcLB&n,NFlPQ8l,
JcP!7'*JRM%5)IubfA&US21c_!tu1Y)Z'O7!riE'#6+h>!.k3b!<32t!"8o1#mh%M'-%Mc!!`o2!"B>:
.9j+(_90lu>o3bMm/V_<JcOO*#R*;5TO2P`2%'*Y!?)7:!;urB!.k3S!;uro!"o>5!!`c0!<rc/!!kr2
J<,t3/c5VI!W2qL!.k4)!#kq>!!!$#"9\]T=*=QD1C=Kn"p"l1"U4r,,TZg`rrN-$rrN&urrLXMJcMkP
r<*rB#6kA9"TSN)!sA`1"U4u3%LW=G%1N@HrW!7*?Z&[d"Te`+!WN1R!.k3j!!!A?!.k3&!!*'%KE06s
i<eHFp&P!jrrV?`!WrN+p](O'!!33.%gN77!"fA9(`62@cIC%^_Ljla%1EFGcN&OsJcHGd!!!-%!#\&D
dF?Xn^j7s])@-`L!!`uD%1WaQ!s@E\rrW3&rrh9_nH\mskR$2Jr;j_7rrM]lr;ciuqZHj%rri9&r;lis
!s/N)!;cj*!<EE+!!!'*!<<E)#6>5Equ?s^Bm!ipRTC=%!<3)u"Q093!.k4G!"K&1!!<3$'/F$;I!UK[
/c5SN%0ZqDq#C[)!s8Z2#mCG7quZs&#l+T"!Qb>h!<3)u!;?Kn!WN9%"lTRB!S%/O!WiN(!qZHm!Vl^3
#6tPR',LWKND^\s"9\c,!!!$#!s8]1ZN,RWV>qD6!!!*$!"pq+,:=`b(]XsM#6=i*!!EN)":"u0!!*<.
$k3=Q',2)^quQm$"Si&t#lb,/"9/H$!8R\G!oX7]!r)`u!!33(",?m.!!!b9!.k3&!.k4.!9"7C"7ZBk
!qlWf!!*-%o`,:!!WW?2"Tni0')MY@!Y/_%a3MiL`PP1p%1NUM"9cC<JcM#8!sAT(#6"T0$qc&^e'ZOb
a*:J_(^U'?rseu9rs/Q*hZ3ZXrr`9(i</TTkR%(li;ifW_#X!+r;ciuqZHj%rri9&r;cp$!rDru$jce6
"U524"U5&-!"oSC#8.XQ"TSiW<cie!?rg&H"8Mrs!W</H!.k3/!!<<'!!N9$!=Af:!)n2sJVo+I+q+GT
"UPS4!"8l/!s8Z/"UG25"pbG,"8`,.!94(Z!V6<k!WN9%"lTRB!VQNM!!<9(#6ac$rW2co(EZ(/7M$"/
!$_gR"9S`,!<<*#!<WE-"kNa+!.k1Q!rr<(rW"8O'`\dj-RCAs$NL/-!!!-+"9\f/!Wi?%"U,;C&J5]l
!WrQ.!Wr)rrs8W/rr`9&r;bXSnH/OhkQChdpAk3prr];%JcLB&JcLB&b5d+oqu?]uq>_H<!rr<>%3$6I
?(&^Se^;IERQ1?U$OI7R$OI?E!.k3G!!*3,qu@0I<3b'.b1Fk=IlebU"SVls$4m:O$O6q6$2k/,#F5AR
!9"+O!8.DK"9/N&!sJc/#Qt//r;[?1!sfAG#m189!s&E4$3:2)!!t2hEe]g8Q?bh)q>^R!!!)rurr]n6
JcM5>!<WK(!"9GR(-u8mJR`t97LK7r!!3E1!rrH%!<`B&!<iSn!;cf[!:^*[!9"+]!;-?l!V$0g!oXOW
&Ffe^!;Z]q!riE&#QP)*#mCeJ$3peCrWNrE$3^SO%L<=O!!!ZA(csQ`8gj]<!t,)0!!N?&!<E9)"9c[D
JcLo5!<WK(!!ru?"=ulM5VY,H'dE\Y#ljr8%13FJ#Qk//!!*9(!!35r"8`0""oSQ'!ri;e!:^*[%Hn2r
$hXN"!ri@j!.k3&!.k4L!!!(U!.k4$!!!*"!!!'!!#PtK%n1TDbgXhedCG?&&-)\<$P!dW#6P4W!.k3&
!;um!!XK&1!"Au2/6f4/e^rF%^n=UGpAbC"!sSr8%h/@B!sf2=#l=k<!5nlr"n;T]!UBd^"9/N#!so)5
!s&E)"UbV>rW<<1%0cn?$iU/<&-)\303*CJF+f!`74/'B$MOQ!!WN8[!.k3&!;$6p!<r]-&.nd?&MScY
HA@'.@m:\="9S`,"Tnei!;cf[!:^*]!<3&X"nM`o!W<#k!;uuX$h4eu!Sm_\!WiK-"U55=rX&`8$jm:>
#6bGD#6bA?rWN`?$PF(2/4LWr(DJ5&!WE'0!s8T)!<N9&!!!$#!s8Z/ZN,RWU&Z89"pFu4#QOi5!#RsX
2Fp2=4WXS8%LNOK$3^M3!!**'!WiH("S`)r!riH&"9/H&!UBaU!V$WX$haQ'!!33(",?l.!.k3&!.k3&
!<)s/!WiH+"9\o5#RLtN%1<RQr<jDN%1Wj]&J>]j(c5$[^t[PhdE]e4E[;=r!<!$&!s8T,]`<WaP5kRa
qZ$p,#RLtD!!s<]RhO#qe'ZOgTRg#r+<VO>'c%8g"pY#-o)Sdmr;s,%q>gNtrrV-Zi;rHUnHJF`rrE'"
f)QBe*@kHTM1'l+G\JcC!"92E+MIi-!/^aV!Vud.!!s)G"pkl/Ck@[cCLCCG0FRLQ!X/Z.q>pTur;uKh
nH&.`nI"denH%GGi</TMnItTuqucs#r;lQkr;lp"r<!-)!sAc*"8rB#"UkV;()J_s7Q<Cn3B.HG!!*WI
qZ6WqrrW3'rs%'TJcLB&!<</t!!F&T'cI8T!%B*Y;d<!g6p`=7!"0)>#6tG;!sAZ,!!!<2#6kG>$474O
%hB3_&J5$Eo)S:_nItEmq?,p`rrMoqrrN'"WrR_OJcLB&JcNsoOT5jm!WrN-"9o&9#n@CP$Oe!`$O[OZ
',)3'&J6<_J#9loaihcEahj9P.j53*r;cg"":#/<#RII2JcMSH!!E-!rrW-!'ab`u1MrMuf[S-pd)`hl
GtBJ!'+50M$4R@MnGrRkr;rksrr`9&q>f^Zi;rHUnHJF`rrE'"mf;\S$m88eO-=?uCh@[!2?WmX!t#PK
%fHA0!<N9(ZiG[XRfEEip](d+!t#eD$Oo4!H"^6FPDTHe?8N8j!<30#!!30'"8r9#"8r;k!:^*["n;rY
!WN/W!9"%M!:^`m"9/H$!Vufo!;uru!r`9)"9S`/"TAKC!WrN*!!NN+(d;;IGWS&H1,19j!!ru7!rr?5
&H2_0!!rZ-!!!'%"9\o5`;kJiOoPI`quHa1rs\i+!<W<:"=?</83^0T;b&hf"9\l3!s8N'!s8E*rsA]4
rseu=rt,2BrrM]knH8:pnGqbTq?-`uq#LEqr;rAef)PgR#-IrX!.k3&!8RYT!qu]p"9/Sa!9"Ub!;lis
!riB&"TJ`,#lb;4%0$e4!$;:G#R1M=%20'Q$k+%/=_t%Pf%8?sccjec_O4%7!!)ru!t>tf)Y3t/!nRF(
!.k4M!!ri4!WiKA'*eaBrW+AO#8A"6@%>9Zc-k"abKS;?RrD%T+WVR@()%2e$k!IK#6Y/3!s/Q&%K?h9
$3(81#6+i+"7ZB]'CcV0!9aF_#lb,/!hfV=!##\X7qmR-FDu,3Jq\VE+TMTH!<N&tqZ57JJcLB&o`,*t
!s&E)oDf=47=K)qIXZWgJ;%T*,-Cph!;ccr!W<#u!WN5[!9"+M!;uru!rW6"":>GA#6tA7!s8Q+"9&?%
!t5A8!X&W2!!!3;-Q*p$!"BeG!!N?&(Ddbu":b_CpAk3qrri?*ZN,RWUAuD>!s&E)!!*-&#7)"X&.f!M
#neX[%2'X#,9\g!0H(2s"UGG@#QY&+"9S`/!Wr<$rrE!#r<*!"r;lEgnHJFci;il[rrW-!rW<'#K`H])
JcLB&JcP6>rrVoprr`9*i;hgMnGit!!WrN-":#/;#R_"K!XoMIq#DE;!sSr7%j!,c>_8W[_TpNSda6%X
d`AkN="Gm>(B"4B!<EW=)&WGY"p+c)!sSQ%rrU.>JcM#8!"A](#n7@P#6>,;!=K,Y'Ghr;.l;4([a!4E
bg4GRaNMZ7S;1$50H(?.#n.%D"9\f/!Wr<0rsSi5rs/Q.rri?(nGr(mnIOg`q>gO$rs&K)Nr\>C&dJps
5$<)aOH,KRKm%'AFC@Wcqu?g$#R^h5!!`Q0#6Ou-!sHUDJcL]/!"/N%r;Zj$!qu[,,#ic<H[ga'K8GYM
H!Efg+:b1If)YgOr;ciurrV-Zi<AoTq>gHprrW-$r<3-,rs/Q,rr`9%rW3Q3$PY0X;f-;k>$EgC'+Oj>
%LW[R"pP&0)]02#"9\r7pAk3qrri?*f)UC&JcGcWq>_rI"9JW2%ic;t&-W7F$4ICE!!F/d,;V/B5YtEc
:-0sS*tSDT"9Sc.!rW0"!<!'!"8r<"!V$0["n;`l!9aF_"9/H$!;chs!6tQE"1A2]!.k3&!6YBB"8Mos
"TAZ+$fMBM!!!/m"!.RJ"pP;;#mgtI%1NdZ&ecrO/i#O_?"A22P,5V)bn/:Rda$+ada-+^a01_@5847t
!<30$#6+u-$2";s!j_lY!1X&h"TJu3'E8R>!"05F'dle%Vn^L'd`rrWaj&8Yd*^.VZCd>3F_+QC4Yni(
%h9$W$k!FL#mU\3"S2`S!9"1f%Li^P"9\f)!:g*n!<E<'!!1mUnH\RbgAi;q"rJI97pU(_L3mrWCNauQ
H&dT'>!Eu1!!``4"Tnl$!<!#u!OMiY!0mQa!Vl`q!WNN,&H2YG";sC4JVT2<Ir]IJH[:0nHtuVB/KPQ+
g]6jFq$6^&hZ3TT!<E3!!Vl`q!WN0"!WE0(!<<*$!oF+M!:^6]!W<)u"9&H&"U,>D$k<gSr;[!.(EtFh
2uN^a'c/\]=AiHs4<4_/qZ-WsrrW3&rs8W4pAk'm`;kJiM?*YWrri?*rra>B!!33-#Qt87!!k#5:-h3#
/J]$2'J1sl0-qGC"TAB("Uu%R%f6D-"9/H$!WN/k!V$?`!9aO]"9/N("9&<$!<!$"!LEe<!.k3&!.k4,
!<3/u!!`T+!WrZ4%3G<Oq$d')q$Z3_rrN*$#6Y59#71J8"uHSo%hK<p+XS`u4[V\9=(#]^I"R0X[CjE#
cHsq\bg=bcd*L"Vb1,.r_kiGo8hV7p$j6_1!<30$#6+u-$2";s!nRF(!.k4F!<33%%f[4B%f65n'+kii
)'(1[:hc6*bgOtgeBuRbb0A;\c-+;Sc-FVZQBR5[H#RJ0:J=2@2_Z^/)]BM-&J#9Y#R:S="p>&2!WiB'
jT,,b!"8#t"VVRX#m:M#!!30%#5\B##2oRX$Mar#!<rW/"9er/!;?IE!<WK1%M'3j*?umY/i,IO7Sm/i
>[_GkJVAo8I=R!+LP15/?"S>6J71eq#5S?"#QFu-"8;fo"8r8Q!.k3&!:U!g!Vl`q!WNN,&GQ5['/X!;
IslZtJ:)NaH@^`sH[C0kJUr>fBk(=F91;0%0J"Rq*#TS(%LrgP"pG)/!<N)urs&K,rri?(q#U9uqZm-+
f`:sOq#Cm*!<<*#!<WE-!<<-%!X/9#q#^'gnGr4crs&K.r;lis-34,I!<WK0"V_^h*?ljY.PES94@2_;
;D0jc5!h_*6p!Lm4?>J]#W)M]!<X5I&d/+5":526!<N&trrN-$rr`9,rsSQ$qZF/)JcM;@%KQS5"9er3
"98E'!XK&6rWNB/#Rh(>!!!og(EF2(1,(:0/1r_92)I3M4$,Sf>$"Wr7R&so.OZYg*uYn/%LrjR"p=u0
!W2rt!WNH*#QG#&"n;TK"9/E%!<*'%!s&FV!.k3&!.k3&!:Kpf"Si$$!sAu>/opcWq47>Vq4RP]q6Bau
,d"2OYHY:;Zb=)e^r"%/`lcKKcHt"heC)akcd'h\c-XhbdF'Gke'lOfe_/U'b/MZNc-",H_SDC];D/h!
&J5K_%1N[Q%1r[E!WiB'r<]Y-JcL`0rt#,5qZ-Qprs8E#(_@&g',`Q*CP%kYbh1Lj_op<OccsSN`6eA,
+3VjOc-FY^d*^4dcHOJRai)-8_SX.)^U1ASZE^X;Y5,<tV>7%bSFE$ERg"Rt9,S'Am/R4h!<<3"!!*Hu
q*+U?q+1<Lq)eCBq+2Mq8P)TN:Jake<E<7-?=72VCM[p0G'\IXFE;F+Df0B-EH6+!FT-FrIu',CJokgU
H$ORRD/!Th73`!%!<30$#lbA2!Q4ti!.k4M!<39'&-!:B%K?P1!<*-'#R1D,!"p(u-9Y[gQBQuEJVAo9
K78&hF8BkuCMRd)EH?5DG'%eDD/3g!?sm>J>[(B6;c-Fh9h\/Pq+g`Fq)nI<q*+=4!a/AKquHZrq#Cp+
!<<*$!X/`/"9AN*!sUj_&c!(8(\njB*;LoS#QG,0$MFHK!!39,"UGD?#6Y,/!!<9(!<E9(!\#WR1GUI(
+!W$R*ZGn0'i$_,!!`E+r<*E/!sAWX0-MJH$iL2+!<3/u!VZZI!.k3&!;QWp'`S^D#Pe?C!s9G['c.;f
!!!'&"U,,2"r@@R.6U<q4Z,De5X7In2`C:.!s&H)!V-3q$k!FM#mgkCq$Hj<q&fGG!#"N."@b["!!*!!
r<9)!JcLB&JcLB&b5hPFq>^^&#mUhG9YgJJq9A`Zq9\rdq98Z\!m]*;rm1u!dE^(bdF-LneGdc*cHXVX
bfe2ScHstfeBQ7`cMc'!dEftR]X4iBNJ2Oh<(&\G3;sU))'0h:'bV5u)&Ekm$NgJ4!W`?#$(V'J!1j2j
&,uh-!<3?%!!NK-$O[di'-.r1*&o]+/iQO:G)2?VYI_Wre,7Ynd1=gZe^MmkcHXY\cdC4ke^aZJ"Ob]E
d*M[<rm1Ykq98Z_q9\*E#JI9D$j6\5$N:%r!!<6&!!W<$!@F<3JbaonJbb&rIee$[HOkCIH[C0hIXZ3T
EccJLG^B@/&8uH(Ci!j%D/aN;G'Ih>DJoDk"b1l?C0spC91:-L'B0#l"9/Z,%Jp13!.k35!"K2;%hB9c
%1NCA!!!0+#6YA?#m18#!!s&Q/3$4(BQ\rer-&']%tB"TG]\"HE,fr?G'J=\IK"I"G'7tLF+AdiIXQWk
Hhhg[I//'HJH;$g!&a]T!"8`+q#Cp+!<<*$!X/`/#64`+!ulge3r(f33r(r762<V<+VZ%A+X&$R,9m0h
!<WH.#6b21!<<0"!!`T-!sA`3"pb&+rW!0T.OQ>X&e5<J!!<WC&.ngE"pP,1"9o#4rW)p"s"FBqrsSc-
r;cj"qZ6Em`;kJiMu`klrt#,7r;ccr+Thfb)AX(u%Kcb7!sSr8#7(SH%L`aV"TSN,%N6ZG2*F>&!!NH.
"9\c,r;Zs$!<NE/rWEB+"9AQ(!W=8C,6&h^*r/5"60LB+3Wj\B/-PqQ!"/Z.l2UenXT3qQJcLB&JcP<@
!!holrri?'qu?p&"9oAG7^;L1n]gmOq9AWYrlkkqbeq<7_8*h"^;Rq,(r<u#]=P5KV4<a,K7JGtEFr?J
6pMn8'*n11!!Dclrso&7])[E_JcPHDrrN-$rrr9$!=8u!!&"BT"9\o5$k3UR&JQiR4@rL\C2S$6I"[QI
StW0cY-G=B\[oMh^V@S"_84=<bfob)q9&NTqU"HQ"jb&'*<l`D!<3,r!;up!!!`B%!??jiK)'ufI//Ej
M>)`0LP:D7JqB5N.$B^RNfB$`P`q5iN/<=>HZX"1=&D^g8O56b,9.I>)%m8\!<WE4$OQe<!so8@#5nSt
!rrN%!<3-!#6+r."o//o!T3s0!.k4?!<3?)"SVor"oA9+!<E6'"9\l3#S-A),Rb5$+=]945sn+9<F0<U
Ed2kWJ:iZ9NKB6bOctunP_"F<KS9&Qq1AKps+0-\!i_MRr;c`rq#Cp+!<<*%!sSr2"T\T+";5MG1ANZp
0DR*n0)%^d5sdk'5X9C4F)l8>Df9`?F)c,8ChmNg>>n9e5s@In1b0af&eQ</(D$oZ#mh"Kr!NN7$2Oi&
#7ChF"9]#;&.fKg%1W17rs&?'r;j)%JcM5>rtPJQrttb?q#LErrs8W9rtPVS)BBst!<3)u![n0S!rrK1
&/cT?0/GCD4@;_<='Ag7?=@DYC27a,DfBZ8E,n3-5X.R.6MW/-.cE,bJTisOrW30&#RCS6"fVJ("U,#2
r;m**"U"o/rW2<bJcLB&JcO'rrrN*#r<!$&_#OKP#O_Zm"TJQ%!!`W,"9]AI*`MT>q.9A0q-!Moq+hW"
:esh\9M7u1/1W.r,9e6J(`</er=oJM()If$'E/UH'GM8`iW/ugrs5S(JcLT,rrN-$rrr9$"Tni,!rrDs
!"oM@"U"u2"9\o6#m^nI&JGci&cN:F&J6!%)&<qc',MAu()If*)B0hC+s\K_-n.\X8kViP:/:Ubq-<`(
k[aO##=M'+%L*=A!rDut!r2ip!<<B%!!"CK!;-<s"U"u2!sJl7r<3T6"pbJ8!<`Z7#R1D7quZs($2X`&
!rW?'#QFu'!;QZ@!.k3'!!!9+#Qt;)!<36$!"T29#mge@$47%B"pP58"U)L=q$$9gnGiV+)$U!>!<EB&
!Vl^+!<E0#!s8`3#Qb#-!sAWDd/`tF%g)n:"U52;#QOi*!sAc3#6"l&"p5#5"pau.#R1YD$4."G$4H_<
!=K>8"o\c/#6kJ3#QG/2"TJf.&H<FD%Jp/*#5\Q%!Rh%#!.k4D!<3c5*<-lU#5nN6!<E0#"U5>B&.o`r
)]B\9"9SN%rrN-$rW<3)!s&<(rWEB."Tnl2#5n`(#5nf+!t554!<<*+#m^eA"pG.h!9aCj$P!.>!WW<*
#RCS;VZ;;KJcLB&JcNsors&K)r;[',!!EE;%MKQP!r2lm!;Q]d!;?Qs!WiE%!!a,K&J#?]%1W+C$5!gY
$j[(@":#,5qu@$2$OI+E#Qt52!rN$,!!WQ.!s/N)"TSN'"8r6"#6+c%!<3-#$i^a4!.k3@!<33%%f[4B
')r==!riE#!sJf1$O6qC!so8C&GZ;+!WE*!"TJ]'!!r`1!WiH+"pbSFoa:a.rXJf+!s&B'!r2il"o/5q
!U0Xh*$?"0$4Qh4rW)s#q#L?o!!p@?!!2-\!W`9%p&G9s!!<<.#71;5qZ$^""p"o,$2t&,!<3)u"7ZBk
!W)u3!.k3&!;$6t"pP57"9\f/"9JB"r;d!&"9J\'!;ccp!Vl^+!Wi?%!s8`3#m(,."U"u4q$6^"q#pKu
nI#'t":5>>#71;5!X&Z1oE>-n"9JZ,!<N)urW)m!!s/Q*!VcZo!W)j#!<NB(!Wr6!rrW3-rsA]1rri?,
r<E9)rrKk7JcL`0rs/Q)rri9(rs&KGs"jWSqZ-Zuqu[-)$k*LO"pXr)'*/+8!X/`0!s/Q+!rr<%!<N9&
!;-Hm"T/H*#6tS2#5JT$"o/Al#PeT7"U"u/!!33-#R1J5!!*+g!.k3&!.k3&!8RYT#6+c%!!NW8%M'Bi
nGr@cf`:mYrso#;r!iT1rs/Q,rrW)u#QYSO%L`UJ!sA?!#6Y/7#mLP6!Vl`q#6+c%!<3-#$i^aX!.k3&
!;?I'"9]2E',(uk$46h9"9\i+!XJl2#RUeA#n%1@$2FQ+!<<*$#n%(Eq#LErrr`3(nI+jenH/OekPtf&
((Uo["p4W$rr`&sr;jA-jT#;`!r2ir!WN9#"UP//!<N9%!WiB'rW<?/$Od"8!<N-$nGrRiqZGaVJcLB&
ci=Rb$4$e<"9Sc0!<<*$!WW6!!QP2n!!!3#!Vl^+!Wi?%!s8`3!WiB&"9\r5nHAXlq#p3pnHSLdr<*'$
rrMoq#6Fr/"9S]+!Vuct!!*,o!!33)#Q"N$!riW-$3(81"TJ`*#6+i+!Nc?R!1j2j#QFi)"T8N(#6,hG
1]7=Q!<`B(!WrN)"TAK.&.]0W"pP,2q>^^$"U+u1!Wr<#rrN'"nH8:cnHIkS$3g\;"9JW/!sf/:"9ni+
!<IrUJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&b5d+oJcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNsoJcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&b5d+oJcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNsoJcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&b5d+oJcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNsoJcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&b5d+oJcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcOU,J,~>

%%EndBinary
grestore
np
.92929 .879301 .889677 .799283 cmyk
%ADOBeginSubsetFont: QAAAAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/QAAAAA+TimesNewRomanPSMT 11 GetGlyphDirectory
81 <001C60D8A8C9B7A73DB913C38909CDA29FD53BC2807766C389AFB9ED86F7
BC81642DEC755C464ECEF36210D9B2C516FEA8C1248DF87B00C42E8B7B13BCCD
9D4DADECDD469C646397E88CF560CD28B02CAE7D1B9203699A1DE9CF796CD494
DF60582CAFD70B7F17C1569B79CFC1B11937F06CBBF98FB3F8ABA83215B28002
6130687B8B88299FC622B1B9C743E6B4E2D3E657B3D5566E1938323637D7929F
2E277006B7F4C91822AAA6911E494E2AD0998CB1FC1434E1920012738BB988F6
A0027198438FE663C2EACF82CEB86F7C727594> |
82 <001C60D8A8C9B7A73DB903ADC070A7C49752E736186D1727D7954B8F3DD4
416250EFB2715F7FEA4B4F24611BB7B770A0989FFD12258A4EC0D90DD9998BDA
F996A44DE027AE6C486FF30337F30EB574748A139900482713C8EF6F8455DA43
6702294DB22515A99C4ACC57A269598D687C25D5F66128E3441FE6E0D99B55B6
8D9C19E720D771564C6692898D127FC55C985D08C7E6B95F874FD094> |
80 <001C60D8A8C9B6FF86F5D75501F5946D14C10E01941D6F8F408CE1116793
2D24264D7EFCAC2AE86125FDD757A8758D869BC4213413CCB2A6A255440BA181
6E9DC45844CC319542821B45F7B81EE7391A0EDD08008613940B7EF538F41747
A2556BE4D609FA0E86A3720064373B35B3C09F29E00670FDA88D75DD91439C68
FD574D15688B76675600DF49F10BE44872E462D2FA9EDC453EEFA6E997D8F249
107C6F71C5B180EF91CFB08123DB5F12D5248BB769BCDBF86D09B3C1EE1D61D1
8CE6632A82186FF826CE8FF5C9F24094455D2446DAB1258D7CEF6AB64018AE95
5617323D2765A0C9FC9EE9EFC157214A4EF1A088A6CBE09BD12BF0618C85527D
987ABAA0F84BBDB3F467CD6D1AFC5F01D6CD6E91196626F968CD9EC222C872FA
FEC679ED97966B06F7D45253DA82AACAAC774A43132A3F4B4FB40FD07B5AFDAE
82B335C3B8E42DF7C6FCB1E78E5819FAE1E5B06EBADF2F71F0A59372AEE76B51
7996> |
79 <001C60D8A8C9B854D0F40B290C0C99C039EA88FDD293C1FEAB15D2F6B8C4
304B80428A9C9B5571B0EE47CC29A6D67DEE51ABBBE57F6DDF0C02037EE8B682
8D244FB880634A92D947174D08130E6E2CF978B5067AA82A4CABC55E600FCE55
27D6441CE02F5A28D63A618F> |
3 <001C60D8A8C9B8707C25> |
90 <001C60D8A8C9B6079F04262E67C9FB6DFF2B2A2909EEE6C74AA460646E64
18023C6B7542892CB61B617E90DA8C58C94D261B2066526778FA77F05506A363
FE5266E7C038D05568B67F867A9FF97988CC575C0A7C1F4DE18568CA203BA523
917E8148BF72D6E4FEA4245E4F8E144E9C4F6DDF7EC6DAC323FEA1568E1A6C8D
8526507DC2E91B066C274F65DD58F049FFA3E606BF021DDA3B6174F51DB721A6
C7E1197FF1898AE92ADB1C1DD84FD7DEC1> |
73 <001C60D8A8C9B81F2C3A6EB915F5DDF05E4CD39F13547A7EF54F9D79FF32
092BEC553783B472AF53E99B3070692992C4C512F2D79447B5EC673AA5FA8274
BFE5BA294793E06A2CD85C961166E35F08CE852DFFE5F2678D2E0B1687083D40
FC628A3BE0EDFC936C866DE25768CCC0F39E7FAD6F5686BB7C64B79625F56C55
73F9A5214AA079CAA28A8468CCF29829FD2A747DD586D41C21A37BF93A8AC8FD
D941D5FFB6450DF53658C2420EB0E5E88807E727AED5F7> |
88 <001C60D8A8C9B7A73DB9860E0681DA8AEA1E5FBC1C72A452614FEB33CC58
A199CCF544A550BDEE35652D618DE4A02AA9CF0753ADA232102DC8DC25CB9581
52D1B74BC447B68C074C25C2126470565A20B42A419CDD0C7A1DA63C6A764D55
5B867A9BE961ADBD0AF5B2007F47FCC9435F8B51D3F3A5D83941DD57A0C4D32E
169A6BACC26F8AD3C9372F1114911D1D3F3FB2725FADBF9F529AA2CFB178B79F
97520325221F3417C7781EB09765> |
86 <001C60D8A8C9B7361F027554B74948DF9D509740193A97E4C5A946CCDAC2
2ACE16A97A38CAF70766C30631C22477718670FA129F481BA880FC6C2A8C233A
039A7A46ACD6F3CA0422B1CD13AB9E5980A98B78F274FD5FB0A519013427E3DF
40BD973F22C9B236BE3D27B0A78749138244A4ED344575D4F7F677439F8C2359
FAAB210EA03D2DAABF38A6B5B4F0819D6E85CC68A9859B12239E01058FD0C7C5
93B22AC00DE1C2A90508610457C5DFEA41C78C4C677B338B4C0ED41B0474AF50
9B93D8B3403DD443273DAE4F97B7CDCA81379AB0933639> |
71 <001C60D8A8C9B7A73DB9CAB5EAE520FF5085D357A7F1B1CBAAAB9D3C3D20
3065B58561B55699E1F852D974E24DCDB3FAC1151DF1DB63800C3FA779DDD332
9A86B4E9458DA578ECA7DC82AB1CB5558FB398EDD8AF237A44BB61AD8FF07FB8
57EAFB03E3B7223E134D0A703B89A6CB54355CD1F1518C86E0EAFDD151579F5C
CB01DCDB1BD56096AB78D2E9ADD609F7B156D422E9074A62B38BF35F82A0AAD1
04E0C2CB94DA5F3F39F8DB246ADB5F008F682AF80FAED0C691E7A61887936278
3A36815EA1CE5876FAC4F83CDFE1BD4A> |
83 <001C60D8A8C9B7A73DDE03BEEA75B31F61E78B8C94AAF630ACAE1A607BD4
0EB48302A40F17E763F71E8B5595B8EEEBB33C0827EEA0DE5370DD4C7A092440
48D0DA814D6E79BAC2B8E456D2F119496FF35E5A13F4B8F71ECD895B10E20FBA
C666023D0941B5A0FF139CBD18745BC2892DD91EE541EAD2B54AF0839C3327F7
5904A81A3805CFC7AF83735A7079B305271753A14327F3CB693ACCFE5C9D6A3B
8431B357819DFFAD81BD2A60573E4CA4C48EC0A5E07291768D829E6A70067C07
6E94545FD4D8E2BB7431617263A47DB04F0B8630D6AB06FF2DD1B1F383A59D02
DF1C7730E7CC0F462D79552DFA> |
!
end
end end
%ADOEndSubsetFont
DUZMCM+TimesNewRomanPSMT [32.05 0 0 -32.05 0 0 ]msf
456.516 80.715 mo
(\000Q)sh
472.516 80.715 mo
(\000R)sh
488.516 80.715 mo
(\000U)sh
499.166 80.715 mo
(\000P)sh
524.066 80.715 mo
(\000D)sh
538.266 80.715 mo
(\000O)sh
547.166 80.715 mo
(\000\003)sh
555.166 80.715 mo
(\000Q)sh
571.166 80.715 mo
(\000H)sh
585.366 80.715 mo
(\000W)sh
594.266 80.715 mo
(\000Z)sh
617.366 80.715 mo
(\000R)sh
633.366 80.715 mo
(\000U)sh
644.016 80.715 mo
(\000N)sh
660.016 80.715 mo
(\000\003)sh
668.016 80.715 mo
(\000I)sh
678.666 80.715 mo
(\000O)sh
687.566 80.715 mo
(\000R)sh
703.566 80.715 mo
(\000Z)sh
296.872 117.225 mo
(\000D)sh
311.072 117.225 mo
(\000Q)sh
327.072 117.225 mo
(\000R)sh
343.072 117.225 mo
(\000P)sh
367.972 117.225 mo
(\000D)sh
382.172 117.225 mo
(\000O)sh
391.072 117.225 mo
(\000R)sh
407.072 117.225 mo
(\000X)sh
423.072 117.225 mo
(\000V)sh
435.522 117.225 mo
(\000\003)sh
296.872 155.625 mo
(\000G)sh
312.872 155.625 mo
(\000D)sh
327.072 155.625 mo
(\000W)sh
335.972 155.625 mo
(\000D)sh
350.172 155.625 mo
(\000\003)sh
358.172 155.625 mo
(\000S)sh
374.172 155.625 mo
(\000D)sh
388.372 155.625 mo
(\000F)sh
402.572 155.625 mo
(\000N)sh
418.572 155.625 mo
(\000H)sh
432.772 155.625 mo
(\000W)sh
692.334 186.938 mo
772.734 235.298 li
776.094 229.538 li
780.654 247.778 li
762.414 252.338 li
765.774 246.698 li
685.494 198.338 li
692.334 186.938 li
.644953 .27805 0 0 cmyk
ef
772.934 234.821 mo
772.248 234.992 li
776.295 228.257 li
781.259 248.165 li
761.351 253.128 li
765.398 246.393 li
765.569 247.079 li
684.777 198.534 li
692.142 186.276 li
772.934 234.821 li
cp
692.056 187.391 mo
692.742 187.22 li
685.892 198.621 li
685.72 197.935 li
766.513 246.479 li
762.83 252.608 li
762.28 251.866 li
780.532 247.315 li
780.167 247.921 li
775.617 229.67 li
776.531 229.807 li
772.848 235.936 li
692.056 187.391 li
.800381 .471931 .0461128 0 cmyk
f
.92929 .879301 .889677 .799283 cmyk
%ADOBeginSubsetFont: QAAAAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/QAAAAA+TimesNewRomanPSMT 2 GetGlyphDirectory
75 <001C60D8A8C9B7A73DB904DA2C7A38531EB5E07DB80E9375E00037710435
E027FD1F7B471BB2C47AEA703B8CB5C9C005CAA0B77F572194961F7C30413194
A0134D3FF9BA81F629AD195D96BD3C1285904670FEB33C334E260F33EE9AB1A2
D9C0C66E38CE4D3CA583879DAF16CE988CC2A14E39FED6599F4B0F3F8F061B58
5E2410824AE8C179E66BD3AD9F6E34CD8CBF79298E3E4553D0E9DCA292805DED
8E36C58209B17E38B2DFAFEB881CA5FB9EC7A76A0CF0C4BFE83CE749EBD15B15
E97FBEA4E90F2186A54E69C28F4083AB76DBE019E4C57B27760FED872C448379
6F735A795EACD82F245D81FB43B5> |
76 <001C60D8A8C9B854D0F4318DEB2BF4A8C14C2FAB601E0ED2FF31B9BA2C4F
4D9D824A65F9E753CDA6D59F3AE6B969EC176D4AA1F064BFADF6F4B6A5454B78
F98C4B41AC403B87C0044C2A2776BF32D7D2C5370D6DB44827DB4719A169BBE3
65B0C0BED49A30732BB5E35B7101E488713F0203C9161D1F92C48C80A6400850
90E2C5D79817DC05EB1FC5E4D24EE71772E51241DF9FD4D574115CFC53427DCB
CB8CA3E9F85837FAC6> |
!
end
end end
%ADOEndSubsetFont
DUZMCM+TimesNewRomanPSMT [32.05 0 0 -32.05 0 0 ]msf
491.88 366.064 mo
(\000Q)sh
507.88 366.064 mo
(\000R)sh
523.88 366.064 mo
(\000U)sh
534.53 366.064 mo
(\000P)sh
559.43 366.064 mo
(\000D)sh
573.63 366.064 mo
(\000O)sh
582.53 366.064 mo
(\000\003)sh
590.53 366.064 mo
(\000Q)sh
606.53 366.064 mo
(\000H)sh
620.73 366.064 mo
(\000W)sh
629.63 366.064 mo
(\000Z)sh
652.73 366.064 mo
(\000R)sh
668.73 366.064 mo
(\000U)sh
679.38 366.064 mo
(\000N)sh
502.865 564.003 mo
(\000W)sh
511.765 564.003 mo
(\000K)sh
527.765 564.003 mo
(\000L)sh
536.665 564.003 mo
(\000Q)sh
552.665 564.003 mo
(\000\003)sh
560.665 564.003 mo
(\000V)sh
573.115 564.003 mo
(\000S)sh
589.115 564.003 mo
(\000R)sh
605.115 564.003 mo
(\000W)sh
562.597 533.937 mo
558.548 531.972 li
554.5 530.008 li
554.62 540.07 li
562.597 533.937 li
cp
589.731 464.256 mo
556.217 533.342 li
558.916 534.652 li
592.43 465.565 li
589.731 464.256 li
.644953 .27805 0 0 cmyk
f
.92929 .879301 .889677 .799283 cmyk
%ADOBeginSubsetFont: QAAAAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/QAAAAA+TimesNewRomanPSMT 4 GetGlyphDirectory
91 <001C60D8A8C9B7A73DD670F5272DD145294083C4293196A1DBA349EF195D
AADD76F8FA5D95CD31B7A1C2B32491F1D3BDEAF32234D0995EB67A2BEF06777B
5B8AB01E1FC457D70FEE563CF2C0C851F3CC8B137B00E8CC0DDAE3A128D9A231
9F3FF89B241236A311487E7B00ABDB18C5C11783A73226CB9112660CA2598816
9831DBD8D37F0570522652B666847FB24934B522403DA00EF77D9BF6494155BE
ACD6C4576905B10BBFDD62A70CAEE193F073806BE591E56E5DC8424D64A808D7
528EBE8928C7E8D537D6DCC6918CF06863B4A936B7CA4331A2F9> |
74 <001C60D8A8C9B7A73DAC44F2C448ECAF253E44055AA4AFC4D4E618BBF7F6
0847F4AD57852D125F52503D138EEBB5C35DB7E6FF089D85EF3D59177D6853B7
FF4DCA48A2C6450DAF6AE7485D918680B6246955433B7E96C0D52B86F6985D93
AEA8FD99F7CE5A6EDF9F82F3DCD54C24AC7F5725E8D752728B16161496E9D02E
A707BCC03E7CE1BDA2E3632B4A11707F59DF2FD8556EC51A6594DBA10EC63EB7
A8585255CC0C8C8B32CD6316A41829AE725CE606F4A4FD4DA668556D79F4AC25
BF9E697A5DB9F54B573E1EAA6D791100EAD10708C7E706E8CBDD596589510D4E
A45E3CA12E8144CF2A4E025D5293F77BF25BA77276DF7C97999133B17612ABFF
D70E77479B9C8ABBB3A51D3A6F6F66CA99610B1A23618D13E1A07B26D29ACFC8
191E5B2829F3C990A5C474E53FC8B282F11A7FFA86D56BD2349AEC811B22D300
2781921B9EDDEAA1B62C5F206266BA751F865F9A5F5AF517BC35F6F732012015
D0BB42652388A219FCF002C2C0335D2D190C0C425C4FA28367480051E56A90DD
46F1C707> |
89 <001C60D8A8C9B7A73DDA3AD4E30B5CCD7D3C12F7959C83D9C808662F1D29
403E3640D88B6D61CC1EF17C120CDCE65E70C4FE9E153F8E52BB6A45EF1A33FF
33B350E779BE70BFD66B1893DAD63FDF011F2039FF0D075853D9D0E3D26BA0ED
AEDA247A4C2489AC431F6D923096DA608667B0FA6E60F963DA8A46029578956D
98258ABD433E9E> |
69 <001C60D8A8C9B7A73DB90B311171EB67EB8746E2EC8FC994CCA7A632F7C7
E8F4A5D28D725796F2BC8526696060F460C892CC5686CD97F757C6EFB11E42DD
9AF110BE11F49DAEFA324F62E3046D4E2410C0923EDB87332B0381414594D399
924398EF0A71772EF0EFEA72F5940C288418E4FCC7A2DE1E6A1AEA513FBDA0D6
603C38C9676D3489A418D7163D5E50FB679144E02901D98844D885CA3AAF379A
83F23AED1F56FC130F21> |
!
end
end end
%ADOEndSubsetFont
DUZMCM+TimesNewRomanPSMT [32.05 0 0 -32.05 0 0 ]msf
311.311 423.011 mo
(\000H)sh
325.511 423.011 mo
(\000[)sh
341.511 423.011 mo
(\000S)sh
357.511 423.011 mo
(\000O)sh
366.411 423.011 mo
(\000R)sh
382.411 423.011 mo
(\000L)sh
391.311 423.011 mo
(\000W)sh
400.211 423.011 mo
(\000L)sh
409.111 423.011 mo
(\000Q)sh
425.111 423.011 mo
(\000J)sh
441.111 423.011 mo
(\000\003)sh
311.311 461.411 mo
(\000Y)sh
327.311 461.411 mo
(\000X)sh
343.311 461.411 mo
(\000O)sh
352.211 461.411 mo
(\000Q)sh
368.211 461.411 mo
(\000H)sh
382.411 461.411 mo
(\000U)sh
393.061 461.411 mo
(\000D)sh
407.261 461.411 mo
(\000E)sh
423.261 461.411 mo
(\000L)sh
432.161 461.411 mo
(\000O)sh
441.061 461.411 mo
(\000L)sh
449.961 461.411 mo
(\000W)sh
458.861 461.411 mo
(\000L)sh
467.761 461.411 mo
(\000H)sh
481.961 461.411 mo
(\000V)sh
289.614 485.738 mo
504.654 485.738 li
504.654 479.138 li
517.974 492.338 li
504.654 505.658 li
504.654 499.058 li
289.614 499.058 li
289.614 485.738 li
.644953 .27805 0 0 cmyk
ef
504.683 485.27 mo
504.183 485.77 li
504.183 477.938 li
518.641 492.396 li
504.183 506.853 li
504.183 499.021 li
504.683 499.521 li
289.172 499.521 li
289.172 485.27 li
504.683 485.27 li
cp
289.672 486.27 mo
290.172 485.77 li
290.172 499.021 li
289.672 498.521 li
505.183 498.521 li
505.183 505.646 li
504.33 505.293 li
517.581 492.042 li
517.581 492.749 li
504.33 479.498 li
505.183 479.145 li
505.183 486.27 li
289.672 486.27 li
.800381 .471931 .0461128 0 cmyk
f
698.574 405.938 mo
764.694 354.218 li
760.614 348.938 li
779.334 351.218 li
777.054 369.938 li
772.974 364.658 li
706.734 416.498 li
698.574 405.938 li
.644953 .27805 0 0 cmyk
ef
764.446 353.825 mo
764.36 354.527 li
759.522 348.335 li
779.886 350.836 li
777.386 371.2 li
772.548 365.008 li
773.25 365.094 li
706.62 417.151 li
697.816 405.882 li
764.446 353.825 li
cp
698.826 406.362 mo
698.912 405.66 li
707.101 416.141 li
706.399 416.055 li
773.028 363.998 li
777.431 369.633 li
776.54 369.88 li
778.833 351.21 li
779.268 351.767 li
760.598 349.475 li
761.053 348.671 li
765.455 354.305 li
698.826 406.362 li
.800381 .471931 .0461128 0 cmyk
f
777.894 294.458 mo
777.888 239.073 822.331 194.151 877.155 194.151 cv
931.978 194.151 976.422 239.073 976.422 294.488 cv
976.422 349.902 931.978 394.825 877.155 394.825 cv
822.331 394.825 777.888 349.902 777.894 294.458 cv
.152132 .0429694 .00967422 0 cmyk
ef
777.396 293.185 mo
777.42 291.885 li
777.461 290.59 li
777.517 289.299 li
777.59 288.013 li
777.678 286.73 li
777.783 285.452 li
777.903 284.179 li
778.038 282.91 li
778.189 281.646 li
778.355 280.387 li
778.537 279.133 li
778.734 277.883 li
778.946 276.639 li
779.172 275.401 li
779.414 274.167 li
779.671 272.939 li
779.942 271.717 li
780.228 270.5 li
780.528 269.289 li
780.843 268.083 li
781.172 266.884 li
781.515 265.691 li
781.872 264.504 li
782.244 263.323 li
782.629 262.148 li
783.028 260.98 li
783.441 259.818 li
783.867 258.663 li
784.307 257.515 li
784.761 256.374 li
785.227 255.239 li
785.707 254.112 li
786.2 252.991 li
786.706 251.878 li
787.225 250.772 li
787.757 249.674 li
788.301 248.583 li
788.858 247.5 li
789.428 246.425 li
790.01 245.357 li
790.605 244.297 li
791.211 243.245 li
791.83 242.202 li
792.461 241.166 li
793.104 240.139 li
793.759 239.121 li
794.425 238.111 li
795.103 237.109 li
795.793 236.116 li
796.494 235.132 li
797.206 234.157 li
797.93 233.191 li
798.665 232.234 li
799.411 231.286 li
800.168 230.348 li
800.936 229.419 li
801.714 228.499 li
802.504 227.589 li
803.304 226.689 li
804.114 225.799 li
804.935 224.918 li
805.766 224.048 li
806.607 223.187 li
807.458 222.337 li
808.319 221.497 li
809.19 220.667 li
810.071 219.848 li
810.962 219.04 li
811.862 218.242 li
812.772 217.455 li
813.691 216.679 li
814.62 215.914 li
815.557 215.16 li
816.504 214.417 li
817.46 213.685 li
818.425 212.965 li
819.398 212.257 li
820.381 211.559 li
821.372 210.874 li
822.371 210.2 li
823.379 209.538 li
824.395 208.889 li
825.419 208.251 li
826.452 207.625 li
827.492 207.012 li
828.541 206.411 li
829.597 205.823 li
830.661 205.247 li
831.733 204.684 li
832.813 204.133 li
833.899 203.596 li
834.993 203.071 li
836.095 202.56 li
837.203 202.061 li
838.319 201.576 li
839.441 201.104 li
840.571 200.646 li
841.707 200.201 li
842.85 199.77 li
843.999 199.353 li
845.155 198.95 li
846.317 198.56 li
847.486 198.185 li
848.66 197.824 li
849.841 197.477 li
851.028 197.144 li
852.22 196.826 li
853.419 196.522 li
854.623 196.233 li
855.832 195.959 li
857.048 195.7 li
858.268 195.455 li
859.494 195.226 li
860.725 195.012 li
861.961 194.813 li
863.202 194.629 li
864.448 194.461 li
865.699 194.309 li
866.954 194.172 li
868.214 194.05 li
869.479 193.945 li
870.748 193.856 li
872.021 193.782 li
873.298 193.725 li
874.58 193.684 li
875.865 193.659 li
877.155 193.651 li
878.444 193.659 li
879.73 193.684 li
881.011 193.725 li
882.288 193.782 li
883.562 193.856 li
884.831 193.945 li
886.095 194.05 li
887.355 194.172 li
888.611 194.309 li
889.861 194.461 li
891.107 194.629 li
892.348 194.813 li
893.584 195.012 li
894.815 195.226 li
896.041 195.455 li
897.262 195.7 li
898.477 195.959 li
899.686 196.233 li
900.89 196.522 li
902.089 196.826 li
903.281 197.144 li
904.468 197.477 li
905.649 197.824 li
906.824 198.185 li
907.992 198.56 li
909.154 198.95 li
910.31 199.353 li
911.459 199.77 li
912.602 200.201 li
913.738 200.646 li
914.868 201.104 li
915.99 201.576 li
917.106 202.061 li
918.214 202.56 li
919.316 203.071 li
920.41 203.596 li
921.497 204.133 li
922.576 204.684 li
923.648 205.247 li
924.712 205.823 li
925.768 206.411 li
926.817 207.012 li
927.857 207.625 li
928.89 208.251 li
929.914 208.889 li
930.93 209.538 li
931.938 210.2 li
932.938 210.874 li
933.929 211.559 li
934.911 212.257 li
935.884 212.965 li
936.849 213.685 li
937.805 214.417 li
938.752 215.16 li
939.689 215.914 li
940.618 216.679 li
941.537 217.455 li
942.447 218.242 li
943.347 219.04 li
944.238 219.848 li
945.119 220.667 li
945.99 221.497 li
946.851 222.337 li
947.702 223.187 li
948.544 224.048 li
949.375 224.918 li
950.195 225.799 li
951.006 226.689 li
951.806 227.589 li
952.595 228.499 li
953.373 229.419 li
954.141 230.348 li
954.898 231.286 li
955.644 232.234 li
956.379 233.191 li
957.103 234.157 li
957.815 235.132 li
958.516 236.116 li
959.206 237.109 li
959.884 238.111 li
960.551 239.121 li
961.205 240.139 li
961.848 241.166 li
962.479 242.202 li
963.098 243.245 li
963.705 244.297 li
964.299 245.357 li
964.881 246.425 li
965.451 247.5 li
966.008 248.583 li
966.552 249.674 li
967.084 250.772 li
967.603 251.878 li
968.109 252.991 li
968.602 254.112 li
969.082 255.239 li
969.549 256.374 li
970.002 257.515 li
970.442 258.663 li
970.868 259.818 li
971.281 260.98 li
971.68 262.148 li
972.065 263.323 li
972.437 264.504 li
972.794 265.691 li
973.137 266.884 li
973.466 268.083 li
973.781 269.289 li
974.081 270.5 li
974.367 271.717 li
974.638 272.939 li
974.895 274.167 li
975.137 275.401 li
975.364 276.639 li
975.575 277.883 li
975.772 279.133 li
975.954 280.387 li
976.12 281.646 li
976.271 282.91 li
976.407 284.179 li
976.527 285.452 li
976.631 286.73 li
976.719 288.013 li
976.792 289.299 li
976.849 290.59 li
976.889 291.885 li
976.913 293.185 li
976.922 294.488 li
976.913 295.791 li
976.889 297.09 li
976.849 298.385 li
976.792 299.676 li
976.719 300.963 li
976.631 302.245 li
976.527 303.523 li
976.407 304.797 li
976.271 306.065 li
976.12 307.329 li
975.954 308.589 li
975.772 309.843 li
975.575 311.092 li
975.364 312.336 li
975.137 313.575 li
974.895 314.808 li
974.638 316.036 li
974.367 317.259 li
974.081 318.476 li
973.781 319.687 li
973.466 320.892 li
973.137 322.091 li
972.794 323.285 li
972.437 324.472 li
972.065 325.653 li
971.68 326.827 li
971.281 327.996 li
970.868 329.157 li
970.442 330.312 li
970.002 331.46 li
969.549 332.602 li
969.082 333.736 li
968.602 334.864 li
968.109 335.984 li
967.603 337.097 li
967.084 338.203 li
966.552 339.301 li
966.008 340.392 li
965.451 341.475 li
964.881 342.551 li
964.299 343.619 li
963.705 344.678 li
963.098 345.73 li
962.479 346.774 li
961.848 347.809 li
961.205 348.836 li
960.551 349.855 li
959.884 350.865 li
959.206 351.866 li
958.516 352.859 li
957.815 353.843 li
957.103 354.818 li
956.379 355.784 li
955.644 356.741 li
954.898 357.689 li
954.141 358.627 li
953.373 359.557 li
952.595 360.476 li
951.806 361.386 li
951.006 362.286 li
950.195 363.177 li
949.375 364.057 li
948.544 364.928 li
947.702 365.788 li
946.851 366.638 li
945.99 367.478 li
945.119 368.308 li
944.238 369.127 li
943.347 369.936 li
942.447 370.733 li
941.537 371.52 li
940.618 372.296 li
939.689 373.062 li
938.752 373.816 li
937.805 374.558 li
936.849 375.29 li
935.884 376.01 li
934.911 376.719 li
933.929 377.416 li
932.938 378.101 li
931.938 378.775 li
930.93 379.437 li
929.914 380.087 li
928.89 380.725 li
927.857 381.35 li
926.817 381.963 li
925.768 382.564 li
924.712 383.153 li
923.648 383.729 li
922.576 384.292 li
921.497 384.842 li
920.41 385.38 li
919.316 385.904 li
918.214 386.416 li
917.106 386.914 li
915.99 387.399 li
914.868 387.871 li
913.738 388.329 li
912.602 388.774 li
911.459 389.205 li
910.31 389.622 li
909.154 390.026 li
907.992 390.415 li
906.824 390.791 li
905.649 391.152 li
904.468 391.499 li
903.281 391.831 li
902.089 392.15 li
900.89 392.453 li
899.686 392.742 li
898.477 393.016 li
897.262 393.276 li
896.041 393.52 li
894.815 393.749 li
893.584 393.964 li
892.348 394.163 li
891.107 394.346 li
889.861 394.514 li
888.611 394.667 li
887.355 394.804 li
886.095 394.925 li
884.831 395.031 li
883.562 395.12 li
882.288 395.193 li
881.011 395.251 li
879.73 395.292 li
878.444 395.316 li
877.155 395.325 li
875.865 395.316 li
874.58 395.292 li
873.298 395.251 li
872.021 395.193 li
870.748 395.12 li
869.479 395.031 li
868.214 394.925 li
866.954 394.804 li
865.699 394.667 li
864.448 394.514 li
863.202 394.346 li
861.961 394.163 li
860.725 393.964 li
859.494 393.749 li
858.268 393.52 li
857.048 393.276 li
855.832 393.016 li
854.623 392.742 li
853.419 392.453 li
852.22 392.15 li
851.028 391.831 li
849.841 391.499 li
848.66 391.152 li
847.486 390.791 li
846.317 390.415 li
845.155 390.026 li
843.999 389.622 li
842.85 389.205 li
841.707 388.774 li
840.571 388.329 li
839.441 387.871 li
838.319 387.399 li
837.203 386.914 li
836.095 386.416 li
834.993 385.904 li
833.899 385.38 li
832.813 384.842 li
831.733 384.292 li
830.661 383.729 li
829.597 383.153 li
828.541 382.564 li
827.492 381.963 li
826.452 381.35 li
825.419 380.725 li
824.395 380.087 li
823.379 379.437 li
822.371 378.775 li
821.372 378.101 li
820.381 377.416 li
819.398 376.719 li
818.425 376.01 li
817.46 375.29 li
816.504 374.558 li
815.557 373.816 li
814.62 373.062 li
813.691 372.296 li
812.772 371.52 li
811.862 370.733 li
810.962 369.936 li
810.071 369.127 li
809.19 368.308 li
808.319 367.478 li
807.458 366.638 li
806.607 365.788 li
805.766 364.928 li
804.935 364.057 li
804.114 363.177 li
803.304 362.286 li
802.504 361.386 li
801.714 360.476 li
800.936 359.557 li
800.168 358.627 li
799.411 357.689 li
798.665 356.741 li
797.93 355.784 li
797.206 354.818 li
796.494 353.843 li
795.793 352.859 li
795.103 351.866 li
794.425 350.865 li
793.759 349.855 li
793.104 348.836 li
792.461 347.809 li
791.83 346.774 li
791.211 345.73 li
790.605 344.678 li
790.01 343.619 li
789.428 342.551 li
788.858 341.475 li
788.301 340.392 li
787.757 339.301 li
787.225 338.203 li
786.706 337.097 li
786.2 335.984 li
785.707 334.864 li
785.227 333.736 li
784.761 332.602 li
784.307 331.46 li
783.867 330.312 li
783.441 329.157 li
783.028 327.996 li
782.629 326.827 li
782.244 325.653 li
781.872 324.472 li
781.515 323.285 li
781.172 322.091 li
780.843 320.892 li
780.528 319.687 li
780.228 318.476 li
779.942 317.259 li
779.671 316.036 li
779.414 314.808 li
779.172 313.575 li
778.946 312.336 li
778.734 311.092 li
778.537 309.843 li
778.355 308.589 li
778.189 307.329 li
778.038 306.065 li
777.903 304.797 li
777.783 303.523 li
777.678 302.245 li
777.59 300.963 li
777.517 299.676 li
777.461 298.385 li
777.42 297.09 li
777.396 295.791 li
777.388 294.488 li
777.396 293.185 li
cp
778.388 294.491 mo
778.388 294.485 li
778.396 295.781 li
778.396 295.775 li
778.42 297.068 li
778.42 297.062 li
778.46 298.351 li
778.46 298.344 li
778.516 299.629 li
778.516 299.623 li
778.588 300.903 li
778.588 300.897 li
778.676 302.173 li
778.675 302.167 li
778.779 303.439 li
778.779 303.433 li
778.898 304.7 li
778.897 304.693 li
779.032 305.956 li
779.031 305.95 li
779.182 307.208 li
779.181 307.201 li
779.346 308.454 li
779.345 308.448 li
779.526 309.696 li
779.525 309.69 li
779.721 310.933 li
779.72 310.927 li
779.931 312.165 li
779.93 312.159 li
780.156 313.392 li
780.154 313.386 li
780.395 314.613 li
780.394 314.607 li
780.649 315.829 li
780.648 315.823 li
780.918 317.039 li
780.916 317.033 li
781.201 318.244 li
781.199 318.238 li
781.498 319.443 li
781.497 319.437 li
781.81 320.636 li
781.808 320.63 li
782.135 321.824 li
782.134 321.818 li
782.475 323.005 li
782.474 322.999 li
782.829 324.181 li
782.827 324.175 li
783.197 325.35 li
783.195 325.344 li
783.578 326.513 li
783.576 326.507 li
783.973 327.669 li
783.971 327.664 li
784.382 328.819 li
784.38 328.814 li
784.804 329.963 li
784.802 329.957 li
785.24 331.1 li
785.238 331.094 li
785.689 332.23 li
785.687 332.224 li
786.151 333.353 li
786.149 333.348 li
786.626 334.469 li
786.624 334.464 li
787.114 335.579 li
787.112 335.573 li
787.615 336.681 li
787.613 336.675 li
788.129 337.775 li
788.126 337.77 li
788.656 338.863 li
788.653 338.857 li
789.195 339.943 li
789.192 339.938 li
789.746 341.015 li
789.744 341.01 li
790.31 342.08 li
790.308 342.075 li
790.887 343.137 li
790.884 343.132 li
791.475 344.186 li
791.472 344.181 li
792.076 345.228 li
792.073 345.223 li
792.689 346.261 li
792.686 346.256 li
793.314 347.286 li
793.31 347.281 li
793.95 348.303 li
793.947 348.298 li
794.598 349.312 li
794.595 349.307 li
795.258 350.312 li
795.255 350.307 li
795.93 351.303 li
795.926 351.298 li
796.612 352.286 li
796.609 352.281 li
797.307 353.26 li
797.303 353.256 li
798.012 354.226 li
798.009 354.221 li
798.729 355.182 li
798.725 355.178 li
799.456 356.13 li
799.453 356.125 li
800.195 357.068 li
800.191 357.064 li
800.945 357.997 li
800.941 357.993 li
801.705 358.917 li
801.701 358.913 li
802.476 359.828 li
802.472 359.823 li
803.257 360.729 li
803.253 360.724 li
804.049 361.62 li
804.045 361.615 li
804.851 362.501 li
804.847 362.497 li
805.664 363.373 li
805.66 363.369 li
806.487 364.235 li
806.483 364.231 li
807.32 365.087 li
807.316 365.083 li
808.163 365.929 li
808.158 365.925 li
809.015 366.76 li
809.011 366.756 li
809.878 367.582 li
809.874 367.578 li
810.75 368.393 li
810.746 368.389 li
811.632 369.193 li
811.628 369.189 li
812.523 369.983 li
812.519 369.979 li
813.424 370.762 li
813.42 370.758 li
814.334 371.53 li
814.33 371.527 li
815.253 372.288 li
815.249 372.284 li
816.182 373.034 li
816.177 373.031 li
817.119 373.77 li
817.114 373.766 li
818.065 374.494 li
818.061 374.49 li
819.021 375.207 li
819.016 375.204 li
819.984 375.909 li
819.98 375.905 li
820.957 376.599 li
820.952 376.595 li
821.938 377.277 li
821.933 377.274 li
822.927 377.944 li
822.922 377.941 li
823.925 378.599 li
823.92 378.596 li
824.931 379.243 li
824.926 379.239 li
825.945 379.874 li
825.94 379.871 li
826.967 380.493 li
826.962 380.49 li
827.998 381.1 li
827.992 381.097 li
829.036 381.695 li
829.03 381.692 li
830.081 382.278 li
830.076 382.275 li
831.135 382.848 li
831.129 382.845 li
832.196 383.405 li
832.19 383.402 li
833.264 383.95 li
833.259 383.947 li
834.34 384.482 li
834.334 384.479 li
835.423 385.001 li
835.417 384.999 li
836.513 385.508 li
836.508 385.505 li
837.611 386.001 li
837.605 385.998 li
838.715 386.481 li
838.709 386.479 li
839.826 386.948 li
839.82 386.946 li
840.944 387.402 li
840.938 387.399 li
842.068 387.842 li
842.063 387.839 li
843.2 388.268 li
843.194 388.266 li
844.337 388.681 li
844.332 388.679 li
845.482 389.081 li
845.476 389.079 li
846.632 389.466 li
846.626 389.464 li
847.789 389.838 li
847.783 389.836 li
848.951 390.195 li
848.945 390.193 li
850.12 390.538 li
850.114 390.537 li
851.295 390.868 li
851.289 390.866 li
852.475 391.183 li
852.469 391.181 li
853.661 391.483 li
853.655 391.482 li
854.853 391.769 li
854.847 391.768 li
856.05 392.04 li
856.044 392.039 li
857.253 392.297 li
857.247 392.296 li
858.461 392.539 li
858.455 392.538 li
859.675 392.766 li
859.668 392.765 li
860.893 392.978 li
860.887 392.977 li
862.117 393.175 li
862.11 393.174 li
863.345 393.356 li
863.339 393.356 li
864.578 393.523 li
864.572 393.522 li
865.817 393.674 li
865.81 393.673 li
867.059 393.809 li
867.053 393.809 li
868.307 393.929 li
868.3 393.929 li
869.558 394.034 li
869.552 394.033 li
870.815 394.122 li
870.808 394.122 li
872.075 394.195 li
872.069 394.194 li
873.34 394.251 li
873.333 394.251 li
874.608 394.292 li
874.602 394.292 li
875.881 394.316 li
875.875 394.316 li
877.158 394.325 li
877.151 394.325 li
878.434 394.316 li
878.428 394.316 li
879.707 394.292 li
879.701 394.292 li
880.976 394.251 li
880.969 394.251 li
882.24 394.194 li
882.234 394.195 li
883.501 394.122 li
883.495 394.122 li
884.757 394.033 li
884.751 394.034 li
886.009 393.929 li
886.002 393.929 li
887.256 393.809 li
887.25 393.809 li
888.499 393.673 li
888.493 393.674 li
889.737 393.522 li
889.731 393.523 li
890.97 393.356 li
890.964 393.356 li
892.199 393.174 li
892.193 393.175 li
893.422 392.977 li
893.416 392.978 li
894.641 392.765 li
894.635 392.766 li
895.854 392.538 li
895.848 392.539 li
897.062 392.296 li
897.056 392.297 li
898.265 392.039 li
898.259 392.04 li
899.462 391.768 li
899.456 391.769 li
900.654 391.482 li
900.648 391.483 li
901.84 391.181 li
901.834 391.183 li
903.021 390.866 li
903.015 390.868 li
904.195 390.537 li
904.189 390.538 li
905.364 390.193 li
905.358 390.195 li
906.527 389.836 li
906.521 389.838 li
907.683 389.464 li
907.677 389.466 li
908.834 389.079 li
908.828 389.081 li
909.978 388.679 li
909.972 388.681 li
911.115 388.266 li
911.109 388.268 li
912.247 387.839 li
912.241 387.842 li
913.371 387.399 li
913.365 387.402 li
914.489 386.946 li
914.483 386.948 li
915.6 386.479 li
915.594 386.481 li
916.704 385.998 li
916.699 386.001 li
917.802 385.505 li
917.796 385.508 li
918.892 384.999 li
918.886 385.001 li
919.975 384.479 li
919.969 384.482 li
921.051 383.947 li
921.045 383.95 li
922.119 383.402 li
922.114 383.405 li
923.18 382.845 li
923.174 382.848 li
924.233 382.275 li
924.228 382.278 li
925.279 381.692 li
925.274 381.695 li
926.317 381.097 li
926.312 381.1 li
927.347 380.49 li
927.342 380.493 li
928.369 379.871 li
928.364 379.874 li
929.383 379.239 li
929.378 379.243 li
930.389 378.596 li
930.384 378.599 li
931.387 377.941 li
931.382 377.944 li
932.376 377.274 li
932.371 377.277 li
933.357 376.595 li
933.352 376.599 li
934.33 375.905 li
934.325 375.909 li
935.293 375.204 li
935.289 375.207 li
936.249 374.49 li
936.244 374.494 li
937.195 373.766 li
937.19 373.77 li
938.132 373.031 li
938.127 373.034 li
939.06 372.284 li
939.056 372.288 li
939.98 371.527 li
939.975 371.53 li
940.89 370.758 li
940.885 370.762 li
941.79 369.979 li
941.786 369.983 li
942.682 369.189 li
942.677 369.193 li
943.563 368.389 li
943.559 368.393 li
944.436 367.578 li
944.431 367.582 li
945.298 366.756 li
945.294 366.76 li
946.151 365.925 li
946.147 365.929 li
946.994 365.083 li
946.989 365.087 li
947.826 364.231 li
947.822 364.235 li
948.649 363.369 li
948.645 363.373 li
949.462 362.497 li
949.458 362.501 li
950.264 361.615 li
950.26 361.62 li
951.056 360.724 li
951.052 360.729 li
951.837 359.823 li
951.834 359.828 li
952.608 358.913 li
952.604 358.917 li
953.368 357.993 li
953.365 357.997 li
954.118 357.064 li
954.114 357.068 li
954.856 356.125 li
954.853 356.13 li
955.584 355.178 li
955.58 355.182 li
956.301 354.221 li
956.297 354.226 li
957.006 353.256 li
957.002 353.26 li
957.7 352.281 li
957.697 352.286 li
958.383 351.298 li
958.38 351.303 li
959.054 350.307 li
959.051 350.312 li
959.714 349.307 li
959.711 349.312 li
960.362 348.298 li
960.359 348.303 li
960.999 347.281 li
960.996 347.286 li
961.623 346.256 li
961.62 346.261 li
962.236 345.223 li
962.233 345.228 li
962.837 344.181 li
962.834 344.186 li
963.425 343.132 li
963.422 343.137 li
964.002 342.075 li
963.999 342.08 li
964.566 341.01 li
964.563 341.015 li
965.117 339.938 li
965.115 339.943 li
965.656 338.857 li
965.654 338.863 li
966.183 337.77 li
966.18 337.775 li
966.697 336.675 li
966.694 336.681 li
967.198 335.573 li
967.195 335.579 li
967.686 334.464 li
967.683 334.469 li
968.161 333.348 li
968.158 333.353 li
968.623 332.224 li
968.62 332.23 li
969.071 331.094 li
969.069 331.1 li
969.507 329.957 li
969.505 329.963 li
969.929 328.814 li
969.927 328.819 li
970.338 327.664 li
970.336 327.669 li
970.733 326.507 li
970.731 326.513 li
971.114 325.344 li
971.112 325.35 li
971.482 324.175 li
971.48 324.181 li
971.836 322.999 li
971.834 323.005 li
972.175 321.818 li
972.174 321.824 li
972.501 320.63 li
972.5 320.636 li
972.813 319.437 li
972.811 319.443 li
973.11 318.238 li
973.109 318.244 li
973.393 317.033 li
973.392 317.039 li
973.662 315.823 li
973.66 315.829 li
973.915 314.607 li
973.914 314.613 li
974.155 313.386 li
974.154 313.392 li
974.379 312.159 li
974.378 312.165 li
974.589 310.927 li
974.588 310.933 li
974.784 309.69 li
974.783 309.696 li
974.964 308.448 li
974.963 308.454 li
975.128 307.201 li
975.128 307.208 li
975.278 305.95 li
975.277 305.956 li
975.412 304.693 li
975.411 304.7 li
975.531 303.433 li
975.53 303.439 li
975.634 302.167 li
975.633 302.173 li
975.721 300.897 li
975.721 300.903 li
975.793 299.623 li
975.793 299.629 li
975.849 298.344 li
975.849 298.351 li
975.889 297.062 li
975.889 297.068 li
975.914 295.775 li
975.913 295.781 li
975.922 294.485 li
975.922 294.491 li
975.913 293.194 li
975.914 293.2 li
975.889 291.907 li
975.889 291.914 li
975.849 290.625 li
975.849 290.631 li
975.793 289.346 li
975.793 289.353 li
975.721 288.072 li
975.721 288.078 li
975.633 286.802 li
975.634 286.808 li
975.53 285.537 li
975.531 285.543 li
975.411 284.276 li
975.412 284.282 li
975.277 283.019 li
975.278 283.026 li
975.128 281.768 li
975.128 281.774 li
974.963 280.521 li
974.964 280.527 li
974.783 279.279 li
974.784 279.285 li
974.588 278.042 li
974.589 278.048 li
974.378 276.81 li
974.379 276.817 li
974.154 275.584 li
974.155 275.59 li
973.914 274.363 li
973.915 274.369 li
973.66 273.147 li
973.662 273.153 li
973.392 271.936 li
973.393 271.942 li
973.109 270.731 li
973.11 270.737 li
972.811 269.532 li
972.813 269.538 li
972.5 268.339 li
972.501 268.345 li
972.174 267.152 li
972.175 267.157 li
971.834 265.97 li
971.836 265.976 li
971.48 264.795 li
971.482 264.801 li
971.112 263.626 li
971.114 263.631 li
970.731 262.463 li
970.733 262.468 li
970.336 261.306 li
970.338 261.312 li
969.927 260.156 li
969.929 260.162 li
969.505 259.012 li
969.507 259.018 li
969.069 257.876 li
969.071 257.881 li
968.62 256.746 li
968.623 256.751 li
968.158 255.622 li
968.161 255.628 li
967.683 254.506 li
967.686 254.512 li
967.195 253.397 li
967.198 253.402 li
966.694 252.295 li
966.697 252.3 li
966.18 251.2 li
966.183 251.205 li
965.654 250.113 li
965.656 250.118 li
965.115 249.033 li
965.117 249.038 li
964.563 247.96 li
964.566 247.965 li
963.999 246.895 li
964.002 246.901 li
963.422 245.838 li
963.425 245.843 li
962.834 244.789 li
962.837 244.794 li
962.233 243.748 li
962.236 243.753 li
961.62 242.714 li
961.623 242.72 li
960.996 241.689 li
960.999 241.694 li
960.359 240.672 li
960.362 240.678 li
959.711 239.664 li
959.714 239.669 li
959.051 238.664 li
959.054 238.669 li
958.38 237.672 li
958.383 237.677 li
957.697 236.689 li
957.7 236.694 li
957.002 235.715 li
957.006 235.72 li
956.297 234.75 li
956.301 234.754 li
955.58 233.793 li
955.584 233.798 li
954.853 232.846 li
954.856 232.85 li
954.114 231.907 li
954.118 231.912 li
953.365 230.978 li
953.368 230.983 li
952.604 230.058 li
952.608 230.063 li
951.834 229.148 li
951.837 229.152 li
951.052 228.247 li
951.056 228.251 li
950.26 227.356 li
950.264 227.36 li
949.458 226.474 li
949.462 226.478 li
948.645 225.602 li
948.649 225.607 li
947.822 224.74 li
947.826 224.745 li
946.989 223.888 li
946.994 223.893 li
946.147 223.047 li
946.151 223.051 li
945.294 222.215 li
945.298 222.219 li
944.431 221.394 li
944.436 221.398 li
943.559 220.583 li
943.563 220.587 li
942.677 219.782 li
942.682 219.786 li
941.786 218.993 li
941.79 218.996 li
940.885 218.213 li
940.89 218.217 li
939.975 217.445 li
939.98 217.449 li
939.056 216.688 li
939.06 216.691 li
938.127 215.941 li
938.132 215.945 li
937.19 215.206 li
937.195 215.209 li
936.244 214.481 li
936.249 214.485 li
935.289 213.768 li
935.293 213.772 li
934.325 213.067 li
934.33 213.07 li
933.352 212.377 li
933.357 212.38 li
932.371 211.698 li
932.376 211.701 li
931.382 211.031 li
931.387 211.035 li
930.384 210.376 li
930.389 210.379 li
929.378 209.733 li
929.383 209.736 li
928.364 209.101 li
928.369 209.105 li
927.342 208.482 li
927.347 208.485 li
926.312 207.875 li
926.317 207.878 li
925.274 207.28 li
925.279 207.283 li
924.228 206.698 li
924.233 206.701 li
923.174 206.128 li
923.18 206.131 li
922.114 205.57 li
922.119 205.573 li
921.045 205.025 li
921.051 205.028 li
919.969 204.493 li
919.975 204.496 li
918.886 203.974 li
918.892 203.977 li
917.796 203.468 li
917.802 203.47 li
916.699 202.975 li
916.704 202.977 li
915.594 202.494 li
915.6 202.497 li
914.483 202.028 li
914.489 202.03 li
913.365 201.574 li
913.371 201.576 li
912.241 201.134 li
912.247 201.136 li
911.109 200.707 li
911.115 200.709 li
909.972 200.294 li
909.978 200.296 li
908.828 199.895 li
908.834 199.897 li
907.677 199.509 li
907.683 199.511 li
906.521 199.138 li
906.527 199.14 li
905.358 198.78 li
905.364 198.782 li
904.189 198.437 li
904.195 198.439 li
903.015 198.108 li
903.021 198.109 li
901.834 197.793 li
901.84 197.794 li
900.648 197.492 li
900.654 197.494 li
899.456 197.206 li
899.462 197.208 li
898.259 196.935 li
898.265 196.936 li
897.056 196.678 li
897.062 196.68 li
895.848 196.437 li
895.854 196.438 li
894.635 196.21 li
894.641 196.211 li
893.416 195.998 li
893.422 195.999 li
892.193 195.801 li
892.199 195.802 li
890.964 195.619 li
890.97 195.62 li
889.731 195.453 li
889.737 195.453 li
888.493 195.302 li
888.499 195.302 li
887.25 195.166 li
887.256 195.167 li
886.002 195.046 li
886.009 195.047 li
884.751 194.942 li
884.757 194.942 li
883.495 194.853 li
883.501 194.854 li
882.234 194.781 li
882.24 194.781 li
880.969 194.724 li
880.976 194.724 li
879.701 194.683 li
879.707 194.684 li
878.428 194.659 li
878.434 194.659 li
877.151 194.651 li
877.158 194.651 li
875.875 194.659 li
875.881 194.659 li
874.602 194.684 li
874.608 194.683 li
873.333 194.724 li
873.34 194.724 li
872.069 194.781 li
872.075 194.781 li
870.808 194.854 li
870.815 194.853 li
869.552 194.942 li
869.558 194.942 li
868.3 195.047 li
868.307 195.046 li
867.053 195.167 li
867.059 195.166 li
865.81 195.302 li
865.817 195.302 li
864.572 195.453 li
864.578 195.453 li
863.339 195.62 li
863.345 195.619 li
862.11 195.802 li
862.117 195.801 li
860.887 195.999 li
860.893 195.998 li
859.668 196.211 li
859.675 196.21 li
858.455 196.438 li
858.461 196.437 li
857.247 196.68 li
857.253 196.678 li
856.044 196.936 li
856.05 196.935 li
854.847 197.208 li
854.853 197.206 li
853.655 197.494 li
853.661 197.492 li
852.469 197.794 li
852.475 197.793 li
851.289 198.109 li
851.295 198.108 li
850.114 198.439 li
850.12 198.437 li
848.945 198.782 li
848.951 198.78 li
847.783 199.14 li
847.789 199.138 li
846.626 199.511 li
846.632 199.509 li
845.476 199.897 li
845.482 199.895 li
844.332 200.296 li
844.337 200.294 li
843.194 200.709 li
843.2 200.707 li
842.063 201.136 li
842.068 201.134 li
840.938 201.576 li
840.944 201.574 li
839.82 202.03 li
839.826 202.028 li
838.709 202.497 li
838.715 202.494 li
837.605 202.977 li
837.611 202.975 li
836.508 203.47 li
836.513 203.468 li
835.417 203.977 li
835.423 203.974 li
834.334 204.496 li
834.34 204.493 li
833.259 205.028 li
833.264 205.025 li
832.19 205.573 li
832.196 205.57 li
831.129 206.131 li
831.135 206.128 li
830.076 206.701 li
830.081 206.698 li
829.03 207.283 li
829.036 207.28 li
827.992 207.878 li
827.998 207.875 li
826.962 208.485 li
826.967 208.482 li
825.94 209.105 li
825.945 209.101 li
824.926 209.736 li
824.931 209.733 li
823.92 210.379 li
823.925 210.376 li
822.922 211.035 li
822.927 211.031 li
821.933 211.701 li
821.938 211.698 li
820.952 212.38 li
820.957 212.377 li
819.98 213.07 li
819.984 213.067 li
819.016 213.772 li
819.021 213.768 li
818.061 214.485 li
818.065 214.481 li
817.114 215.209 li
817.119 215.206 li
816.177 215.945 li
816.182 215.941 li
815.249 216.691 li
815.253 216.688 li
814.33 217.449 li
814.334 217.445 li
813.42 218.217 li
813.424 218.213 li
812.519 218.996 li
812.523 218.993 li
811.628 219.786 li
811.632 219.782 li
810.746 220.587 li
810.75 220.583 li
809.874 221.398 li
809.878 221.394 li
809.011 222.219 li
809.015 222.215 li
808.158 223.051 li
808.163 223.047 li
807.316 223.893 li
807.32 223.888 li
806.483 224.745 li
806.487 224.74 li
805.66 225.607 li
805.664 225.602 li
804.847 226.478 li
804.851 226.474 li
804.045 227.36 li
804.049 227.356 li
803.253 228.251 li
803.257 228.247 li
802.472 229.152 li
802.476 229.148 li
801.701 230.063 li
801.705 230.058 li
800.941 230.983 li
800.945 230.978 li
800.191 231.912 li
800.195 231.907 li
799.453 232.85 li
799.456 232.846 li
798.725 233.798 li
798.729 233.793 li
798.009 234.754 li
798.012 234.75 li
797.303 235.72 li
797.307 235.715 li
796.609 236.694 li
796.612 236.689 li
795.926 237.677 li
795.93 237.672 li
795.255 238.669 li
795.258 238.664 li
794.595 239.669 li
794.598 239.664 li
793.947 240.678 li
793.95 240.672 li
793.31 241.694 li
793.314 241.689 li
792.686 242.72 li
792.689 242.714 li
792.073 243.753 li
792.076 243.748 li
791.472 244.794 li
791.475 244.789 li
790.884 245.843 li
790.887 245.838 li
790.308 246.901 li
790.31 246.895 li
789.744 247.965 li
789.746 247.96 li
789.192 249.038 li
789.195 249.033 li
788.653 250.118 li
788.656 250.113 li
788.126 251.205 li
788.129 251.2 li
787.613 252.3 li
787.615 252.295 li
787.112 253.402 li
787.114 253.397 li
786.624 254.512 li
786.626 254.506 li
786.149 255.628 li
786.151 255.622 li
785.687 256.751 li
785.689 256.746 li
785.238 257.881 li
785.24 257.876 li
784.802 259.018 li
784.804 259.012 li
784.38 260.162 li
784.382 260.156 li
783.971 261.312 li
783.973 261.306 li
783.576 262.468 li
783.578 262.463 li
783.195 263.631 li
783.197 263.626 li
782.827 264.801 li
782.829 264.795 li
782.474 265.976 li
782.475 265.97 li
782.134 267.157 li
782.135 267.152 li
781.808 268.345 li
781.81 268.339 li
781.497 269.538 li
781.498 269.532 li
781.199 270.737 li
781.201 270.731 li
780.916 271.942 li
780.918 271.936 li
780.648 273.153 li
780.649 273.147 li
780.394 274.369 li
780.395 274.363 li
780.154 275.59 li
780.156 275.584 li
779.93 276.817 li
779.931 276.81 li
779.72 278.048 li
779.721 278.042 li
779.525 279.285 li
779.526 279.279 li
779.345 280.527 li
779.346 280.521 li
779.181 281.774 li
779.182 281.768 li
779.031 283.026 li
779.032 283.019 li
778.897 284.282 li
778.898 284.276 li
778.779 285.543 li
778.779 285.537 li
778.675 286.808 li
778.676 286.802 li
778.588 288.078 li
778.588 288.072 li
778.516 289.353 li
778.516 289.346 li
778.46 290.631 li
778.46 290.625 li
778.42 291.914 li
778.42 291.907 li
778.396 293.2 li
778.396 293.194 li
778.388 294.491 li
.800381 .471931 .0461128 0 cmyk
f
.92929 .879301 .889677 .799283 cmyk
%ADOBeginSubsetFont: QAAAAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/QAAAAA+TimesNewRomanPSMT 1 GetGlyphDirectory
92 <001C60D8A8C9B7A73DDE03E4B644C159EB8B647E016C26B087177A3C5BC5
BAF02161182070C8A4222C2E1ED9B95B756DF22232FA7BE5897B7C6D57479511
9A3B50894B8B0E1A184B7636697D129D88C76A3FD42BABE719D85F7DC372AB50
B8B16D988DA863EE6A5B7454A406C9D5E815158A5786509E6DF27377A83F3454
DD6905EA3123CBA5BA0D4772C12767864CF2C5FEDE2AFF05D3CC0534D74E6AE9
DBF9F3B49677449A761BE771C9C1AB2D4DC994988233EE24B9E175796C6F1351
8A71BC990F312D4821883A95164BCE1683B85434AFA8> |
!
end
end end
%ADOEndSubsetFont
DUZMCM+TimesNewRomanPSMT [32.05 0 0 -32.05 0 0 ]msf
814.162 305.289 mo
(\000G)sh
830.162 305.289 mo
(\000H)sh
844.362 305.289 mo
(\000V)sh
856.812 305.289 mo
(\000W)sh
865.712 305.289 mo
(\000U)sh
876.362 305.289 mo
(\000R)sh
892.362 305.289 mo
(\000\\)sh
908.362 305.289 mo
(\000H)sh
922.562 305.289 mo
(\000G)sh
0 .9617 .904814 0 cmyk
%ADOBeginSubsetFont: QAAAAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/QAAAAA+TimesNewRomanPSMT 3 GetGlyphDirectory
42 <001C60D8A8C9B6079F6D6E36005945EC7274CF8CD5EF5B42D280E6D8A4F6
086ADC4B88F4BA16F6A237691F3F760A6129A67DCE9322616B1D7BB211155112
38376B94C01432A999E95ACF02B9743B28C7A3C8109C25013AEA47EC71807E3B
FE6B26986496C6B96A2458AF130FF55F6939E40BA894719E24A717462CC4A00B
11ADE5809AB1E0B4D7805897BE50087CD64F5AEA7744526E08B0D657538988C4
1BFE39A8735842D620E001E1A863F676AFB361CF4C81718CBC4A0CC5AC0D51A3
4ACA7D8BBE5B5D6E8D466D858B118FBBA2161DB0F7E151EB0958EF2C5C3F> |
36 <001C60D8A8C9B6079F6D0C3DD1DA701F2FEF50BE2CCF679467EAB463D54C
495B1FC98737C4805A67EB9B211579E256E1BCD120087B7083980EFC748D95F1
5A9738703A6CB4125517112E8D63595864B93D16C7B325AB1759098D24D8A43A
63AEECA533864B64013C499C4207455D5210408E58672A172F78CB14D7398507
1102DFA93B6532> |
50 <001C60D8A8C9B6079F6288DCC34B8AB15434B53D5CBCF7E29104F391BE15
72E1D4E07ABEE690B714C43DA0F68F9B727CD1B8007FE243EEEBD45E7815504A
3113BAFAC54AC3D3B019A1C9ACF716BD3362CCEE1A09F2069AE9AF5406AA47EF
076128BEB6A74EB29D02BFBE8F43F41B56E48CC0FA84987A887327DB516D9441
F2C6BDCB9AC2AD82E8> |
!
end
end end
%ADOEndSubsetFont
DUZMCM+TimesNewRomanPSMT [32.05 0 0 -32.05 0 0 ]msf
31.8592 165.845 mo
(\000*)sh
54.9592 165.845 mo
(\000D)sh
69.1592 165.845 mo
(\000X)sh
85.1592 165.845 mo
(\000V)sh
97.6092 165.845 mo
(\000V)sh
110.059 165.845 mo
(\000L)sh
118.959 165.845 mo
(\000D)sh
133.159 165.845 mo
(\000Q)sh
149.159 165.845 mo
(\000\003)sh
31.8592 204.245 mo
(\000$)sh
54.9592 204.245 mo
(\000W)sh
63.8592 204.245 mo
(\000W)sh
72.7592 204.245 mo
(\000D)sh
86.9592 204.245 mo
(\000F)sh
101.159 204.245 mo
(\000N)sh
20.4582 481.993 mo
(\0002)sh
43.5582 481.993 mo
(\000P)sh
68.4582 481.993 mo
(\000Q)sh
84.4582 481.993 mo
(\000L)sh
93.3582 481.993 mo
(\000V)sh
105.808 481.993 mo
(\000F)sh
120.008 481.993 mo
(\000L)sh
128.908 481.993 mo
(\000H)sh
143.108 481.993 mo
(\000Q)sh
159.108 481.993 mo
(\000W)sh
168.008 481.993 mo
(\000\003)sh
20.4582 520.393 mo
(\000$)sh
43.5582 520.393 mo
(\000W)sh
52.4582 520.393 mo
(\000W)sh
61.3582 520.393 mo
(\000D)sh
75.5582 520.393 mo
(\000F)sh
89.7582 520.393 mo
(\000N)sh
.92929 .879301 .889677 .799283 cmyk
%ADOBeginSubsetFont: QAAAAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/QAAAAA+TimesNewRomanPSMT 1 GetGlyphDirectory
46 <001C60D8A8C9B6079F6DAD6439E719A5649ADA7D8B9E734C715565956F15
B5C4CFBB8891AD82AF5B965DC9DBF0762D43C17265BBD3CD422561D8093800D4
7C30E7401B7FF953462B20D5841B49861E5477C9C06DC8DEA98C62C73A16DCD1
0A99A3BB2728EF5C45B4F29723E3FD20A045034CDC5B2823010371DE4EA42A53
65F63BDAAE6E06349967F6DD5B6C651FF133F1AC111407BA069118B1E1EF88EC
E867D30D2AC6A5EEB5F5B14A4020A8D1688A963E3E2FF5DFE6441AA27FDF0183
EE620579E7103491C7EBC49E5703B87C43F0A841871BC2D6A7D289877EB3748B
6B80FD93562885CC9F2182E80755BBCE3303DAD528BFBDFEB3202E48EDCFB93B
C1> |
!
end
end end
%ADOEndSubsetFont
DUZMCM+TimesNewRomanPSMT [32.05 0 0 -32.05 0 0 ]msf
122.346 572.857 mo
(\000.)sh
145.446 572.857 mo
(\000Q)sh
161.446 572.857 mo
(\000R)sh
177.446 572.857 mo
(\000Z)sh
200.546 572.857 mo
(\000\003)sh
208.546 572.857 mo
(\000H)sh
222.746 572.857 mo
(\000Y)sh
238.746 572.857 mo
(\000H)sh
252.946 572.857 mo
(\000U)sh
263.596 572.857 mo
(\000\\)sh
279.596 572.857 mo
(\000W)sh
288.496 572.857 mo
(\000K)sh
304.496 572.857 mo
(\000L)sh
313.396 572.857 mo
(\000Q)sh
329.396 572.857 mo
(\000J)sh
345.396 572.857 mo
(\000\003)sh
122.346 611.257 mo
(\000D)sh
136.546 611.257 mo
(\000E)sh
152.546 611.257 mo
(\000R)sh
168.546 611.257 mo
(\000X)sh
184.546 611.257 mo
(\000W)sh
193.446 611.257 mo
(\000\003)sh
201.446 611.257 mo
(\000W)sh
210.346 611.257 mo
(\000K)sh
226.346 611.257 mo
(\000H)sh
240.546 611.257 mo
(\000\003)sh
248.546 611.257 mo
(\000Q)sh
264.546 611.257 mo
(\000H)sh
278.746 611.257 mo
(\000W)sh
287.646 611.257 mo
(\000Z)sh
310.746 611.257 mo
(\000R)sh
326.746 611.257 mo
(\000U)sh
337.396 611.257 mo
(\000N)sh
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
/DUZMCM+TimesNewRomanPSMT-Identity-H uf
/DUZMCM+TimesNewRomanPSMT /CIDFont ur
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
